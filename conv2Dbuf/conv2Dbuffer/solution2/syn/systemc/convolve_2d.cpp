// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "convolve_2d.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic convolve_2d::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic convolve_2d::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> convolve_2d::ap_ST_fsm_state1 = "1";
const sc_lv<9> convolve_2d::ap_ST_fsm_state2 = "10";
const sc_lv<9> convolve_2d::ap_ST_fsm_state3 = "100";
const sc_lv<9> convolve_2d::ap_ST_fsm_pp0_stage0 = "1000";
const sc_lv<9> convolve_2d::ap_ST_fsm_pp0_stage1 = "10000";
const sc_lv<9> convolve_2d::ap_ST_fsm_pp0_stage2 = "100000";
const sc_lv<9> convolve_2d::ap_ST_fsm_pp0_stage3 = "1000000";
const sc_lv<9> convolve_2d::ap_ST_fsm_pp0_stage4 = "10000000";
const sc_lv<9> convolve_2d::ap_ST_fsm_state13 = "100000000";
const sc_lv<32> convolve_2d::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool convolve_2d::ap_const_boolean_1 = true;
const sc_lv<32> convolve_2d::ap_const_lv32_6 = "110";
const bool convolve_2d::ap_const_boolean_0 = false;
const sc_lv<1> convolve_2d::ap_const_lv1_1 = "1";
const sc_lv<32> convolve_2d::ap_const_lv32_4 = "100";
const sc_lv<1> convolve_2d::ap_const_lv1_0 = "0";
const sc_lv<32> convolve_2d::ap_const_lv32_5 = "101";
const sc_lv<32> convolve_2d::ap_const_lv32_7 = "111";
const sc_lv<32> convolve_2d::ap_const_lv32_3 = "11";
const sc_lv<32> convolve_2d::ap_const_lv32_1 = "1";
const sc_lv<32> convolve_2d::ap_const_lv32_2 = "10";
const sc_lv<2> convolve_2d::ap_const_lv2_0 = "00";
const sc_lv<3> convolve_2d::ap_const_lv3_0 = "000";
const sc_lv<6> convolve_2d::ap_const_lv6_0 = "000000";
const sc_lv<64> convolve_2d::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> convolve_2d::ap_const_lv64_1 = "1";
const sc_lv<64> convolve_2d::ap_const_lv64_2 = "10";
const sc_lv<64> convolve_2d::ap_const_lv64_3 = "11";
const sc_lv<64> convolve_2d::ap_const_lv64_4 = "100";
const sc_lv<64> convolve_2d::ap_const_lv64_5 = "101";
const sc_lv<64> convolve_2d::ap_const_lv64_6 = "110";
const sc_lv<64> convolve_2d::ap_const_lv64_7 = "111";
const sc_lv<64> convolve_2d::ap_const_lv64_8 = "1000";
const sc_lv<2> convolve_2d::ap_const_lv2_2 = "10";
const sc_lv<2> convolve_2d::ap_const_lv2_1 = "1";
const sc_lv<3> convolve_2d::ap_const_lv3_7 = "111";
const sc_lv<3> convolve_2d::ap_const_lv3_1 = "1";
const sc_lv<6> convolve_2d::ap_const_lv6_31 = "110001";
const sc_lv<6> convolve_2d::ap_const_lv6_1 = "1";
const sc_lv<4> convolve_2d::ap_const_lv4_7 = "111";
const sc_lv<32> convolve_2d::ap_const_lv32_8 = "1000";

convolve_2d::convolve_2d(sc_module_name name) : sc_module(name), mVcdFile(0) {
    line_buf_U = new convolve_2d_line_bkb("line_buf_U");
    line_buf_U->clk(ap_clk);
    line_buf_U->reset(ap_rst);
    line_buf_U->address0(line_buf_address0);
    line_buf_U->ce0(line_buf_ce0);
    line_buf_U->we0(line_buf_we0);
    line_buf_U->d0(line_buf_d0);
    line_buf_U->q0(line_buf_q0);
    line_buf_U->address1(line_buf_address1);
    line_buf_U->ce1(line_buf_ce1);
    line_buf_U->we1(line_buf_we1);
    line_buf_U->d1(line_buf_q1);
    line_buf_U->q1(line_buf_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_710 );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_710 );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_01001);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_741_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage3_11001);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_741_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_741_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state11_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state12_pp0_stage3_iter1);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( or_cond_reg_741_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage1_iter0);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( exitcond_flatten_reg_710 );

    SC_METHOD(thread_ap_block_state6_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state4);
    sensitive << ( exitcond_flatten_fu_384_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_indvar_flatten_phi_fu_273_p4);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_710 );
    sensitive << ( indvar_flatten_reg_269 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( indvar_flatten_next_reg_714 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_x_assign_phi_fu_295_p4);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_710 );
    sensitive << ( x_assign_reg_291 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( x_reg_808 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_y_assign_phi_fu_284_p4);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( exitcond_flatten_reg_710 );
    sensitive << ( y_assign_reg_280 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( y_assign_mid2_reg_724 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_exitcond1_fu_319_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_247 );

    SC_METHOD(thread_exitcond9_fu_349_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_258 );

    SC_METHOD(thread_exitcond_flatten_fu_384_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_273_p4 );

    SC_METHOD(thread_exitcond_fu_417_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_384_p2 );
    sensitive << ( ap_phi_mux_x_assign_phi_fu_295_p4 );

    SC_METHOD(thread_i_1_fu_325_p2);
    sensitive << ( i_reg_247 );

    SC_METHOD(thread_in_stream_V_blk_n);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( exitcond_flatten_reg_710 );

    SC_METHOD(thread_in_stream_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_710 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_indvar_flatten_next_fu_390_p2);
    sensitive << ( ap_phi_mux_indvar_flatten_phi_fu_273_p4 );

    SC_METHOD(thread_j_1_fu_355_p2);
    sensitive << ( j_reg_258 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_kernel_address1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_kernel_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buf_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( line_buf_addr_2_reg_735 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_11_cast_fu_370_p1 );
    sensitive << ( tmp_8_fu_459_p1 );

    SC_METHOD(thread_line_buf_address1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( line_buf_addr_1_reg_729 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_10_cast_fu_474_p1 );

    SC_METHOD(thread_line_buf_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_line_buf_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_line_buf_d0);
    sensitive << ( in_stream_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_line_buf_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_710 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond9_fu_349_p2 );

    SC_METHOD(thread_line_buf_we1);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten_reg_710 );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_or_cond_fu_485_p2);
    sensitive << ( tmp_1_mid2_fu_443_p3 );
    sensitive << ( tmp_7_fu_479_p2 );

    SC_METHOD(thread_out_stream_V_blk_n);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( or_cond_reg_741_pp0_iter1_reg );

    SC_METHOD(thread_out_stream_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_741_pp0_iter1_reg );
    sensitive << ( tmp4_reg_828 );
    sensitive << ( ap_block_pp0_stage3_01001 );
    sensitive << ( tmp1_fu_582_p2 );

    SC_METHOD(thread_out_stream_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( or_cond_reg_741_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_tmp1_fu_582_p2);
    sensitive << ( tmp2_reg_783 );
    sensitive << ( tmp3_reg_803 );

    SC_METHOD(thread_tmp2_fu_516_p2);
    sensitive << ( tmp_17_0_i_reg_763 );
    sensitive << ( tmp_17_0_1_i_reg_768 );

    SC_METHOD(thread_tmp3_fu_539_p2);
    sensitive << ( tmp_17_0_2_i_reg_773 );
    sensitive << ( tmp_17_1_i_reg_778 );

    SC_METHOD(thread_tmp4_fu_576_p2);
    sensitive << ( tmp6_fu_571_p2 );
    sensitive << ( tmp5_fu_563_p2 );

    SC_METHOD(thread_tmp5_fu_563_p2);
    sensitive << ( tmp_17_1_1_i_reg_793 );
    sensitive << ( tmp_17_1_2_i_reg_798 );

    SC_METHOD(thread_tmp6_fu_571_p2);
    sensitive << ( tmp_17_2_i_reg_813 );
    sensitive << ( tmp7_fu_567_p2 );

    SC_METHOD(thread_tmp7_fu_567_p2);
    sensitive << ( tmp_17_2_1_i_reg_818 );
    sensitive << ( tmp_17_2_2_i_reg_823 );

    SC_METHOD(thread_tmp_10_cast_fu_474_p1);
    sensitive << ( tmp_1_fu_468_p2 );

    SC_METHOD(thread_tmp_11_cast_fu_370_p1);
    sensitive << ( tmp_2_fu_365_p2 );

    SC_METHOD(thread_tmp_17_0_1_i_fu_500_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( window_0_1_fu_104 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_tmp_17_0_1_i_fu_500_p2);
    sensitive << ( reg_315 );
    sensitive << ( tmp_17_0_1_i_fu_500_p1 );

    SC_METHOD(thread_tmp_17_0_2_i_fu_506_p2);
    sensitive << ( reg_311 );
    sensitive << ( window_0_2_reg_751 );

    SC_METHOD(thread_tmp_17_0_i_fu_495_p2);
    sensitive << ( reg_311 );
    sensitive << ( window_0_0_load_reg_695 );

    SC_METHOD(thread_tmp_17_1_1_i_fu_528_p1);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( window_1_1_fu_116 );

    SC_METHOD(thread_tmp_17_1_1_i_fu_528_p2);
    sensitive << ( reg_311 );
    sensitive << ( tmp_17_1_1_i_fu_528_p1 );

    SC_METHOD(thread_tmp_17_1_2_i_fu_534_p2);
    sensitive << ( reg_315 );
    sensitive << ( window_1_2_reg_757 );

    SC_METHOD(thread_tmp_17_1_i_fu_511_p2);
    sensitive << ( reg_315 );
    sensitive << ( window_1_0_load_reg_705 );

    SC_METHOD(thread_tmp_17_2_1_i_fu_553_p2);
    sensitive << ( reg_315 );
    sensitive << ( window_2_1_load_1_reg_788 );

    SC_METHOD(thread_tmp_17_2_2_i_fu_558_p2);
    sensitive << ( reg_311 );
    sensitive << ( tmp_reg_745 );

    SC_METHOD(thread_tmp_17_2_i_fu_548_p2);
    sensitive << ( reg_311 );
    sensitive << ( window_2_0_load_reg_700 );

    SC_METHOD(thread_tmp_1_fu_468_p2);
    sensitive << ( tmp_8_cast_fu_464_p1 );

    SC_METHOD(thread_tmp_1_mid1_fu_431_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_384_p2 );
    sensitive << ( y_fu_411_p2 );

    SC_METHOD(thread_tmp_1_mid2_fu_443_p3);
    sensitive << ( exitcond_fu_417_p2 );
    sensitive << ( tmp_1_mid1_fu_431_p2 );
    sensitive << ( tmp_s_fu_437_p2 );

    SC_METHOD(thread_tmp_2_fu_365_p2);
    sensitive << ( tmp_9_reg_646 );
    sensitive << ( tmp_3_cast_fu_361_p1 );

    SC_METHOD(thread_tmp_3_cast_fu_361_p1);
    sensitive << ( j_reg_258 );

    SC_METHOD(thread_tmp_6_fu_335_p3);
    sensitive << ( i_reg_247 );

    SC_METHOD(thread_tmp_7_fu_479_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_384_p2 );
    sensitive << ( x_assign_mid2_fu_423_p3 );

    SC_METHOD(thread_tmp_8_cast_fu_464_p1);
    sensitive << ( x_assign_mid2_fu_423_p3 );

    SC_METHOD(thread_tmp_8_fu_459_p1);
    sensitive << ( x_assign_mid2_fu_423_p3 );

    SC_METHOD(thread_tmp_9_fu_343_p2);
    sensitive << ( tmp_6_fu_335_p3 );
    sensitive << ( tmp_cast_fu_331_p1 );

    SC_METHOD(thread_tmp_cast_fu_331_p1);
    sensitive << ( i_reg_247 );

    SC_METHOD(thread_tmp_s_fu_437_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( exitcond_flatten_fu_384_p2 );
    sensitive << ( ap_phi_mux_y_assign_phi_fu_284_p4 );

    SC_METHOD(thread_x_assign_mid2_fu_423_p3);
    sensitive << ( ap_phi_mux_x_assign_phi_fu_295_p4 );
    sensitive << ( exitcond_fu_417_p2 );

    SC_METHOD(thread_x_fu_543_p2);
    sensitive << ( x_assign_mid2_reg_719 );

    SC_METHOD(thread_y_assign_mid2_fu_451_p3);
    sensitive << ( ap_phi_mux_y_assign_phi_fu_284_p4 );
    sensitive << ( exitcond_fu_417_p2 );
    sensitive << ( y_fu_411_p2 );

    SC_METHOD(thread_y_fu_411_p2);
    sensitive << ( ap_phi_mux_y_assign_phi_fu_284_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond1_fu_319_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_flatten_fu_384_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( exitcond9_fu_349_p2 );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "convolve_2d_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_stream_V_din, "(port)out_stream_V_din");
    sc_trace(mVcdFile, out_stream_V_full_n, "(port)out_stream_V_full_n");
    sc_trace(mVcdFile, out_stream_V_write, "(port)out_stream_V_write");
    sc_trace(mVcdFile, in_stream_V_dout, "(port)in_stream_V_dout");
    sc_trace(mVcdFile, in_stream_V_empty_n, "(port)in_stream_V_empty_n");
    sc_trace(mVcdFile, in_stream_V_read, "(port)in_stream_V_read");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
    sc_trace(mVcdFile, kernel_address1, "(port)kernel_address1");
    sc_trace(mVcdFile, kernel_ce1, "(port)kernel_ce1");
    sc_trace(mVcdFile, kernel_q1, "(port)kernel_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, out_stream_V_blk_n, "out_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, or_cond_reg_741, "or_cond_reg_741");
    sc_trace(mVcdFile, or_cond_reg_741_pp0_iter1_reg, "or_cond_reg_741_pp0_iter1_reg");
    sc_trace(mVcdFile, in_stream_V_blk_n, "in_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, exitcond_flatten_reg_710, "exitcond_flatten_reg_710");
    sc_trace(mVcdFile, indvar_flatten_reg_269, "indvar_flatten_reg_269");
    sc_trace(mVcdFile, y_assign_reg_280, "y_assign_reg_280");
    sc_trace(mVcdFile, x_assign_reg_291, "x_assign_reg_291");
    sc_trace(mVcdFile, reg_311, "reg_311");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage1_iter0, "ap_block_state5_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage1_iter1, "ap_block_state10_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage2_iter0, "ap_block_state6_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage2_iter1, "ap_block_state11_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage3_iter0, "ap_block_state7_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage3_iter1, "ap_block_state12_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage4_iter0, "ap_block_state8_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter0, "ap_block_state4_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter1, "ap_block_state9_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, reg_315, "reg_315");
    sc_trace(mVcdFile, exitcond1_fu_319_p2, "exitcond1_fu_319_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_1_fu_325_p2, "i_1_fu_325_p2");
    sc_trace(mVcdFile, i_1_reg_641, "i_1_reg_641");
    sc_trace(mVcdFile, tmp_9_fu_343_p2, "tmp_9_fu_343_p2");
    sc_trace(mVcdFile, tmp_9_reg_646, "tmp_9_reg_646");
    sc_trace(mVcdFile, j_1_fu_355_p2, "j_1_fu_355_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, window_0_0_load_reg_695, "window_0_0_load_reg_695");
    sc_trace(mVcdFile, window_2_0_load_reg_700, "window_2_0_load_reg_700");
    sc_trace(mVcdFile, window_1_0_load_reg_705, "window_1_0_load_reg_705");
    sc_trace(mVcdFile, exitcond_flatten_fu_384_p2, "exitcond_flatten_fu_384_p2");
    sc_trace(mVcdFile, indvar_flatten_next_fu_390_p2, "indvar_flatten_next_fu_390_p2");
    sc_trace(mVcdFile, indvar_flatten_next_reg_714, "indvar_flatten_next_reg_714");
    sc_trace(mVcdFile, x_assign_mid2_fu_423_p3, "x_assign_mid2_fu_423_p3");
    sc_trace(mVcdFile, x_assign_mid2_reg_719, "x_assign_mid2_reg_719");
    sc_trace(mVcdFile, y_assign_mid2_fu_451_p3, "y_assign_mid2_fu_451_p3");
    sc_trace(mVcdFile, y_assign_mid2_reg_724, "y_assign_mid2_reg_724");
    sc_trace(mVcdFile, line_buf_addr_1_reg_729, "line_buf_addr_1_reg_729");
    sc_trace(mVcdFile, line_buf_addr_2_reg_735, "line_buf_addr_2_reg_735");
    sc_trace(mVcdFile, or_cond_fu_485_p2, "or_cond_fu_485_p2");
    sc_trace(mVcdFile, tmp_reg_745, "tmp_reg_745");
    sc_trace(mVcdFile, line_buf_q0, "line_buf_q0");
    sc_trace(mVcdFile, window_0_2_reg_751, "window_0_2_reg_751");
    sc_trace(mVcdFile, line_buf_q1, "line_buf_q1");
    sc_trace(mVcdFile, window_1_2_reg_757, "window_1_2_reg_757");
    sc_trace(mVcdFile, tmp_17_0_i_fu_495_p2, "tmp_17_0_i_fu_495_p2");
    sc_trace(mVcdFile, tmp_17_0_i_reg_763, "tmp_17_0_i_reg_763");
    sc_trace(mVcdFile, tmp_17_0_1_i_fu_500_p2, "tmp_17_0_1_i_fu_500_p2");
    sc_trace(mVcdFile, tmp_17_0_1_i_reg_768, "tmp_17_0_1_i_reg_768");
    sc_trace(mVcdFile, tmp_17_0_2_i_fu_506_p2, "tmp_17_0_2_i_fu_506_p2");
    sc_trace(mVcdFile, tmp_17_0_2_i_reg_773, "tmp_17_0_2_i_reg_773");
    sc_trace(mVcdFile, tmp_17_1_i_fu_511_p2, "tmp_17_1_i_fu_511_p2");
    sc_trace(mVcdFile, tmp_17_1_i_reg_778, "tmp_17_1_i_reg_778");
    sc_trace(mVcdFile, tmp2_fu_516_p2, "tmp2_fu_516_p2");
    sc_trace(mVcdFile, tmp2_reg_783, "tmp2_reg_783");
    sc_trace(mVcdFile, window_2_1_load_1_reg_788, "window_2_1_load_1_reg_788");
    sc_trace(mVcdFile, tmp_17_1_1_i_fu_528_p2, "tmp_17_1_1_i_fu_528_p2");
    sc_trace(mVcdFile, tmp_17_1_1_i_reg_793, "tmp_17_1_1_i_reg_793");
    sc_trace(mVcdFile, tmp_17_1_2_i_fu_534_p2, "tmp_17_1_2_i_fu_534_p2");
    sc_trace(mVcdFile, tmp_17_1_2_i_reg_798, "tmp_17_1_2_i_reg_798");
    sc_trace(mVcdFile, tmp3_fu_539_p2, "tmp3_fu_539_p2");
    sc_trace(mVcdFile, tmp3_reg_803, "tmp3_reg_803");
    sc_trace(mVcdFile, x_fu_543_p2, "x_fu_543_p2");
    sc_trace(mVcdFile, x_reg_808, "x_reg_808");
    sc_trace(mVcdFile, tmp_17_2_i_fu_548_p2, "tmp_17_2_i_fu_548_p2");
    sc_trace(mVcdFile, tmp_17_2_i_reg_813, "tmp_17_2_i_reg_813");
    sc_trace(mVcdFile, tmp_17_2_1_i_fu_553_p2, "tmp_17_2_1_i_fu_553_p2");
    sc_trace(mVcdFile, tmp_17_2_1_i_reg_818, "tmp_17_2_1_i_reg_818");
    sc_trace(mVcdFile, tmp_17_2_2_i_fu_558_p2, "tmp_17_2_2_i_fu_558_p2");
    sc_trace(mVcdFile, tmp_17_2_2_i_reg_823, "tmp_17_2_2_i_reg_823");
    sc_trace(mVcdFile, tmp4_fu_576_p2, "tmp4_fu_576_p2");
    sc_trace(mVcdFile, tmp4_reg_828, "tmp4_reg_828");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state4, "ap_condition_pp0_exit_iter0_state4");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, line_buf_address0, "line_buf_address0");
    sc_trace(mVcdFile, line_buf_ce0, "line_buf_ce0");
    sc_trace(mVcdFile, line_buf_we0, "line_buf_we0");
    sc_trace(mVcdFile, line_buf_d0, "line_buf_d0");
    sc_trace(mVcdFile, line_buf_address1, "line_buf_address1");
    sc_trace(mVcdFile, line_buf_ce1, "line_buf_ce1");
    sc_trace(mVcdFile, line_buf_we1, "line_buf_we1");
    sc_trace(mVcdFile, i_reg_247, "i_reg_247");
    sc_trace(mVcdFile, exitcond9_fu_349_p2, "exitcond9_fu_349_p2");
    sc_trace(mVcdFile, j_reg_258, "j_reg_258");
    sc_trace(mVcdFile, ap_phi_mux_indvar_flatten_phi_fu_273_p4, "ap_phi_mux_indvar_flatten_phi_fu_273_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_y_assign_phi_fu_284_p4, "ap_phi_mux_y_assign_phi_fu_284_p4");
    sc_trace(mVcdFile, ap_phi_mux_x_assign_phi_fu_295_p4, "ap_phi_mux_x_assign_phi_fu_295_p4");
    sc_trace(mVcdFile, tmp_11_cast_fu_370_p1, "tmp_11_cast_fu_370_p1");
    sc_trace(mVcdFile, tmp_8_fu_459_p1, "tmp_8_fu_459_p1");
    sc_trace(mVcdFile, tmp_10_cast_fu_474_p1, "tmp_10_cast_fu_474_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage3_01001, "ap_block_pp0_stage3_01001");
    sc_trace(mVcdFile, window_2_1_fu_96, "window_2_1_fu_96");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, window_0_0_fu_100, "window_0_0_fu_100");
    sc_trace(mVcdFile, window_0_1_fu_104, "window_0_1_fu_104");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, window_2_0_fu_108, "window_2_0_fu_108");
    sc_trace(mVcdFile, window_1_0_fu_112, "window_1_0_fu_112");
    sc_trace(mVcdFile, window_1_1_fu_116, "window_1_1_fu_116");
    sc_trace(mVcdFile, tmp_6_fu_335_p3, "tmp_6_fu_335_p3");
    sc_trace(mVcdFile, tmp_cast_fu_331_p1, "tmp_cast_fu_331_p1");
    sc_trace(mVcdFile, tmp_3_cast_fu_361_p1, "tmp_3_cast_fu_361_p1");
    sc_trace(mVcdFile, tmp_2_fu_365_p2, "tmp_2_fu_365_p2");
    sc_trace(mVcdFile, exitcond_fu_417_p2, "exitcond_fu_417_p2");
    sc_trace(mVcdFile, y_fu_411_p2, "y_fu_411_p2");
    sc_trace(mVcdFile, tmp_1_mid1_fu_431_p2, "tmp_1_mid1_fu_431_p2");
    sc_trace(mVcdFile, tmp_s_fu_437_p2, "tmp_s_fu_437_p2");
    sc_trace(mVcdFile, tmp_8_cast_fu_464_p1, "tmp_8_cast_fu_464_p1");
    sc_trace(mVcdFile, tmp_1_fu_468_p2, "tmp_1_fu_468_p2");
    sc_trace(mVcdFile, tmp_1_mid2_fu_443_p3, "tmp_1_mid2_fu_443_p3");
    sc_trace(mVcdFile, tmp_7_fu_479_p2, "tmp_7_fu_479_p2");
    sc_trace(mVcdFile, tmp_17_0_1_i_fu_500_p1, "tmp_17_0_1_i_fu_500_p1");
    sc_trace(mVcdFile, tmp_17_1_1_i_fu_528_p1, "tmp_17_1_1_i_fu_528_p1");
    sc_trace(mVcdFile, tmp7_fu_567_p2, "tmp7_fu_567_p2");
    sc_trace(mVcdFile, tmp6_fu_571_p2, "tmp6_fu_571_p2");
    sc_trace(mVcdFile, tmp5_fu_563_p2, "tmp5_fu_563_p2");
    sc_trace(mVcdFile, tmp1_fu_582_p2, "tmp1_fu_582_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("convolve_2d.hdltvin.dat");
    mHdltvoutHandle.open("convolve_2d.hdltvout.dat");
}

convolve_2d::~convolve_2d() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete line_buf_U;
}

void convolve_2d::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state4.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_319_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_319_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_349_p2.read()))) {
        i_reg_247 = i_1_reg_641.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_247 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_319_p2.read()))) {
        indvar_flatten_reg_269 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_reg_269 = indvar_flatten_next_reg_714.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_319_p2.read()))) {
        j_reg_258 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_349_p2.read()))) {
        j_reg_258 = j_1_fu_355_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_319_p2.read()))) {
        x_assign_reg_291 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        x_assign_reg_291 = x_reg_808.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_319_p2.read()))) {
        y_assign_reg_280 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        y_assign_reg_280 = y_assign_mid2_reg_724.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_710 = exitcond_flatten_fu_384_p2.read();
        or_cond_reg_741_pp0_iter1_reg = or_cond_reg_741.read();
        window_0_0_load_reg_695 = window_0_0_fu_100.read();
        window_1_0_load_reg_705 = window_1_0_fu_112.read();
        window_2_0_load_reg_700 = window_2_0_fu_108.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_641 = i_1_fu_325_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        indvar_flatten_next_reg_714 = indvar_flatten_next_fu_390_p2.read();
        window_0_0_fu_100 = window_0_1_fu_104.read();
        window_1_0_fu_112 = window_1_1_fu_116.read();
        window_2_0_fu_108 = window_2_1_fu_96.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_384_p2.read()))) {
        line_buf_addr_1_reg_729 =  (sc_lv<4>) (tmp_8_fu_459_p1.read());
        line_buf_addr_2_reg_735 =  (sc_lv<4>) (tmp_10_cast_fu_474_p1.read());
        or_cond_reg_741 = or_cond_fu_485_p2.read();
        x_assign_mid2_reg_719 = x_assign_mid2_fu_423_p3.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_311 = kernel_q0.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)))) {
        reg_315 = kernel_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp2_reg_783 = tmp2_fu_516_p2.read();
        tmp_17_0_2_i_reg_773 = tmp_17_0_2_i_fu_506_p2.read();
        tmp_17_1_i_reg_778 = tmp_17_1_i_fu_511_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        tmp3_reg_803 = tmp3_fu_539_p2.read();
        tmp_17_1_1_i_reg_793 = tmp_17_1_1_i_fu_528_p2.read();
        tmp_17_1_2_i_reg_798 = tmp_17_1_2_i_fu_534_p2.read();
    }
    if ((esl_seteq<1,1,1>(or_cond_reg_741_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp4_reg_828 = tmp4_fu_576_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp_17_0_1_i_reg_768 = tmp_17_0_1_i_fu_500_p2.read();
        tmp_17_0_i_reg_763 = tmp_17_0_i_fu_495_p2.read();
    }
    if ((esl_seteq<1,1,1>(or_cond_reg_741.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_17_2_1_i_reg_818 = tmp_17_2_1_i_fu_553_p2.read();
        tmp_17_2_i_reg_813 = tmp_17_2_i_fu_548_p2.read();
    }
    if ((esl_seteq<1,1,1>(or_cond_reg_741_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_17_2_2_i_reg_823 = tmp_17_2_2_i_fu_558_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_319_p2.read()))) {
        tmp_9_reg_646 = tmp_9_fu_343_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_reg_745 = in_stream_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        window_0_1_fu_104 = window_0_2_reg_751.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        window_0_2_reg_751 = line_buf_q0.read();
        window_1_2_reg_757 = line_buf_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        window_1_1_fu_116 = window_1_2_reg_757.read();
        window_2_1_fu_96 = tmp_reg_745.read();
        window_2_1_load_1_reg_788 = window_2_1_fu_96.read();
        x_reg_808 = x_fu_543_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten_fu_384_p2.read()))) {
        y_assign_mid2_reg_724 = y_assign_mid2_fu_451_p3.read();
    }
}

void convolve_2d::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[3];
}

void convolve_2d::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[4];
}

void convolve_2d::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[5];
}

void convolve_2d::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[6];
}

void convolve_2d::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[7];
}

void convolve_2d::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void convolve_2d::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[8];
}

void convolve_2d::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void convolve_2d::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void convolve_2d::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read()));
}

void convolve_2d::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read()));
}

void convolve_2d::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_pp0_stage3_01001() {
    ap_block_pp0_stage3_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(or_cond_reg_741_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()));
}

void convolve_2d::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(or_cond_reg_741_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()));
}

void convolve_2d::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(or_cond_reg_741_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()));
}

void convolve_2d::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_state10_pp0_stage1_iter1() {
    ap_block_state10_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_state11_pp0_stage2_iter1() {
    ap_block_state11_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_state12_pp0_stage3_iter1() {
    ap_block_state12_pp0_stage3_iter1 = (esl_seteq<1,1,1>(or_cond_reg_741_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()));
}

void convolve_2d::thread_ap_block_state4_pp0_stage0_iter0() {
    ap_block_state4_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_state5_pp0_stage1_iter0() {
    ap_block_state5_pp0_stage1_iter0 = (esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read()));
}

void convolve_2d::thread_ap_block_state6_pp0_stage2_iter0() {
    ap_block_state6_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_state7_pp0_stage3_iter0() {
    ap_block_state7_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_state8_pp0_stage4_iter0() {
    ap_block_state8_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_block_state9_pp0_stage0_iter1() {
    ap_block_state9_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convolve_2d::thread_ap_condition_pp0_exit_iter0_state4() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_384_p2.read())) {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state4 = ap_const_logic_0;
    }
}

void convolve_2d::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void convolve_2d::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void convolve_2d::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void convolve_2d::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void convolve_2d::thread_ap_phi_mux_indvar_flatten_phi_fu_273_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_indvar_flatten_phi_fu_273_p4 = indvar_flatten_next_reg_714.read();
    } else {
        ap_phi_mux_indvar_flatten_phi_fu_273_p4 = indvar_flatten_reg_269.read();
    }
}

void convolve_2d::thread_ap_phi_mux_x_assign_phi_fu_295_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_x_assign_phi_fu_295_p4 = x_reg_808.read();
    } else {
        ap_phi_mux_x_assign_phi_fu_295_p4 = x_assign_reg_291.read();
    }
}

void convolve_2d::thread_ap_phi_mux_y_assign_phi_fu_284_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_y_assign_phi_fu_284_p4 = y_assign_mid2_reg_724.read();
    } else {
        ap_phi_mux_y_assign_phi_fu_284_p4 = y_assign_reg_280.read();
    }
}

void convolve_2d::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void convolve_2d::thread_exitcond1_fu_319_p2() {
    exitcond1_fu_319_p2 = (!i_reg_247.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_247.read() == ap_const_lv2_2);
}

void convolve_2d::thread_exitcond9_fu_349_p2() {
    exitcond9_fu_349_p2 = (!j_reg_258.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_258.read() == ap_const_lv3_7);
}

void convolve_2d::thread_exitcond_flatten_fu_384_p2() {
    exitcond_flatten_fu_384_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_273_p4.read().is_01() || !ap_const_lv6_31.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_indvar_flatten_phi_fu_273_p4.read() == ap_const_lv6_31);
}

void convolve_2d::thread_exitcond_fu_417_p2() {
    exitcond_fu_417_p2 = (!ap_phi_mux_x_assign_phi_fu_295_p4.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_x_assign_phi_fu_295_p4.read() == ap_const_lv3_7);
}

void convolve_2d::thread_i_1_fu_325_p2() {
    i_1_fu_325_p2 = (!i_reg_247.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_247.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_2d::thread_in_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0))) {
        in_stream_V_blk_n = in_stream_V_empty_n.read();
    } else {
        in_stream_V_blk_n = ap_const_logic_1;
    }
}

void convolve_2d::thread_in_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        in_stream_V_read = ap_const_logic_1;
    } else {
        in_stream_V_read = ap_const_logic_0;
    }
}

void convolve_2d::thread_indvar_flatten_next_fu_390_p2() {
    indvar_flatten_next_fu_390_p2 = (!ap_phi_mux_indvar_flatten_phi_fu_273_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_indvar_flatten_phi_fu_273_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void convolve_2d::thread_j_1_fu_355_p2() {
    j_1_fu_355_p2 = (!j_reg_258.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_258.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolve_2d::thread_kernel_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_8);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_6);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_4);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_2);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            kernel_address0 =  (sc_lv<4>) (ap_const_lv64_0);
        } else {
            kernel_address0 = "XXXX";
        }
    } else {
        kernel_address0 = "XXXX";
    }
}

void convolve_2d::thread_kernel_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_7);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_5);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_3);
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            kernel_address1 =  (sc_lv<4>) (ap_const_lv64_1);
        } else {
            kernel_address1 = "XXXX";
        }
    } else {
        kernel_address1 = "XXXX";
    }
}

void convolve_2d::thread_kernel_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void convolve_2d::thread_kernel_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        kernel_ce1 = ap_const_logic_1;
    } else {
        kernel_ce1 = ap_const_logic_0;
    }
}

void convolve_2d::thread_line_buf_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        line_buf_address0 = line_buf_addr_2_reg_735.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        line_buf_address0 =  (sc_lv<4>) (tmp_8_fu_459_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        line_buf_address0 =  (sc_lv<4>) (tmp_11_cast_fu_370_p1.read());
    } else {
        line_buf_address0 = "XXXX";
    }
}

void convolve_2d::thread_line_buf_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            line_buf_address1 = line_buf_addr_1_reg_729.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            line_buf_address1 =  (sc_lv<4>) (tmp_10_cast_fu_474_p1.read());
        } else {
            line_buf_address1 = "XXXX";
        }
    } else {
        line_buf_address1 = "XXXX";
    }
}

void convolve_2d::thread_line_buf_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        line_buf_ce0 = ap_const_logic_1;
    } else {
        line_buf_ce0 = ap_const_logic_0;
    }
}

void convolve_2d::thread_line_buf_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        line_buf_ce1 = ap_const_logic_1;
    } else {
        line_buf_ce1 = ap_const_logic_0;
    }
}

void convolve_2d::thread_line_buf_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        line_buf_d0 = in_stream_V_dout.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        line_buf_d0 = ap_const_lv32_0;
    } else {
        line_buf_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void convolve_2d::thread_line_buf_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_349_p2.read())))) {
        line_buf_we0 = ap_const_logic_1;
    } else {
        line_buf_we0 = ap_const_logic_0;
    }
}

void convolve_2d::thread_line_buf_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_710.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        line_buf_we1 = ap_const_logic_1;
    } else {
        line_buf_we1 = ap_const_logic_0;
    }
}

void convolve_2d::thread_or_cond_fu_485_p2() {
    or_cond_fu_485_p2 = (tmp_1_mid2_fu_443_p3.read() & tmp_7_fu_479_p2.read());
}

void convolve_2d::thread_out_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(or_cond_reg_741_pp0_iter1_reg.read(), ap_const_lv1_1))) {
        out_stream_V_blk_n = out_stream_V_full_n.read();
    } else {
        out_stream_V_blk_n = ap_const_logic_1;
    }
}

void convolve_2d::thread_out_stream_V_din() {
    out_stream_V_din = (!tmp4_reg_828.read().is_01() || !tmp1_fu_582_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp4_reg_828.read()) + sc_biguint<32>(tmp1_fu_582_p2.read()));
}

void convolve_2d::thread_out_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(or_cond_reg_741_pp0_iter1_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        out_stream_V_write = ap_const_logic_1;
    } else {
        out_stream_V_write = ap_const_logic_0;
    }
}

void convolve_2d::thread_tmp1_fu_582_p2() {
    tmp1_fu_582_p2 = (!tmp3_reg_803.read().is_01() || !tmp2_reg_783.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp3_reg_803.read()) + sc_biguint<32>(tmp2_reg_783.read()));
}

void convolve_2d::thread_tmp2_fu_516_p2() {
    tmp2_fu_516_p2 = (!tmp_17_0_i_reg_763.read().is_01() || !tmp_17_0_1_i_reg_768.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_17_0_i_reg_763.read()) + sc_biguint<32>(tmp_17_0_1_i_reg_768.read()));
}

void convolve_2d::thread_tmp3_fu_539_p2() {
    tmp3_fu_539_p2 = (!tmp_17_0_2_i_reg_773.read().is_01() || !tmp_17_1_i_reg_778.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_17_0_2_i_reg_773.read()) + sc_biguint<32>(tmp_17_1_i_reg_778.read()));
}

void convolve_2d::thread_tmp4_fu_576_p2() {
    tmp4_fu_576_p2 = (!tmp6_fu_571_p2.read().is_01() || !tmp5_fu_563_p2.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp6_fu_571_p2.read()) + sc_biguint<32>(tmp5_fu_563_p2.read()));
}

void convolve_2d::thread_tmp5_fu_563_p2() {
    tmp5_fu_563_p2 = (!tmp_17_1_1_i_reg_793.read().is_01() || !tmp_17_1_2_i_reg_798.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_17_1_1_i_reg_793.read()) + sc_biguint<32>(tmp_17_1_2_i_reg_798.read()));
}

void convolve_2d::thread_tmp6_fu_571_p2() {
    tmp6_fu_571_p2 = (!tmp7_fu_567_p2.read().is_01() || !tmp_17_2_i_reg_813.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp7_fu_567_p2.read()) + sc_biguint<32>(tmp_17_2_i_reg_813.read()));
}

void convolve_2d::thread_tmp7_fu_567_p2() {
    tmp7_fu_567_p2 = (!tmp_17_2_1_i_reg_818.read().is_01() || !tmp_17_2_2_i_reg_823.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_17_2_1_i_reg_818.read()) + sc_biguint<32>(tmp_17_2_2_i_reg_823.read()));
}

void convolve_2d::thread_tmp_10_cast_fu_474_p1() {
    tmp_10_cast_fu_474_p1 = esl_zext<64,4>(tmp_1_fu_468_p2.read());
}

void convolve_2d::thread_tmp_11_cast_fu_370_p1() {
    tmp_11_cast_fu_370_p1 = esl_sext<64,5>(tmp_2_fu_365_p2.read());
}

void convolve_2d::thread_tmp_17_0_1_i_fu_500_p1() {
    tmp_17_0_1_i_fu_500_p1 = window_0_1_fu_104.read();
}

void convolve_2d::thread_tmp_17_0_1_i_fu_500_p2() {
    tmp_17_0_1_i_fu_500_p2 = (!reg_315.read().is_01() || !tmp_17_0_1_i_fu_500_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_315.read()) * sc_bigint<32>(tmp_17_0_1_i_fu_500_p1.read());
}

void convolve_2d::thread_tmp_17_0_2_i_fu_506_p2() {
    tmp_17_0_2_i_fu_506_p2 = (!reg_311.read().is_01() || !window_0_2_reg_751.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_311.read()) * sc_bigint<32>(window_0_2_reg_751.read());
}

void convolve_2d::thread_tmp_17_0_i_fu_495_p2() {
    tmp_17_0_i_fu_495_p2 = (!reg_311.read().is_01() || !window_0_0_load_reg_695.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_311.read()) * sc_bigint<32>(window_0_0_load_reg_695.read());
}

void convolve_2d::thread_tmp_17_1_1_i_fu_528_p1() {
    tmp_17_1_1_i_fu_528_p1 = window_1_1_fu_116.read();
}

void convolve_2d::thread_tmp_17_1_1_i_fu_528_p2() {
    tmp_17_1_1_i_fu_528_p2 = (!reg_311.read().is_01() || !tmp_17_1_1_i_fu_528_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_311.read()) * sc_bigint<32>(tmp_17_1_1_i_fu_528_p1.read());
}

void convolve_2d::thread_tmp_17_1_2_i_fu_534_p2() {
    tmp_17_1_2_i_fu_534_p2 = (!reg_315.read().is_01() || !window_1_2_reg_757.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_315.read()) * sc_bigint<32>(window_1_2_reg_757.read());
}

void convolve_2d::thread_tmp_17_1_i_fu_511_p2() {
    tmp_17_1_i_fu_511_p2 = (!reg_315.read().is_01() || !window_1_0_load_reg_705.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_315.read()) * sc_bigint<32>(window_1_0_load_reg_705.read());
}

void convolve_2d::thread_tmp_17_2_1_i_fu_553_p2() {
    tmp_17_2_1_i_fu_553_p2 = (!reg_315.read().is_01() || !window_2_1_load_1_reg_788.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_315.read()) * sc_bigint<32>(window_2_1_load_1_reg_788.read());
}

void convolve_2d::thread_tmp_17_2_2_i_fu_558_p2() {
    tmp_17_2_2_i_fu_558_p2 = (!reg_311.read().is_01() || !tmp_reg_745.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_311.read()) * sc_bigint<32>(tmp_reg_745.read());
}

void convolve_2d::thread_tmp_17_2_i_fu_548_p2() {
    tmp_17_2_i_fu_548_p2 = (!reg_311.read().is_01() || !window_2_0_load_reg_700.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_311.read()) * sc_bigint<32>(window_2_0_load_reg_700.read());
}

void convolve_2d::thread_tmp_1_fu_468_p2() {
    tmp_1_fu_468_p2 = (!tmp_8_cast_fu_464_p1.read().is_01() || !ap_const_lv4_7.is_01())? sc_lv<4>(): (sc_biguint<4>(tmp_8_cast_fu_464_p1.read()) + sc_biguint<4>(ap_const_lv4_7));
}

void convolve_2d::thread_tmp_1_mid1_fu_431_p2() {
    tmp_1_mid1_fu_431_p2 = (!y_fu_411_p2.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(y_fu_411_p2.read() != ap_const_lv3_0);
}

void convolve_2d::thread_tmp_1_mid2_fu_443_p3() {
    tmp_1_mid2_fu_443_p3 = (!exitcond_fu_417_p2.read()[0].is_01())? sc_lv<1>(): ((exitcond_fu_417_p2.read()[0].to_bool())? tmp_1_mid1_fu_431_p2.read(): tmp_s_fu_437_p2.read());
}

void convolve_2d::thread_tmp_2_fu_365_p2() {
    tmp_2_fu_365_p2 = (!tmp_9_reg_646.read().is_01() || !tmp_3_cast_fu_361_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_9_reg_646.read()) + sc_biguint<5>(tmp_3_cast_fu_361_p1.read()));
}

void convolve_2d::thread_tmp_3_cast_fu_361_p1() {
    tmp_3_cast_fu_361_p1 = esl_zext<5,3>(j_reg_258.read());
}

void convolve_2d::thread_tmp_6_fu_335_p3() {
    tmp_6_fu_335_p3 = esl_concat<2,3>(i_reg_247.read(), ap_const_lv3_0);
}

void convolve_2d::thread_tmp_7_fu_479_p2() {
    tmp_7_fu_479_p2 = (!x_assign_mid2_fu_423_p3.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_mid2_fu_423_p3.read() != ap_const_lv3_0);
}

void convolve_2d::thread_tmp_8_cast_fu_464_p1() {
    tmp_8_cast_fu_464_p1 = esl_zext<4,3>(x_assign_mid2_fu_423_p3.read());
}

void convolve_2d::thread_tmp_8_fu_459_p1() {
    tmp_8_fu_459_p1 = esl_zext<64,3>(x_assign_mid2_fu_423_p3.read());
}

void convolve_2d::thread_tmp_9_fu_343_p2() {
    tmp_9_fu_343_p2 = (!tmp_6_fu_335_p3.read().is_01() || !tmp_cast_fu_331_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_6_fu_335_p3.read()) - sc_biguint<5>(tmp_cast_fu_331_p1.read()));
}

void convolve_2d::thread_tmp_cast_fu_331_p1() {
    tmp_cast_fu_331_p1 = esl_zext<5,2>(i_reg_247.read());
}

void convolve_2d::thread_tmp_s_fu_437_p2() {
    tmp_s_fu_437_p2 = (!ap_phi_mux_y_assign_phi_fu_284_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_y_assign_phi_fu_284_p4.read() != ap_const_lv3_0);
}

void convolve_2d::thread_x_assign_mid2_fu_423_p3() {
    x_assign_mid2_fu_423_p3 = (!exitcond_fu_417_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_417_p2.read()[0].to_bool())? ap_const_lv3_0: ap_phi_mux_x_assign_phi_fu_295_p4.read());
}

void convolve_2d::thread_x_fu_543_p2() {
    x_fu_543_p2 = (!x_assign_mid2_reg_719.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_assign_mid2_reg_719.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolve_2d::thread_y_assign_mid2_fu_451_p3() {
    y_assign_mid2_fu_451_p3 = (!exitcond_fu_417_p2.read()[0].is_01())? sc_lv<3>(): ((exitcond_fu_417_p2.read()[0].to_bool())? y_fu_411_p2.read(): ap_phi_mux_y_assign_phi_fu_284_p4.read());
}

void convolve_2d::thread_y_fu_411_p2() {
    y_fu_411_p2 = (!ap_phi_mux_y_assign_phi_fu_284_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_y_assign_phi_fu_284_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolve_2d::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_319_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_349_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_384_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_flatten_fu_384_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void convolve_2d::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_V_din\" :  \"" << out_stream_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_stream_V_full_n\" :  \"" << out_stream_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_V_write\" :  \"" << out_stream_V_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_V_dout\" :  \"" << in_stream_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_V_empty_n\" :  \"" << in_stream_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_stream_V_read\" :  \"" << in_stream_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address0\" :  \"" << kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce0\" :  \"" << kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q0\" :  \"" << kernel_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address1\" :  \"" << kernel_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce1\" :  \"" << kernel_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q1\" :  \"" << kernel_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

