-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convolve is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    window_0_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    window_0_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    window_0_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    window_1_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    window_1_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    window_1_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    window_2_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    window_2_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    window_2_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_0_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_1_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_1_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_2_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_2_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of convolve is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal tmp_s_fu_156_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_17_0_1_fu_162_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_0_1_reg_251 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_0_2_fu_168_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_0_2_reg_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_fu_174_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_reg_261 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_1_fu_180_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_1_reg_266 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_2_fu_186_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_2_reg_271 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_fu_192_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_reg_276 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_1_fu_198_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_1_reg_281 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_2_fu_204_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_2_reg_286 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_210_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_291 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_214_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_231_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_reg_301 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_156_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_156_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_17_0_1_fu_162_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_0_1_fu_162_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_0_2_fu_168_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_0_2_fu_168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_fu_174_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_fu_174_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_1_fu_180_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_1_fu_180_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_2_fu_186_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_1_2_fu_186_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_fu_192_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_fu_192_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_1_fu_198_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_1_fu_198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_2_fu_204_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_2_2_fu_204_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_222_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_226_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_218_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_237_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_2_2_fu_241_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal window_0_0_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_0_1_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_0_2_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_0_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_1_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_1_2_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_0_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_1_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal window_2_2_read_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_0_0_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_0_1_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_0_2_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_1_0_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_1_1_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_1_2_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_2_0_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_2_1_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_2_2_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (31 downto 0);


begin




    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= result_2_2_2_fu_241_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                kernel_0_0_int_reg <= kernel_0_0;
                kernel_0_1_int_reg <= kernel_0_1;
                kernel_0_2_int_reg <= kernel_0_2;
                kernel_1_0_int_reg <= kernel_1_0;
                kernel_1_1_int_reg <= kernel_1_1;
                kernel_1_2_int_reg <= kernel_1_2;
                kernel_2_0_int_reg <= kernel_2_0;
                kernel_2_1_int_reg <= kernel_2_1;
                kernel_2_2_int_reg <= kernel_2_2;
                window_0_0_read_int_reg <= window_0_0_read;
                window_0_1_read_int_reg <= window_0_1_read;
                window_0_2_read_int_reg <= window_0_2_read;
                window_1_0_read_int_reg <= window_1_0_read;
                window_1_1_read_int_reg <= window_1_1_read;
                window_1_2_read_int_reg <= window_1_2_read;
                window_2_0_read_int_reg <= window_2_0_read;
                window_2_1_read_int_reg <= window_2_1_read;
                window_2_2_read_int_reg <= window_2_2_read;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                tmp1_reg_291 <= tmp1_fu_210_p2;
                tmp2_reg_296 <= tmp2_fu_214_p2;
                tmp3_reg_301 <= tmp3_fu_231_p2;
                tmp_17_0_1_reg_251 <= tmp_17_0_1_fu_162_p2;
                tmp_17_0_2_reg_256 <= tmp_17_0_2_fu_168_p2;
                tmp_17_1_1_reg_266 <= tmp_17_1_1_fu_180_p2;
                tmp_17_1_2_reg_271 <= tmp_17_1_2_fu_186_p2;
                tmp_17_1_reg_261 <= tmp_17_1_fu_174_p2;
                tmp_17_2_1_reg_281 <= tmp_17_2_1_fu_198_p2;
                tmp_17_2_2_reg_286 <= tmp_17_2_2_fu_204_p2;
                tmp_17_2_reg_276 <= tmp_17_2_fu_192_p2;
                tmp_s_reg_246 <= tmp_s_fu_156_p2;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(result_2_2_2_fu_241_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= result_2_2_2_fu_241_p2;
        end if; 
    end process;

    result_2_2_2_fu_241_p2 <= std_logic_vector(unsigned(tmp3_reg_301) + unsigned(tmp_fu_237_p2));
    tmp1_fu_210_p2 <= std_logic_vector(unsigned(tmp_s_reg_246) + unsigned(tmp_17_0_1_reg_251));
    tmp2_fu_214_p2 <= std_logic_vector(unsigned(tmp_17_0_2_reg_256) + unsigned(tmp_17_1_reg_261));
    tmp3_fu_231_p2 <= std_logic_vector(unsigned(tmp5_fu_226_p2) + unsigned(tmp4_fu_218_p2));
    tmp4_fu_218_p2 <= std_logic_vector(unsigned(tmp_17_1_1_reg_266) + unsigned(tmp_17_1_2_reg_271));
    tmp5_fu_226_p2 <= std_logic_vector(unsigned(tmp6_fu_222_p2) + unsigned(tmp_17_2_reg_276));
    tmp6_fu_222_p2 <= std_logic_vector(unsigned(tmp_17_2_1_reg_281) + unsigned(tmp_17_2_2_reg_286));
    tmp_17_0_1_fu_162_p0 <= kernel_0_1_int_reg;
    tmp_17_0_1_fu_162_p1 <= window_0_1_read_int_reg;
    tmp_17_0_1_fu_162_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_17_0_1_fu_162_p0) * signed(tmp_17_0_1_fu_162_p1))), 32));
    tmp_17_0_2_fu_168_p0 <= kernel_0_2_int_reg;
    tmp_17_0_2_fu_168_p1 <= window_0_2_read_int_reg;
    tmp_17_0_2_fu_168_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_17_0_2_fu_168_p0) * signed(tmp_17_0_2_fu_168_p1))), 32));
    tmp_17_1_1_fu_180_p0 <= kernel_1_1_int_reg;
    tmp_17_1_1_fu_180_p1 <= window_1_1_read_int_reg;
    tmp_17_1_1_fu_180_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_17_1_1_fu_180_p0) * signed(tmp_17_1_1_fu_180_p1))), 32));
    tmp_17_1_2_fu_186_p0 <= kernel_1_2_int_reg;
    tmp_17_1_2_fu_186_p1 <= window_1_2_read_int_reg;
    tmp_17_1_2_fu_186_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_17_1_2_fu_186_p0) * signed(tmp_17_1_2_fu_186_p1))), 32));
    tmp_17_1_fu_174_p0 <= kernel_1_0_int_reg;
    tmp_17_1_fu_174_p1 <= window_1_0_read_int_reg;
    tmp_17_1_fu_174_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_17_1_fu_174_p0) * signed(tmp_17_1_fu_174_p1))), 32));
    tmp_17_2_1_fu_198_p0 <= kernel_2_1_int_reg;
    tmp_17_2_1_fu_198_p1 <= window_2_1_read_int_reg;
    tmp_17_2_1_fu_198_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_17_2_1_fu_198_p0) * signed(tmp_17_2_1_fu_198_p1))), 32));
    tmp_17_2_2_fu_204_p0 <= kernel_2_2_int_reg;
    tmp_17_2_2_fu_204_p1 <= window_2_2_read_int_reg;
    tmp_17_2_2_fu_204_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_17_2_2_fu_204_p0) * signed(tmp_17_2_2_fu_204_p1))), 32));
    tmp_17_2_fu_192_p0 <= kernel_2_0_int_reg;
    tmp_17_2_fu_192_p1 <= window_2_0_read_int_reg;
    tmp_17_2_fu_192_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_17_2_fu_192_p0) * signed(tmp_17_2_fu_192_p1))), 32));
    tmp_fu_237_p2 <= std_logic_vector(unsigned(tmp2_reg_296) + unsigned(tmp1_reg_291));
    tmp_s_fu_156_p0 <= kernel_0_0_int_reg;
    tmp_s_fu_156_p1 <= window_0_0_read_int_reg;
    tmp_s_fu_156_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_s_fu_156_p0) * signed(tmp_s_fu_156_p1))), 32));
end behav;
