// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "convolve_2d.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic convolve_2d::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic convolve_2d::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> convolve_2d::ap_ST_fsm_state1 = "1";
const sc_lv<17> convolve_2d::ap_ST_fsm_state2 = "10";
const sc_lv<17> convolve_2d::ap_ST_fsm_state3 = "100";
const sc_lv<17> convolve_2d::ap_ST_fsm_state4 = "1000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state5 = "10000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state6 = "100000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> convolve_2d::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> convolve_2d::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool convolve_2d::ap_const_boolean_1 = true;
const sc_lv<32> convolve_2d::ap_const_lv32_C = "1100";
const sc_lv<1> convolve_2d::ap_const_lv1_1 = "1";
const sc_lv<32> convolve_2d::ap_const_lv32_4 = "100";
const sc_lv<1> convolve_2d::ap_const_lv1_0 = "0";
const sc_lv<32> convolve_2d::ap_const_lv32_1 = "1";
const sc_lv<32> convolve_2d::ap_const_lv32_2 = "10";
const sc_lv<32> convolve_2d::ap_const_lv32_3 = "11";
const sc_lv<32> convolve_2d::ap_const_lv32_5 = "101";
const sc_lv<32> convolve_2d::ap_const_lv32_6 = "110";
const sc_lv<32> convolve_2d::ap_const_lv32_8 = "1000";
const sc_lv<32> convolve_2d::ap_const_lv32_A = "1010";
const sc_lv<32> convolve_2d::ap_const_lv32_D = "1101";
const sc_lv<32> convolve_2d::ap_const_lv32_E = "1110";
const sc_lv<32> convolve_2d::ap_const_lv32_F = "1111";
const sc_lv<32> convolve_2d::ap_const_lv32_10 = "10000";
const sc_lv<2> convolve_2d::ap_const_lv2_0 = "00";
const sc_lv<3> convolve_2d::ap_const_lv3_0 = "000";
const sc_lv<32> convolve_2d::ap_const_lv32_7 = "111";
const sc_lv<32> convolve_2d::ap_const_lv32_9 = "1001";
const sc_lv<32> convolve_2d::ap_const_lv32_B = "1011";
const sc_lv<64> convolve_2d::ap_const_lv64_8 = "1000";
const sc_lv<2> convolve_2d::ap_const_lv2_2 = "10";
const sc_lv<2> convolve_2d::ap_const_lv2_1 = "1";
const sc_lv<3> convolve_2d::ap_const_lv3_7 = "111";
const sc_lv<3> convolve_2d::ap_const_lv3_1 = "1";
const sc_lv<2> convolve_2d::ap_const_lv2_3 = "11";
const sc_lv<5> convolve_2d::ap_const_lv5_2 = "10";

convolve_2d::convolve_2d(sc_module_name name) : sc_module(name), mVcdFile(0) {
    line_buf_U = new convolve_2d_line_bkb("line_buf_U");
    line_buf_U->clk(ap_clk);
    line_buf_U->reset(ap_rst);
    line_buf_U->address0(line_buf_address0);
    line_buf_U->ce0(line_buf_ce0);
    line_buf_U->we0(line_buf_we0);
    line_buf_U->d0(line_buf_d0);
    line_buf_U->q0(line_buf_q0);
    window_U = new convolve_2d_window("window_U");
    window_U->clk(ap_clk);
    window_U->reset(ap_rst);
    window_U->address0(window_address0);
    window_U->ce0(window_ce0);
    window_U->we0(window_we0);
    window_U->d0(window_d0);
    window_U->q0(window_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state13);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_predicate_op165_write_state13 );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( exitcond7_fu_421_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond8_fu_403_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op165_write_state13);
    sensitive << ( or_cond_reg_872 );
    sensitive << ( exitcond1_i_fu_669_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond8_fu_403_p2 );

    SC_METHOD(thread_exitcond1_fu_347_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_211 );

    SC_METHOD(thread_exitcond1_i_fu_669_p2);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( or_cond_reg_872 );
    sensitive << ( ap_predicate_op165_write_state13 );
    sensitive << ( i_i_reg_313 );

    SC_METHOD(thread_exitcond4_fu_510_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i3_reg_278 );

    SC_METHOD(thread_exitcond5_fu_471_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( j2_reg_267 );

    SC_METHOD(thread_exitcond6_fu_433_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( i1_reg_256 );

    SC_METHOD(thread_exitcond7_fu_421_p2);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond7_fu_421_p2 );
    sensitive << ( x_assign_reg_244 );

    SC_METHOD(thread_exitcond8_fu_403_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( y_assign_reg_233 );

    SC_METHOD(thread_exitcond9_fu_377_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_222 );

    SC_METHOD(thread_exitcond_fu_578_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i4_reg_289 );

    SC_METHOD(thread_exitcond_i_fu_703_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( j_i_reg_336 );

    SC_METHOD(thread_i_1_fu_353_p2);
    sensitive << ( i_reg_211 );

    SC_METHOD(thread_i_2_fu_516_p2);
    sensitive << ( i3_reg_278 );

    SC_METHOD(thread_i_3_fu_439_p2);
    sensitive << ( i1_reg_256 );

    SC_METHOD(thread_i_4_fu_584_p2);
    sensitive << ( i4_reg_289 );

    SC_METHOD(thread_i_5_fu_675_p2);
    sensitive << ( i_i_reg_313 );

    SC_METHOD(thread_in_stream_V_blk_n);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond7_fu_421_p2 );

    SC_METHOD(thread_in_stream_V_read);
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond7_fu_421_p2 );

    SC_METHOD(thread_j_1_fu_383_p2);
    sensitive << ( j_reg_222 );

    SC_METHOD(thread_j_2_fu_477_p2);
    sensitive << ( j2_reg_267 );

    SC_METHOD(thread_j_3_fu_709_p2);
    sensitive << ( j_i_reg_336 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( tmp_38_cast_fu_724_p1 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_line_buf_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_18_cast_fu_398_p1 );
    sensitive << ( tmp_23_cast_fu_545_p1 );
    sensitive << ( tmp_31_cast_fu_619_p1 );
    sensitive << ( tmp_34_cast_fu_665_p1 );

    SC_METHOD(thread_line_buf_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_line_buf_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_15_fu_658_p3 );

    SC_METHOD(thread_line_buf_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond9_fu_377_p2 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_or_cond_fu_653_p2);
    sensitive << ( tmp_1_reg_773 );
    sensitive << ( tmp_7_fu_647_p2 );

    SC_METHOD(thread_out_stream_V_blk_n);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( or_cond_reg_872 );
    sensitive << ( exitcond1_i_fu_669_p2 );

    SC_METHOD(thread_out_stream_V_din);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_predicate_op165_write_state13 );
    sensitive << ( result_2_reg_300 );

    SC_METHOD(thread_out_stream_V_write);
    sensitive << ( out_stream_V_full_n );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_predicate_op165_write_state13 );

    SC_METHOD(thread_p_shl1_cast_fu_457_p1);
    sensitive << ( tmp_4_fu_449_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_558_p1);
    sensitive << ( tmp_13_fu_550_p3 );

    SC_METHOD(thread_p_shl6_cast_fu_693_p1);
    sensitive << ( tmp_25_fu_685_p3 );

    SC_METHOD(thread_result_fu_734_p2);
    sensitive << ( tmp_17_i_reg_917 );
    sensitive << ( result_1_i_reg_324 );

    SC_METHOD(thread_tmp_10_fu_590_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_578_p2 );
    sensitive << ( i4_reg_289 );

    SC_METHOD(thread_tmp_11_fu_540_p2);
    sensitive << ( tmp_8_cast_reg_806 );
    sensitive << ( tmp_9_fu_534_p2 );

    SC_METHOD(thread_tmp_13_fu_550_p3);
    sensitive << ( i3_reg_278 );

    SC_METHOD(thread_tmp_14_cast_fu_596_p1);
    sensitive << ( i_4_fu_584_p2 );

    SC_METHOD(thread_tmp_14_fu_562_p2);
    sensitive << ( tmp_cast_13_fu_522_p1 );
    sensitive << ( p_shl2_cast_fu_558_p1 );

    SC_METHOD(thread_tmp_15_fu_658_p3);
    sensitive << ( tmp_28_reg_786 );
    sensitive << ( tmp_10_reg_857 );
    sensitive << ( line_buf_q0 );

    SC_METHOD(thread_tmp_16_cast_fu_624_p1);
    sensitive << ( i4_reg_289 );

    SC_METHOD(thread_tmp_16_fu_568_p2);
    sensitive << ( tmp_14_fu_562_p2 );

    SC_METHOD(thread_tmp_17_fu_487_p2);
    sensitive << ( tmp_5_reg_800 );
    sensitive << ( tmp_4_cast_fu_483_p1 );

    SC_METHOD(thread_tmp_17_i_fu_730_p2);
    sensitive << ( window_load_1_reg_907 );
    sensitive << ( kernel_load_reg_912 );

    SC_METHOD(thread_tmp_18_cast_fu_398_p1);
    sensitive << ( tmp_3_fu_393_p2 );

    SC_METHOD(thread_tmp_18_fu_501_p2);
    sensitive << ( tmp_5_reg_800 );
    sensitive << ( tmp_5_cast_fu_497_p1 );

    SC_METHOD(thread_tmp_19_fu_600_p3);
    sensitive << ( i_4_fu_584_p2 );

    SC_METHOD(thread_tmp_1_fu_415_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond8_fu_403_p2 );
    sensitive << ( y_assign_reg_233 );

    SC_METHOD(thread_tmp_20_fu_608_p2);
    sensitive << ( tmp_19_fu_600_p3 );
    sensitive << ( tmp_14_cast_fu_596_p1 );

    SC_METHOD(thread_tmp_21_fu_614_p2);
    sensitive << ( tmp_8_cast_reg_806 );
    sensitive << ( tmp_20_fu_608_p2 );

    SC_METHOD(thread_tmp_22_fu_628_p3);
    sensitive << ( i4_reg_289 );

    SC_METHOD(thread_tmp_23_cast_fu_545_p1);
    sensitive << ( tmp_11_fu_540_p2 );

    SC_METHOD(thread_tmp_23_fu_636_p2);
    sensitive << ( tmp_22_fu_628_p3 );
    sensitive << ( tmp_16_cast_fu_624_p1 );

    SC_METHOD(thread_tmp_24_fu_642_p2);
    sensitive << ( tmp_8_cast_reg_806 );
    sensitive << ( tmp_23_fu_636_p2 );

    SC_METHOD(thread_tmp_25_fu_685_p3);
    sensitive << ( i_i_reg_313 );

    SC_METHOD(thread_tmp_26_cast_fu_574_p1);
    sensitive << ( tmp_16_reg_844 );

    SC_METHOD(thread_tmp_26_fu_697_p2);
    sensitive << ( p_shl6_cast_fu_693_p1 );
    sensitive << ( tmp_i1_cast_fu_681_p1 );

    SC_METHOD(thread_tmp_27_cast_fu_492_p1);
    sensitive << ( tmp_17_fu_487_p2 );

    SC_METHOD(thread_tmp_27_fu_719_p2);
    sensitive << ( tmp_26_reg_884 );
    sensitive << ( tmp_i2_cast_fu_715_p1 );

    SC_METHOD(thread_tmp_28_cast_fu_506_p1);
    sensitive << ( tmp_18_reg_826 );

    SC_METHOD(thread_tmp_2_fu_371_p2);
    sensitive << ( tmp_s_fu_363_p3 );
    sensitive << ( tmp_cast_fu_359_p1 );

    SC_METHOD(thread_tmp_31_cast_fu_619_p1);
    sensitive << ( tmp_21_fu_614_p2 );

    SC_METHOD(thread_tmp_34_cast_fu_665_p1);
    sensitive << ( tmp_24_reg_867 );

    SC_METHOD(thread_tmp_38_cast_fu_724_p1);
    sensitive << ( tmp_27_fu_719_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_389_p1);
    sensitive << ( j_reg_222 );

    SC_METHOD(thread_tmp_3_fu_393_p2);
    sensitive << ( tmp_2_reg_752 );
    sensitive << ( tmp_3_cast_fu_389_p1 );

    SC_METHOD(thread_tmp_4_cast_fu_483_p1);
    sensitive << ( j_2_fu_477_p2 );

    SC_METHOD(thread_tmp_4_fu_449_p3);
    sensitive << ( i1_reg_256 );

    SC_METHOD(thread_tmp_5_cast_fu_497_p1);
    sensitive << ( j2_reg_267 );

    SC_METHOD(thread_tmp_5_fu_461_p2);
    sensitive << ( p_shl1_cast_fu_457_p1 );
    sensitive << ( tmp_9_cast_fu_445_p1 );

    SC_METHOD(thread_tmp_7_fu_647_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_578_p2 );
    sensitive << ( x_assign_reg_244 );

    SC_METHOD(thread_tmp_8_cast_fu_467_p1);
    sensitive << ( x_assign_reg_244 );

    SC_METHOD(thread_tmp_8_fu_526_p3);
    sensitive << ( i3_reg_278 );

    SC_METHOD(thread_tmp_9_cast_fu_445_p1);
    sensitive << ( i1_reg_256 );

    SC_METHOD(thread_tmp_9_fu_534_p2);
    sensitive << ( tmp_8_fu_526_p3 );
    sensitive << ( tmp_cast_13_fu_522_p1 );

    SC_METHOD(thread_tmp_cast_13_fu_522_p1);
    sensitive << ( i3_reg_278 );

    SC_METHOD(thread_tmp_cast_fu_359_p1);
    sensitive << ( i_reg_211 );

    SC_METHOD(thread_tmp_i1_cast_fu_681_p1);
    sensitive << ( i_i_reg_313 );

    SC_METHOD(thread_tmp_i2_cast_fu_715_p1);
    sensitive << ( j_i_reg_336 );

    SC_METHOD(thread_tmp_s_fu_363_p3);
    sensitive << ( i_reg_211 );

    SC_METHOD(thread_window_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_27_cast_fu_492_p1 );
    sensitive << ( tmp_28_cast_fu_506_p1 );
    sensitive << ( tmp_26_cast_fu_574_p1 );
    sensitive << ( tmp_38_cast_fu_724_p1 );

    SC_METHOD(thread_window_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_window_d0);
    sensitive << ( tmp_28_reg_786 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( window_q0 );
    sensitive << ( line_buf_q0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_window_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond4_fu_510_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_x_fu_427_p2);
    sensitive << ( x_assign_reg_244 );

    SC_METHOD(thread_y_fu_409_p2);
    sensitive << ( y_assign_reg_233 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( out_stream_V_full_n );
    sensitive << ( in_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( or_cond_reg_872 );
    sensitive << ( exitcond1_i_fu_669_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond7_fu_421_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_347_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond8_fu_403_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( exitcond6_fu_433_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( exitcond5_fu_471_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( exitcond4_fu_510_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( exitcond_fu_578_p2 );
    sensitive << ( ap_predicate_op165_write_state13 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond_i_fu_703_p2 );
    sensitive << ( exitcond9_fu_377_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "convolve_2d_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, out_stream_V_din, "(port)out_stream_V_din");
    sc_trace(mVcdFile, out_stream_V_full_n, "(port)out_stream_V_full_n");
    sc_trace(mVcdFile, out_stream_V_write, "(port)out_stream_V_write");
    sc_trace(mVcdFile, in_stream_V_dout, "(port)in_stream_V_dout");
    sc_trace(mVcdFile, in_stream_V_empty_n, "(port)in_stream_V_empty_n");
    sc_trace(mVcdFile, in_stream_V_read, "(port)in_stream_V_read");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, out_stream_V_blk_n, "out_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, or_cond_reg_872, "or_cond_reg_872");
    sc_trace(mVcdFile, exitcond1_i_fu_669_p2, "exitcond1_i_fu_669_p2");
    sc_trace(mVcdFile, in_stream_V_blk_n, "in_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond7_fu_421_p2, "exitcond7_fu_421_p2");
    sc_trace(mVcdFile, i_1_fu_353_p2, "i_1_fu_353_p2");
    sc_trace(mVcdFile, i_1_reg_747, "i_1_reg_747");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_2_fu_371_p2, "tmp_2_fu_371_p2");
    sc_trace(mVcdFile, tmp_2_reg_752, "tmp_2_reg_752");
    sc_trace(mVcdFile, exitcond1_fu_347_p2, "exitcond1_fu_347_p2");
    sc_trace(mVcdFile, j_1_fu_383_p2, "j_1_fu_383_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, y_fu_409_p2, "y_fu_409_p2");
    sc_trace(mVcdFile, y_reg_768, "y_reg_768");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_1_fu_415_p2, "tmp_1_fu_415_p2");
    sc_trace(mVcdFile, tmp_1_reg_773, "tmp_1_reg_773");
    sc_trace(mVcdFile, exitcond8_fu_403_p2, "exitcond8_fu_403_p2");
    sc_trace(mVcdFile, x_fu_427_p2, "x_fu_427_p2");
    sc_trace(mVcdFile, x_reg_781, "x_reg_781");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, tmp_28_reg_786, "tmp_28_reg_786");
    sc_trace(mVcdFile, i_3_fu_439_p2, "i_3_fu_439_p2");
    sc_trace(mVcdFile, i_3_reg_795, "i_3_reg_795");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_5_fu_461_p2, "tmp_5_fu_461_p2");
    sc_trace(mVcdFile, tmp_5_reg_800, "tmp_5_reg_800");
    sc_trace(mVcdFile, exitcond6_fu_433_p2, "exitcond6_fu_433_p2");
    sc_trace(mVcdFile, tmp_8_cast_fu_467_p1, "tmp_8_cast_fu_467_p1");
    sc_trace(mVcdFile, tmp_8_cast_reg_806, "tmp_8_cast_reg_806");
    sc_trace(mVcdFile, j_2_fu_477_p2, "j_2_fu_477_p2");
    sc_trace(mVcdFile, j_2_reg_816, "j_2_reg_816");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, exitcond5_fu_471_p2, "exitcond5_fu_471_p2");
    sc_trace(mVcdFile, tmp_18_fu_501_p2, "tmp_18_fu_501_p2");
    sc_trace(mVcdFile, tmp_18_reg_826, "tmp_18_reg_826");
    sc_trace(mVcdFile, i_2_fu_516_p2, "i_2_fu_516_p2");
    sc_trace(mVcdFile, i_2_reg_834, "i_2_reg_834");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, exitcond4_fu_510_p2, "exitcond4_fu_510_p2");
    sc_trace(mVcdFile, tmp_16_fu_568_p2, "tmp_16_fu_568_p2");
    sc_trace(mVcdFile, tmp_16_reg_844, "tmp_16_reg_844");
    sc_trace(mVcdFile, i_4_fu_584_p2, "i_4_fu_584_p2");
    sc_trace(mVcdFile, i_4_reg_852, "i_4_reg_852");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, tmp_10_fu_590_p2, "tmp_10_fu_590_p2");
    sc_trace(mVcdFile, tmp_10_reg_857, "tmp_10_reg_857");
    sc_trace(mVcdFile, exitcond_fu_578_p2, "exitcond_fu_578_p2");
    sc_trace(mVcdFile, tmp_24_fu_642_p2, "tmp_24_fu_642_p2");
    sc_trace(mVcdFile, tmp_24_reg_867, "tmp_24_reg_867");
    sc_trace(mVcdFile, or_cond_fu_653_p2, "or_cond_fu_653_p2");
    sc_trace(mVcdFile, i_5_fu_675_p2, "i_5_fu_675_p2");
    sc_trace(mVcdFile, i_5_reg_879, "i_5_reg_879");
    sc_trace(mVcdFile, ap_predicate_op165_write_state13, "ap_predicate_op165_write_state13");
    sc_trace(mVcdFile, ap_block_state13, "ap_block_state13");
    sc_trace(mVcdFile, tmp_26_fu_697_p2, "tmp_26_fu_697_p2");
    sc_trace(mVcdFile, tmp_26_reg_884, "tmp_26_reg_884");
    sc_trace(mVcdFile, j_3_fu_709_p2, "j_3_fu_709_p2");
    sc_trace(mVcdFile, j_3_reg_892, "j_3_reg_892");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, exitcond_i_fu_703_p2, "exitcond_i_fu_703_p2");
    sc_trace(mVcdFile, window_q0, "window_q0");
    sc_trace(mVcdFile, window_load_1_reg_907, "window_load_1_reg_907");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, kernel_load_reg_912, "kernel_load_reg_912");
    sc_trace(mVcdFile, tmp_17_i_fu_730_p2, "tmp_17_i_fu_730_p2");
    sc_trace(mVcdFile, tmp_17_i_reg_917, "tmp_17_i_reg_917");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, result_fu_734_p2, "result_fu_734_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, line_buf_address0, "line_buf_address0");
    sc_trace(mVcdFile, line_buf_ce0, "line_buf_ce0");
    sc_trace(mVcdFile, line_buf_we0, "line_buf_we0");
    sc_trace(mVcdFile, line_buf_d0, "line_buf_d0");
    sc_trace(mVcdFile, line_buf_q0, "line_buf_q0");
    sc_trace(mVcdFile, window_address0, "window_address0");
    sc_trace(mVcdFile, window_ce0, "window_ce0");
    sc_trace(mVcdFile, window_we0, "window_we0");
    sc_trace(mVcdFile, window_d0, "window_d0");
    sc_trace(mVcdFile, i_reg_211, "i_reg_211");
    sc_trace(mVcdFile, exitcond9_fu_377_p2, "exitcond9_fu_377_p2");
    sc_trace(mVcdFile, j_reg_222, "j_reg_222");
    sc_trace(mVcdFile, y_assign_reg_233, "y_assign_reg_233");
    sc_trace(mVcdFile, x_assign_reg_244, "x_assign_reg_244");
    sc_trace(mVcdFile, i1_reg_256, "i1_reg_256");
    sc_trace(mVcdFile, j2_reg_267, "j2_reg_267");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, i3_reg_278, "i3_reg_278");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, i4_reg_289, "i4_reg_289");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, result_2_reg_300, "result_2_reg_300");
    sc_trace(mVcdFile, i_i_reg_313, "i_i_reg_313");
    sc_trace(mVcdFile, result_1_i_reg_324, "result_1_i_reg_324");
    sc_trace(mVcdFile, j_i_reg_336, "j_i_reg_336");
    sc_trace(mVcdFile, tmp_18_cast_fu_398_p1, "tmp_18_cast_fu_398_p1");
    sc_trace(mVcdFile, tmp_27_cast_fu_492_p1, "tmp_27_cast_fu_492_p1");
    sc_trace(mVcdFile, tmp_28_cast_fu_506_p1, "tmp_28_cast_fu_506_p1");
    sc_trace(mVcdFile, tmp_23_cast_fu_545_p1, "tmp_23_cast_fu_545_p1");
    sc_trace(mVcdFile, tmp_26_cast_fu_574_p1, "tmp_26_cast_fu_574_p1");
    sc_trace(mVcdFile, tmp_31_cast_fu_619_p1, "tmp_31_cast_fu_619_p1");
    sc_trace(mVcdFile, tmp_34_cast_fu_665_p1, "tmp_34_cast_fu_665_p1");
    sc_trace(mVcdFile, tmp_38_cast_fu_724_p1, "tmp_38_cast_fu_724_p1");
    sc_trace(mVcdFile, tmp_15_fu_658_p3, "tmp_15_fu_658_p3");
    sc_trace(mVcdFile, tmp_s_fu_363_p3, "tmp_s_fu_363_p3");
    sc_trace(mVcdFile, tmp_cast_fu_359_p1, "tmp_cast_fu_359_p1");
    sc_trace(mVcdFile, tmp_3_cast_fu_389_p1, "tmp_3_cast_fu_389_p1");
    sc_trace(mVcdFile, tmp_3_fu_393_p2, "tmp_3_fu_393_p2");
    sc_trace(mVcdFile, tmp_4_fu_449_p3, "tmp_4_fu_449_p3");
    sc_trace(mVcdFile, p_shl1_cast_fu_457_p1, "p_shl1_cast_fu_457_p1");
    sc_trace(mVcdFile, tmp_9_cast_fu_445_p1, "tmp_9_cast_fu_445_p1");
    sc_trace(mVcdFile, tmp_4_cast_fu_483_p1, "tmp_4_cast_fu_483_p1");
    sc_trace(mVcdFile, tmp_17_fu_487_p2, "tmp_17_fu_487_p2");
    sc_trace(mVcdFile, tmp_5_cast_fu_497_p1, "tmp_5_cast_fu_497_p1");
    sc_trace(mVcdFile, tmp_8_fu_526_p3, "tmp_8_fu_526_p3");
    sc_trace(mVcdFile, tmp_cast_13_fu_522_p1, "tmp_cast_13_fu_522_p1");
    sc_trace(mVcdFile, tmp_9_fu_534_p2, "tmp_9_fu_534_p2");
    sc_trace(mVcdFile, tmp_11_fu_540_p2, "tmp_11_fu_540_p2");
    sc_trace(mVcdFile, tmp_13_fu_550_p3, "tmp_13_fu_550_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_558_p1, "p_shl2_cast_fu_558_p1");
    sc_trace(mVcdFile, tmp_14_fu_562_p2, "tmp_14_fu_562_p2");
    sc_trace(mVcdFile, tmp_19_fu_600_p3, "tmp_19_fu_600_p3");
    sc_trace(mVcdFile, tmp_14_cast_fu_596_p1, "tmp_14_cast_fu_596_p1");
    sc_trace(mVcdFile, tmp_20_fu_608_p2, "tmp_20_fu_608_p2");
    sc_trace(mVcdFile, tmp_21_fu_614_p2, "tmp_21_fu_614_p2");
    sc_trace(mVcdFile, tmp_22_fu_628_p3, "tmp_22_fu_628_p3");
    sc_trace(mVcdFile, tmp_16_cast_fu_624_p1, "tmp_16_cast_fu_624_p1");
    sc_trace(mVcdFile, tmp_23_fu_636_p2, "tmp_23_fu_636_p2");
    sc_trace(mVcdFile, tmp_7_fu_647_p2, "tmp_7_fu_647_p2");
    sc_trace(mVcdFile, tmp_25_fu_685_p3, "tmp_25_fu_685_p3");
    sc_trace(mVcdFile, p_shl6_cast_fu_693_p1, "p_shl6_cast_fu_693_p1");
    sc_trace(mVcdFile, tmp_i1_cast_fu_681_p1, "tmp_i1_cast_fu_681_p1");
    sc_trace(mVcdFile, tmp_i2_cast_fu_715_p1, "tmp_i2_cast_fu_715_p1");
    sc_trace(mVcdFile, tmp_27_fu_719_p2, "tmp_27_fu_719_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("convolve_2d.hdltvin.dat");
    mHdltvoutHandle.open("convolve_2d.hdltvout.dat");
}

convolve_2d::~convolve_2d() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete line_buf_U;
    delete window_U;
}

void convolve_2d::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_471_p2.read()))) {
        i1_reg_256 = i_3_reg_795.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read())))) {
        i1_reg_256 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_433_p2.read()))) {
        i3_reg_278 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i3_reg_278 = i_2_reg_834.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        i4_reg_289 = i_4_reg_852.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_510_p2.read()))) {
        i4_reg_289 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_578_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_653_p2.read()))) {
        i_i_reg_313 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_703_p2.read()))) {
        i_i_reg_313 = i_5_reg_879.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_377_p2.read()))) {
        i_reg_211 = i_1_reg_747.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_211 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_433_p2.read()))) {
        j2_reg_267 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j2_reg_267 = j_2_reg_816.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        j_i_reg_336 = j_3_reg_892.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(or_cond_reg_872.read(), ap_const_lv1_1) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op165_write_state13.read())) && 
                esl_seteq<1,1,1>(exitcond1_i_fu_669_p2.read(), ap_const_lv1_0))) {
        j_i_reg_336 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_347_p2.read()))) {
        j_reg_222 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_377_p2.read()))) {
        j_reg_222 = j_1_fu_383_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        result_1_i_reg_324 = result_fu_734_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                esl_seteq<1,1,1>(or_cond_reg_872.read(), ap_const_lv1_1) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op165_write_state13.read())) && 
                esl_seteq<1,1,1>(exitcond1_i_fu_669_p2.read(), ap_const_lv1_0))) {
        result_1_i_reg_324 = result_2_reg_300.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_578_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_653_p2.read()))) {
        result_2_reg_300 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_703_p2.read()))) {
        result_2_reg_300 = result_1_i_reg_324.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_403_p2.read()))) {
        x_assign_reg_244 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op165_write_state13.read())) && 
                (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i_fu_669_p2.read()) || 
                 esl_seteq<1,1,1>(or_cond_reg_872.read(), ap_const_lv1_0)))) {
        x_assign_reg_244 = x_reg_781.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_347_p2.read()))) {
        y_assign_reg_233 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                !(esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read())) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_421_p2.read()))) {
        y_assign_reg_233 = y_reg_768.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_747 = i_1_fu_353_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_2_reg_834 = i_2_fu_516_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_3_reg_795 = i_3_fu_439_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_4_reg_852 = i_4_fu_584_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(or_cond_reg_872.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op165_write_state13.read())))) {
        i_5_reg_879 = i_5_fu_675_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        j_2_reg_816 = j_2_fu_477_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        j_3_reg_892 = j_3_fu_709_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        kernel_load_reg_912 = kernel_q0.read();
        window_load_1_reg_907 = window_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_578_p2.read()))) {
        or_cond_reg_872 = or_cond_fu_653_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_578_p2.read()))) {
        tmp_10_reg_857 = tmp_10_fu_590_p2.read();
        tmp_24_reg_867 = tmp_24_fu_642_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_510_p2.read()))) {
        tmp_16_reg_844 = tmp_16_fu_568_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        tmp_17_i_reg_917 = tmp_17_i_fu_730_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond5_fu_471_p2.read()))) {
        tmp_18_reg_826 = tmp_18_fu_501_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_403_p2.read()))) {
        tmp_1_reg_773 = tmp_1_fu_415_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(or_cond_reg_872.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op165_write_state13.read())) && esl_seteq<1,1,1>(exitcond1_i_fu_669_p2.read(), ap_const_lv1_0))) {
        tmp_26_reg_884 = tmp_26_fu_697_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read())))) {
        tmp_28_reg_786 = in_stream_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_347_p2.read()))) {
        tmp_2_reg_752 = tmp_2_fu_371_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond6_fu_433_p2.read()))) {
        tmp_5_reg_800 = tmp_5_fu_461_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_433_p2.read()))) {
        tmp_8_cast_reg_806 = tmp_8_cast_fu_467_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read())))) {
        x_reg_781 = x_fu_427_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        y_reg_768 = y_fu_409_p2.read();
    }
}

void convolve_2d::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void convolve_2d::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void convolve_2d::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void convolve_2d::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void convolve_2d::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void convolve_2d::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void convolve_2d::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void convolve_2d::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void convolve_2d::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void convolve_2d::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void convolve_2d::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void convolve_2d::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void convolve_2d::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void convolve_2d::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void convolve_2d::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void convolve_2d::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void convolve_2d::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void convolve_2d::thread_ap_block_state13() {
    ap_block_state13 = (esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op165_write_state13.read()));
}

void convolve_2d::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read()));
}

void convolve_2d::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_403_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void convolve_2d::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void convolve_2d::thread_ap_predicate_op165_write_state13() {
    ap_predicate_op165_write_state13 = (esl_seteq<1,1,1>(or_cond_reg_872.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i_fu_669_p2.read()));
}

void convolve_2d::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_403_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void convolve_2d::thread_exitcond1_fu_347_p2() {
    exitcond1_fu_347_p2 = (!i_reg_211.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_211.read() == ap_const_lv2_2);
}

void convolve_2d::thread_exitcond1_i_fu_669_p2() {
    exitcond1_i_fu_669_p2 = (!i_i_reg_313.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_i_reg_313.read() == ap_const_lv2_3);
}

void convolve_2d::thread_exitcond4_fu_510_p2() {
    exitcond4_fu_510_p2 = (!i3_reg_278.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i3_reg_278.read() == ap_const_lv2_2);
}

void convolve_2d::thread_exitcond5_fu_471_p2() {
    exitcond5_fu_471_p2 = (!j2_reg_267.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(j2_reg_267.read() == ap_const_lv2_2);
}

void convolve_2d::thread_exitcond6_fu_433_p2() {
    exitcond6_fu_433_p2 = (!i1_reg_256.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_256.read() == ap_const_lv2_3);
}

void convolve_2d::thread_exitcond7_fu_421_p2() {
    exitcond7_fu_421_p2 = (!x_assign_reg_244.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_reg_244.read() == ap_const_lv3_7);
}

void convolve_2d::thread_exitcond8_fu_403_p2() {
    exitcond8_fu_403_p2 = (!y_assign_reg_233.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(y_assign_reg_233.read() == ap_const_lv3_7);
}

void convolve_2d::thread_exitcond9_fu_377_p2() {
    exitcond9_fu_377_p2 = (!j_reg_222.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_222.read() == ap_const_lv3_7);
}

void convolve_2d::thread_exitcond_fu_578_p2() {
    exitcond_fu_578_p2 = (!i4_reg_289.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i4_reg_289.read() == ap_const_lv2_2);
}

void convolve_2d::thread_exitcond_i_fu_703_p2() {
    exitcond_i_fu_703_p2 = (!j_i_reg_336.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_336.read() == ap_const_lv2_3);
}

void convolve_2d::thread_i_1_fu_353_p2() {
    i_1_fu_353_p2 = (!i_reg_211.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_reg_211.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_2d::thread_i_2_fu_516_p2() {
    i_2_fu_516_p2 = (!i3_reg_278.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i3_reg_278.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_2d::thread_i_3_fu_439_p2() {
    i_3_fu_439_p2 = (!i1_reg_256.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_reg_256.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_2d::thread_i_4_fu_584_p2() {
    i_4_fu_584_p2 = (!i4_reg_289.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i4_reg_289.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_2d::thread_i_5_fu_675_p2() {
    i_5_fu_675_p2 = (!i_i_reg_313.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_i_reg_313.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_2d::thread_in_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0))) {
        in_stream_V_blk_n = in_stream_V_empty_n.read();
    } else {
        in_stream_V_blk_n = ap_const_logic_1;
    }
}

void convolve_2d::thread_in_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read())))) {
        in_stream_V_read = ap_const_logic_1;
    } else {
        in_stream_V_read = ap_const_logic_0;
    }
}

void convolve_2d::thread_j_1_fu_383_p2() {
    j_1_fu_383_p2 = (!j_reg_222.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_reg_222.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolve_2d::thread_j_2_fu_477_p2() {
    j_2_fu_477_p2 = (!j2_reg_267.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j2_reg_267.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_2d::thread_j_3_fu_709_p2() {
    j_3_fu_709_p2 = (!j_i_reg_336.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_i_reg_336.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void convolve_2d::thread_kernel_address0() {
    kernel_address0 =  (sc_lv<4>) (tmp_38_cast_fu_724_p1.read());
}

void convolve_2d::thread_kernel_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void convolve_2d::thread_line_buf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        line_buf_address0 =  (sc_lv<4>) (tmp_34_cast_fu_665_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        line_buf_address0 =  (sc_lv<4>) (tmp_31_cast_fu_619_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        line_buf_address0 =  (sc_lv<4>) (tmp_23_cast_fu_545_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        line_buf_address0 =  (sc_lv<4>) (tmp_18_cast_fu_398_p1.read());
    } else {
        line_buf_address0 = "XXXX";
    }
}

void convolve_2d::thread_line_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        line_buf_ce0 = ap_const_logic_1;
    } else {
        line_buf_ce0 = ap_const_logic_0;
    }
}

void convolve_2d::thread_line_buf_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        line_buf_d0 = tmp_15_fu_658_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        line_buf_d0 = ap_const_lv32_0;
    } else {
        line_buf_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void convolve_2d::thread_line_buf_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond9_fu_377_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        line_buf_we0 = ap_const_logic_1;
    } else {
        line_buf_we0 = ap_const_logic_0;
    }
}

void convolve_2d::thread_or_cond_fu_653_p2() {
    or_cond_fu_653_p2 = (tmp_1_reg_773.read() & tmp_7_fu_647_p2.read());
}

void convolve_2d::thread_out_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(or_cond_reg_872.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i_fu_669_p2.read()))) {
        out_stream_V_blk_n = out_stream_V_full_n.read();
    } else {
        out_stream_V_blk_n = ap_const_logic_1;
    }
}

void convolve_2d::thread_out_stream_V_din() {
    out_stream_V_din = result_2_reg_300.read();
}

void convolve_2d::thread_out_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op165_write_state13.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op165_write_state13.read())))) {
        out_stream_V_write = ap_const_logic_1;
    } else {
        out_stream_V_write = ap_const_logic_0;
    }
}

void convolve_2d::thread_p_shl1_cast_fu_457_p1() {
    p_shl1_cast_fu_457_p1 = esl_zext<5,4>(tmp_4_fu_449_p3.read());
}

void convolve_2d::thread_p_shl2_cast_fu_558_p1() {
    p_shl2_cast_fu_558_p1 = esl_zext<5,4>(tmp_13_fu_550_p3.read());
}

void convolve_2d::thread_p_shl6_cast_fu_693_p1() {
    p_shl6_cast_fu_693_p1 = esl_zext<5,4>(tmp_25_fu_685_p3.read());
}

void convolve_2d::thread_result_fu_734_p2() {
    result_fu_734_p2 = (!result_1_i_reg_324.read().is_01() || !tmp_17_i_reg_917.read().is_01())? sc_lv<32>(): (sc_biguint<32>(result_1_i_reg_324.read()) + sc_biguint<32>(tmp_17_i_reg_917.read()));
}

void convolve_2d::thread_tmp_10_fu_590_p2() {
    tmp_10_fu_590_p2 = (!i4_reg_289.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(i4_reg_289.read() == ap_const_lv2_1);
}

void convolve_2d::thread_tmp_11_fu_540_p2() {
    tmp_11_fu_540_p2 = (!tmp_9_fu_534_p2.read().is_01() || !tmp_8_cast_reg_806.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_9_fu_534_p2.read()) + sc_biguint<5>(tmp_8_cast_reg_806.read()));
}

void convolve_2d::thread_tmp_13_fu_550_p3() {
    tmp_13_fu_550_p3 = esl_concat<2,2>(i3_reg_278.read(), ap_const_lv2_0);
}

void convolve_2d::thread_tmp_14_cast_fu_596_p1() {
    tmp_14_cast_fu_596_p1 = esl_zext<5,2>(i_4_fu_584_p2.read());
}

void convolve_2d::thread_tmp_14_fu_562_p2() {
    tmp_14_fu_562_p2 = (!p_shl2_cast_fu_558_p1.read().is_01() || !tmp_cast_13_fu_522_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl2_cast_fu_558_p1.read()) - sc_biguint<5>(tmp_cast_13_fu_522_p1.read()));
}

void convolve_2d::thread_tmp_15_fu_658_p3() {
    tmp_15_fu_658_p3 = (!tmp_10_reg_857.read()[0].is_01())? sc_lv<32>(): ((tmp_10_reg_857.read()[0].to_bool())? tmp_28_reg_786.read(): line_buf_q0.read());
}

void convolve_2d::thread_tmp_16_cast_fu_624_p1() {
    tmp_16_cast_fu_624_p1 = esl_zext<5,2>(i4_reg_289.read());
}

void convolve_2d::thread_tmp_16_fu_568_p2() {
    tmp_16_fu_568_p2 = (!tmp_14_fu_562_p2.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_14_fu_562_p2.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void convolve_2d::thread_tmp_17_fu_487_p2() {
    tmp_17_fu_487_p2 = (!tmp_5_reg_800.read().is_01() || !tmp_4_cast_fu_483_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_5_reg_800.read()) + sc_biguint<5>(tmp_4_cast_fu_483_p1.read()));
}

void convolve_2d::thread_tmp_17_i_fu_730_p2() {
    tmp_17_i_fu_730_p2 = (!kernel_load_reg_912.read().is_01() || !window_load_1_reg_907.read().is_01())? sc_lv<32>(): sc_bigint<32>(kernel_load_reg_912.read()) * sc_bigint<32>(window_load_1_reg_907.read());
}

void convolve_2d::thread_tmp_18_cast_fu_398_p1() {
    tmp_18_cast_fu_398_p1 = esl_sext<64,5>(tmp_3_fu_393_p2.read());
}

void convolve_2d::thread_tmp_18_fu_501_p2() {
    tmp_18_fu_501_p2 = (!tmp_5_reg_800.read().is_01() || !tmp_5_cast_fu_497_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_5_reg_800.read()) + sc_biguint<5>(tmp_5_cast_fu_497_p1.read()));
}

void convolve_2d::thread_tmp_19_fu_600_p3() {
    tmp_19_fu_600_p3 = esl_concat<2,3>(i_4_fu_584_p2.read(), ap_const_lv3_0);
}

void convolve_2d::thread_tmp_1_fu_415_p2() {
    tmp_1_fu_415_p2 = (!y_assign_reg_233.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(y_assign_reg_233.read() != ap_const_lv3_0);
}

void convolve_2d::thread_tmp_20_fu_608_p2() {
    tmp_20_fu_608_p2 = (!tmp_19_fu_600_p3.read().is_01() || !tmp_14_cast_fu_596_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_19_fu_600_p3.read()) - sc_biguint<5>(tmp_14_cast_fu_596_p1.read()));
}

void convolve_2d::thread_tmp_21_fu_614_p2() {
    tmp_21_fu_614_p2 = (!tmp_20_fu_608_p2.read().is_01() || !tmp_8_cast_reg_806.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_20_fu_608_p2.read()) + sc_biguint<5>(tmp_8_cast_reg_806.read()));
}

void convolve_2d::thread_tmp_22_fu_628_p3() {
    tmp_22_fu_628_p3 = esl_concat<2,3>(i4_reg_289.read(), ap_const_lv3_0);
}

void convolve_2d::thread_tmp_23_cast_fu_545_p1() {
    tmp_23_cast_fu_545_p1 = esl_sext<64,5>(tmp_11_fu_540_p2.read());
}

void convolve_2d::thread_tmp_23_fu_636_p2() {
    tmp_23_fu_636_p2 = (!tmp_22_fu_628_p3.read().is_01() || !tmp_16_cast_fu_624_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_22_fu_628_p3.read()) - sc_biguint<5>(tmp_16_cast_fu_624_p1.read()));
}

void convolve_2d::thread_tmp_24_fu_642_p2() {
    tmp_24_fu_642_p2 = (!tmp_23_fu_636_p2.read().is_01() || !tmp_8_cast_reg_806.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_23_fu_636_p2.read()) + sc_biguint<5>(tmp_8_cast_reg_806.read()));
}

void convolve_2d::thread_tmp_25_fu_685_p3() {
    tmp_25_fu_685_p3 = esl_concat<2,2>(i_i_reg_313.read(), ap_const_lv2_0);
}

void convolve_2d::thread_tmp_26_cast_fu_574_p1() {
    tmp_26_cast_fu_574_p1 = esl_sext<64,5>(tmp_16_reg_844.read());
}

void convolve_2d::thread_tmp_26_fu_697_p2() {
    tmp_26_fu_697_p2 = (!p_shl6_cast_fu_693_p1.read().is_01() || !tmp_i1_cast_fu_681_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl6_cast_fu_693_p1.read()) - sc_biguint<5>(tmp_i1_cast_fu_681_p1.read()));
}

void convolve_2d::thread_tmp_27_cast_fu_492_p1() {
    tmp_27_cast_fu_492_p1 = esl_sext<64,5>(tmp_17_fu_487_p2.read());
}

void convolve_2d::thread_tmp_27_fu_719_p2() {
    tmp_27_fu_719_p2 = (!tmp_26_reg_884.read().is_01() || !tmp_i2_cast_fu_715_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_26_reg_884.read()) + sc_biguint<5>(tmp_i2_cast_fu_715_p1.read()));
}

void convolve_2d::thread_tmp_28_cast_fu_506_p1() {
    tmp_28_cast_fu_506_p1 = esl_sext<64,5>(tmp_18_reg_826.read());
}

void convolve_2d::thread_tmp_2_fu_371_p2() {
    tmp_2_fu_371_p2 = (!tmp_s_fu_363_p3.read().is_01() || !tmp_cast_fu_359_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_s_fu_363_p3.read()) - sc_biguint<5>(tmp_cast_fu_359_p1.read()));
}

void convolve_2d::thread_tmp_31_cast_fu_619_p1() {
    tmp_31_cast_fu_619_p1 = esl_sext<64,5>(tmp_21_fu_614_p2.read());
}

void convolve_2d::thread_tmp_34_cast_fu_665_p1() {
    tmp_34_cast_fu_665_p1 = esl_sext<64,5>(tmp_24_reg_867.read());
}

void convolve_2d::thread_tmp_38_cast_fu_724_p1() {
    tmp_38_cast_fu_724_p1 = esl_sext<64,5>(tmp_27_fu_719_p2.read());
}

void convolve_2d::thread_tmp_3_cast_fu_389_p1() {
    tmp_3_cast_fu_389_p1 = esl_zext<5,3>(j_reg_222.read());
}

void convolve_2d::thread_tmp_3_fu_393_p2() {
    tmp_3_fu_393_p2 = (!tmp_2_reg_752.read().is_01() || !tmp_3_cast_fu_389_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_2_reg_752.read()) + sc_biguint<5>(tmp_3_cast_fu_389_p1.read()));
}

void convolve_2d::thread_tmp_4_cast_fu_483_p1() {
    tmp_4_cast_fu_483_p1 = esl_zext<5,2>(j_2_fu_477_p2.read());
}

void convolve_2d::thread_tmp_4_fu_449_p3() {
    tmp_4_fu_449_p3 = esl_concat<2,2>(i1_reg_256.read(), ap_const_lv2_0);
}

void convolve_2d::thread_tmp_5_cast_fu_497_p1() {
    tmp_5_cast_fu_497_p1 = esl_zext<5,2>(j2_reg_267.read());
}

void convolve_2d::thread_tmp_5_fu_461_p2() {
    tmp_5_fu_461_p2 = (!p_shl1_cast_fu_457_p1.read().is_01() || !tmp_9_cast_fu_445_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(p_shl1_cast_fu_457_p1.read()) - sc_biguint<5>(tmp_9_cast_fu_445_p1.read()));
}

void convolve_2d::thread_tmp_7_fu_647_p2() {
    tmp_7_fu_647_p2 = (!x_assign_reg_244.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(x_assign_reg_244.read() != ap_const_lv3_0);
}

void convolve_2d::thread_tmp_8_cast_fu_467_p1() {
    tmp_8_cast_fu_467_p1 = esl_zext<5,3>(x_assign_reg_244.read());
}

void convolve_2d::thread_tmp_8_fu_526_p3() {
    tmp_8_fu_526_p3 = esl_concat<2,3>(i3_reg_278.read(), ap_const_lv3_0);
}

void convolve_2d::thread_tmp_9_cast_fu_445_p1() {
    tmp_9_cast_fu_445_p1 = esl_zext<5,2>(i1_reg_256.read());
}

void convolve_2d::thread_tmp_9_fu_534_p2() {
    tmp_9_fu_534_p2 = (!tmp_8_fu_526_p3.read().is_01() || !tmp_cast_13_fu_522_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(tmp_8_fu_526_p3.read()) - sc_biguint<5>(tmp_cast_13_fu_522_p1.read()));
}

void convolve_2d::thread_tmp_cast_13_fu_522_p1() {
    tmp_cast_13_fu_522_p1 = esl_zext<5,2>(i3_reg_278.read());
}

void convolve_2d::thread_tmp_cast_fu_359_p1() {
    tmp_cast_fu_359_p1 = esl_zext<5,2>(i_reg_211.read());
}

void convolve_2d::thread_tmp_i1_cast_fu_681_p1() {
    tmp_i1_cast_fu_681_p1 = esl_zext<5,2>(i_i_reg_313.read());
}

void convolve_2d::thread_tmp_i2_cast_fu_715_p1() {
    tmp_i2_cast_fu_715_p1 = esl_zext<5,2>(j_i_reg_336.read());
}

void convolve_2d::thread_tmp_s_fu_363_p3() {
    tmp_s_fu_363_p3 = esl_concat<2,3>(i_reg_211.read(), ap_const_lv3_0);
}

void convolve_2d::thread_window_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        window_address0 =  (sc_lv<4>) (tmp_38_cast_fu_724_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        window_address0 =  (sc_lv<4>) (tmp_26_cast_fu_574_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        window_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        window_address0 =  (sc_lv<4>) (tmp_28_cast_fu_506_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        window_address0 =  (sc_lv<4>) (tmp_27_cast_fu_492_p1.read());
    } else {
        window_address0 = "XXXX";
    }
}

void convolve_2d::thread_window_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        window_ce0 = ap_const_logic_1;
    } else {
        window_ce0 = ap_const_logic_0;
    }
}

void convolve_2d::thread_window_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        window_d0 = line_buf_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        window_d0 = tmp_28_reg_786.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        window_d0 = window_q0.read();
    } else {
        window_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void convolve_2d::thread_window_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_510_p2.read())))) {
        window_we0 = ap_const_logic_1;
    } else {
        window_we0 = ap_const_logic_0;
    }
}

void convolve_2d::thread_x_fu_427_p2() {
    x_fu_427_p2 = (!x_assign_reg_244.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(x_assign_reg_244.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolve_2d::thread_y_fu_409_p2() {
    y_fu_409_p2 = (!y_assign_reg_233.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(y_assign_reg_233.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void convolve_2d::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_347_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond9_fu_377_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_403_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond7_fu_421_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(exitcond7_fu_421_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_stream_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond6_fu_433_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond5_fu_471_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond4_fu_510_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_578_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op165_write_state13.read())) && (esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_i_fu_669_p2.read()) || 
  esl_seteq<1,1,1>(or_cond_reg_872.read(), ap_const_lv1_0)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(or_cond_reg_872.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(ap_const_logic_0, out_stream_V_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op165_write_state13.read())) && esl_seteq<1,1,1>(exitcond1_i_fu_669_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_i_fu_703_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

void convolve_2d::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_V_din\" :  \"" << out_stream_V_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_stream_V_full_n\" :  \"" << out_stream_V_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_stream_V_write\" :  \"" << out_stream_V_write.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_V_dout\" :  \"" << in_stream_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_stream_V_empty_n\" :  \"" << in_stream_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"in_stream_V_read\" :  \"" << in_stream_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address0\" :  \"" << kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce0\" :  \"" << kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q0\" :  \"" << kernel_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

