// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv2d_HH_
#define _conv2d_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convolution_kernel.h"
#include "conv2d_buffer.h"
#include "conv2d_output.h"

namespace ap_rtl {

struct conv2d : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<4> > kernel_address0;
    sc_out< sc_logic > kernel_ce0;
    sc_in< sc_lv<32> > kernel_q0;
    sc_out< sc_lv<10> > result_address0;
    sc_out< sc_logic > result_ce0;
    sc_out< sc_logic > result_we0;
    sc_out< sc_lv<32> > result_d0;


    // Module declarations
    conv2d(sc_module_name name);
    SC_HAS_PROCESS(conv2d);

    ~conv2d();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv2d_buffer* buffer_U;
    conv2d_output* output_U;
    convolution_kernel* grp_convolution_kernel_fu_148;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<6> > i_fu_162_p2;
    sc_signal< sc_lv<6> > i_reg_277;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<12> > tmp_14_cast_fu_176_p1;
    sc_signal< sc_lv<12> > tmp_14_cast_reg_282;
    sc_signal< sc_lv<1> > exitcond1_i_fu_156_p2;
    sc_signal< sc_lv<6> > j_fu_186_p2;
    sc_signal< sc_lv<6> > j_reg_290;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > tmp_18_cast_fu_201_p1;
    sc_signal< sc_lv<64> > tmp_18_cast_reg_295;
    sc_signal< sc_lv<1> > exitcond_i_fu_180_p2;
    sc_signal< sc_lv<5> > i_2_fu_212_p2;
    sc_signal< sc_lv<5> > i_2_reg_308;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<11> > tmp_12_fu_242_p2;
    sc_signal< sc_lv<11> > tmp_12_reg_313;
    sc_signal< sc_lv<1> > exitcond1_i4_fu_206_p2;
    sc_signal< sc_lv<5> > j_2_fu_254_p2;
    sc_signal< sc_lv<5> > j_2_reg_321;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<64> > tmp_19_cast_fu_269_p1;
    sc_signal< sc_lv<64> > tmp_19_cast_reg_326;
    sc_signal< sc_lv<1> > exitcond_i8_fu_248_p2;
    sc_signal< sc_lv<10> > buffer_address0;
    sc_signal< sc_logic > buffer_ce0;
    sc_signal< sc_logic > buffer_we0;
    sc_signal< sc_lv<32> > buffer_q0;
    sc_signal< sc_lv<10> > output_address0;
    sc_signal< sc_logic > output_ce0;
    sc_signal< sc_logic > output_we0;
    sc_signal< sc_lv<32> > output_q0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_148_ap_start;
    sc_signal< sc_logic > grp_convolution_kernel_fu_148_ap_done;
    sc_signal< sc_logic > grp_convolution_kernel_fu_148_ap_idle;
    sc_signal< sc_logic > grp_convolution_kernel_fu_148_ap_ready;
    sc_signal< sc_lv<10> > grp_convolution_kernel_fu_148_buffer_r_address0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_148_buffer_r_ce0;
    sc_signal< sc_lv<4> > grp_convolution_kernel_fu_148_kernel_address0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_148_kernel_ce0;
    sc_signal< sc_lv<10> > grp_convolution_kernel_fu_148_output_r_address0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_148_output_r_ce0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_148_output_r_we0;
    sc_signal< sc_lv<32> > grp_convolution_kernel_fu_148_output_r_d0;
    sc_signal< sc_lv<6> > i_i_reg_104;
    sc_signal< sc_lv<6> > j_i_reg_115;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > i_i3_reg_126;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > j_i7_reg_137;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > grp_convolution_kernel_fu_148_ap_start_reg;
    sc_signal< sc_lv<11> > tmp_fu_168_p3;
    sc_signal< sc_lv<12> > tmp_5_i_cast_fu_192_p1;
    sc_signal< sc_lv<12> > tmp_13_fu_196_p2;
    sc_signal< sc_lv<10> > tmp_s_fu_218_p3;
    sc_signal< sc_lv<6> > tmp_11_fu_230_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_226_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_238_p1;
    sc_signal< sc_lv<11> > tmp_2_i_cast_fu_260_p1;
    sc_signal< sc_lv<11> > tmp_14_fu_264_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_address0();
    void thread_buffer_ce0();
    void thread_buffer_we0();
    void thread_exitcond1_i4_fu_206_p2();
    void thread_exitcond1_i_fu_156_p2();
    void thread_exitcond_i8_fu_248_p2();
    void thread_exitcond_i_fu_180_p2();
    void thread_grp_convolution_kernel_fu_148_ap_start();
    void thread_i_2_fu_212_p2();
    void thread_i_fu_162_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_2_fu_254_p2();
    void thread_j_fu_186_p2();
    void thread_kernel_address0();
    void thread_kernel_ce0();
    void thread_output_address0();
    void thread_output_ce0();
    void thread_output_we0();
    void thread_p_shl1_cast_fu_238_p1();
    void thread_p_shl_cast_fu_226_p1();
    void thread_result_address0();
    void thread_result_ce0();
    void thread_result_d0();
    void thread_result_we0();
    void thread_tmp_11_fu_230_p3();
    void thread_tmp_12_fu_242_p2();
    void thread_tmp_13_fu_196_p2();
    void thread_tmp_14_cast_fu_176_p1();
    void thread_tmp_14_fu_264_p2();
    void thread_tmp_18_cast_fu_201_p1();
    void thread_tmp_19_cast_fu_269_p1();
    void thread_tmp_2_i_cast_fu_260_p1();
    void thread_tmp_5_i_cast_fu_192_p1();
    void thread_tmp_fu_168_p3();
    void thread_tmp_s_fu_218_p3();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
