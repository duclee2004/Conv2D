// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _convolution_kernel_HH_
#define _convolution_kernel_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct convolution_kernel : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > buffer_r_address0;
    sc_out< sc_logic > buffer_r_ce0;
    sc_in< sc_lv<32> > buffer_r_q0;
    sc_out< sc_lv<4> > kernel_address0;
    sc_out< sc_logic > kernel_ce0;
    sc_in< sc_lv<32> > kernel_q0;
    sc_out< sc_lv<10> > output_r_address0;
    sc_out< sc_logic > output_r_ce0;
    sc_out< sc_logic > output_r_we0;
    sc_out< sc_lv<32> > output_r_d0;


    // Module declarations
    convolution_kernel(sc_module_name name);
    SC_HAS_PROCESS(convolution_kernel);

    ~convolution_kernel();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > i_1_fu_152_p2;
    sc_signal< sc_lv<5> > i_1_reg_310;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<11> > tmp_4_fu_182_p2;
    sc_signal< sc_lv<11> > tmp_4_reg_315;
    sc_signal< sc_lv<1> > exitcond3_fu_146_p2;
    sc_signal< sc_lv<5> > j_1_fu_194_p2;
    sc_signal< sc_lv<5> > j_1_reg_323;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > ki_1_fu_210_p2;
    sc_signal< sc_lv<2> > ki_1_reg_331;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<5> > tmp_s_fu_216_p2;
    sc_signal< sc_lv<5> > tmp_s_reg_336;
    sc_signal< sc_lv<1> > exitcond1_fu_204_p2;
    sc_signal< sc_lv<5> > tmp_2_fu_234_p2;
    sc_signal< sc_lv<5> > tmp_2_reg_341;
    sc_signal< sc_lv<2> > kj_1_fu_264_p2;
    sc_signal< sc_lv<2> > kj_1_reg_349;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > exitcond_fu_258_p2;
    sc_signal< sc_lv<32> > buffer_load_reg_364;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > kernel_load_reg_369;
    sc_signal< sc_lv<32> > tmp_6_fu_298_p2;
    sc_signal< sc_lv<32> > tmp_6_reg_374;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > sum_2_fu_302_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<5> > i_reg_75;
    sc_signal< sc_lv<1> > exitcond2_fu_188_p2;
    sc_signal< sc_lv<5> > j_reg_87;
    sc_signal< sc_lv<32> > sum_reg_99;
    sc_signal< sc_lv<2> > ki_reg_112;
    sc_signal< sc_lv<32> > sum_1_reg_123;
    sc_signal< sc_lv<2> > kj_reg_135;
    sc_signal< sc_lv<64> > tmp_7_cast_fu_249_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_283_p1;
    sc_signal< sc_lv<64> > tmp_13_cast_fu_293_p1;
    sc_signal< sc_lv<10> > tmp_fu_158_p3;
    sc_signal< sc_lv<6> > tmp_1_fu_170_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_166_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_178_p1;
    sc_signal< sc_lv<5> > ki_cast4_fu_200_p1;
    sc_signal< sc_lv<4> > tmp_9_fu_222_p3;
    sc_signal< sc_lv<5> > p_shl2_cast_fu_230_p1;
    sc_signal< sc_lv<11> > tmp_8_cast_fu_240_p1;
    sc_signal< sc_lv<11> > tmp_7_fu_244_p2;
    sc_signal< sc_lv<5> > kj_cast2_fu_254_p1;
    sc_signal< sc_lv<5> > tmp_3_fu_270_p2;
    sc_signal< sc_lv<10> > tmp_5_fu_276_p3;
    sc_signal< sc_lv<5> > tmp_10_fu_288_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_state3;
    static const sc_lv<8> ap_ST_fsm_state4;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_state8;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_r_address0();
    void thread_buffer_r_ce0();
    void thread_exitcond1_fu_204_p2();
    void thread_exitcond2_fu_188_p2();
    void thread_exitcond3_fu_146_p2();
    void thread_exitcond_fu_258_p2();
    void thread_i_1_fu_152_p2();
    void thread_j_1_fu_194_p2();
    void thread_kernel_address0();
    void thread_kernel_ce0();
    void thread_ki_1_fu_210_p2();
    void thread_ki_cast4_fu_200_p1();
    void thread_kj_1_fu_264_p2();
    void thread_kj_cast2_fu_254_p1();
    void thread_output_r_address0();
    void thread_output_r_ce0();
    void thread_output_r_d0();
    void thread_output_r_we0();
    void thread_p_shl1_cast_fu_178_p1();
    void thread_p_shl2_cast_fu_230_p1();
    void thread_p_shl_cast_fu_166_p1();
    void thread_sum_2_fu_302_p2();
    void thread_tmp_10_fu_288_p2();
    void thread_tmp_13_cast_fu_293_p1();
    void thread_tmp_1_fu_170_p3();
    void thread_tmp_2_fu_234_p2();
    void thread_tmp_3_fu_270_p2();
    void thread_tmp_4_fu_182_p2();
    void thread_tmp_5_fu_276_p3();
    void thread_tmp_6_fu_298_p2();
    void thread_tmp_7_cast_fu_249_p1();
    void thread_tmp_7_fu_244_p2();
    void thread_tmp_8_cast_fu_240_p1();
    void thread_tmp_8_fu_283_p1();
    void thread_tmp_9_fu_222_p3();
    void thread_tmp_fu_158_p3();
    void thread_tmp_s_fu_216_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
