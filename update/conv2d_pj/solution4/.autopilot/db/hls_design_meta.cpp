#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("input_r_Addr_A", 32, hls_out, 0, "bram", "MemPortADDR2", 1),
	Port_Property("input_r_EN_A", 1, hls_out, 0, "bram", "MemPortCE2", 1),
	Port_Property("input_r_Din_A", 32, hls_out, 0, "bram", "MemPortDIN2", 1),
	Port_Property("input_r_Dout_A", 32, hls_in, 0, "bram", "MemPortDOUT2", 1),
	Port_Property("input_r_WEN_A", 4, hls_out, 0, "bram", "MemPortWE2", 1),
	Port_Property("input_r_Clk_A", 1, hls_out, 0, "bram", "mem_clk", 1),
	Port_Property("input_r_Rst_A", 1, hls_out, 0, "bram", "mem_rst", 1),
	Port_Property("input_r_Addr_B", 32, hls_out, 0, "bram", "MemPortADDR2", 1),
	Port_Property("input_r_EN_B", 1, hls_out, 0, "bram", "MemPortCE2", 1),
	Port_Property("input_r_Din_B", 32, hls_out, 0, "bram", "MemPortDIN2", 1),
	Port_Property("input_r_Dout_B", 32, hls_in, 0, "bram", "MemPortDOUT2", 1),
	Port_Property("input_r_WEN_B", 4, hls_out, 0, "bram", "MemPortWE2", 1),
	Port_Property("input_r_Clk_B", 1, hls_out, 0, "bram", "mem_clk", 1),
	Port_Property("input_r_Rst_B", 1, hls_out, 0, "bram", "mem_rst", 1),
	Port_Property("kernel_Addr_A", 32, hls_out, 1, "bram", "MemPortADDR2", 1),
	Port_Property("kernel_EN_A", 1, hls_out, 1, "bram", "MemPortCE2", 1),
	Port_Property("kernel_Din_A", 32, hls_out, 1, "bram", "MemPortDIN2", 1),
	Port_Property("kernel_Dout_A", 32, hls_in, 1, "bram", "MemPortDOUT2", 1),
	Port_Property("kernel_WEN_A", 4, hls_out, 1, "bram", "MemPortWE2", 1),
	Port_Property("kernel_Clk_A", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("kernel_Rst_A", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("kernel_Addr_B", 32, hls_out, 1, "bram", "MemPortADDR2", 1),
	Port_Property("kernel_EN_B", 1, hls_out, 1, "bram", "MemPortCE2", 1),
	Port_Property("kernel_Din_B", 32, hls_out, 1, "bram", "MemPortDIN2", 1),
	Port_Property("kernel_Dout_B", 32, hls_in, 1, "bram", "MemPortDOUT2", 1),
	Port_Property("kernel_WEN_B", 4, hls_out, 1, "bram", "MemPortWE2", 1),
	Port_Property("kernel_Clk_B", 1, hls_out, 1, "bram", "mem_clk", 1),
	Port_Property("kernel_Rst_B", 1, hls_out, 1, "bram", "mem_rst", 1),
	Port_Property("result_Addr_A", 32, hls_out, 2, "bram", "MemPortADDR2", 1),
	Port_Property("result_EN_A", 1, hls_out, 2, "bram", "MemPortCE2", 1),
	Port_Property("result_Din_A", 32, hls_out, 2, "bram", "MemPortDIN2", 1),
	Port_Property("result_Dout_A", 32, hls_in, 2, "bram", "MemPortDOUT2", 1),
	Port_Property("result_WEN_A", 4, hls_out, 2, "bram", "MemPortWE2", 1),
	Port_Property("result_Clk_A", 1, hls_out, 2, "bram", "mem_clk", 1),
	Port_Property("result_Rst_A", 1, hls_out, 2, "bram", "mem_rst", 1),
	Port_Property("result_Addr_B", 32, hls_out, 2, "bram", "MemPortADDR2", 1),
	Port_Property("result_EN_B", 1, hls_out, 2, "bram", "MemPortCE2", 1),
	Port_Property("result_Din_B", 32, hls_out, 2, "bram", "MemPortDIN2", 1),
	Port_Property("result_Dout_B", 32, hls_in, 2, "bram", "MemPortDOUT2", 1),
	Port_Property("result_WEN_B", 4, hls_out, 2, "bram", "MemPortWE2", 1),
	Port_Property("result_Clk_B", 1, hls_out, 2, "bram", "mem_clk", 1),
	Port_Property("result_Rst_B", 1, hls_out, 2, "bram", "mem_rst", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "conv2d";
