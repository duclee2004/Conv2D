// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "load_input.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic load_input::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic load_input::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<18> load_input::ap_ST_fsm_state1 = "1";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage8 = "1000000000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage9 = "10000000000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage10 = "100000000000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage11 = "1000000000000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage12 = "10000000000000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage13 = "100000000000000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage14 = "1000000000000000";
const sc_lv<18> load_input::ap_ST_fsm_pp0_stage15 = "10000000000000000";
const sc_lv<18> load_input::ap_ST_fsm_state19 = "100000000000000000";
const sc_lv<32> load_input::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool load_input::ap_const_boolean_1 = true;
const sc_lv<32> load_input::ap_const_lv32_1 = "1";
const bool load_input::ap_const_boolean_0 = false;
const sc_lv<1> load_input::ap_const_lv1_0 = "0";
const sc_lv<32> load_input::ap_const_lv32_2 = "10";
const sc_lv<32> load_input::ap_const_lv32_3 = "11";
const sc_lv<32> load_input::ap_const_lv32_4 = "100";
const sc_lv<32> load_input::ap_const_lv32_5 = "101";
const sc_lv<32> load_input::ap_const_lv32_6 = "110";
const sc_lv<32> load_input::ap_const_lv32_7 = "111";
const sc_lv<32> load_input::ap_const_lv32_8 = "1000";
const sc_lv<32> load_input::ap_const_lv32_9 = "1001";
const sc_lv<32> load_input::ap_const_lv32_A = "1010";
const sc_lv<32> load_input::ap_const_lv32_B = "1011";
const sc_lv<32> load_input::ap_const_lv32_C = "1100";
const sc_lv<32> load_input::ap_const_lv32_D = "1101";
const sc_lv<32> load_input::ap_const_lv32_E = "1110";
const sc_lv<32> load_input::ap_const_lv32_F = "1111";
const sc_lv<32> load_input::ap_const_lv32_10 = "10000";
const sc_lv<1> load_input::ap_const_lv1_1 = "1";
const sc_lv<6> load_input::ap_const_lv6_0 = "000000";
const sc_lv<6> load_input::ap_const_lv6_20 = "100000";
const sc_lv<6> load_input::ap_const_lv6_1 = "1";
const sc_lv<5> load_input::ap_const_lv5_0 = "00000";
const sc_lv<11> load_input::ap_const_lv11_1 = "1";
const sc_lv<53> load_input::ap_const_lv53_0 = "00000000000000000000000000000000000000000000000000000";
const sc_lv<11> load_input::ap_const_lv11_2 = "10";
const sc_lv<11> load_input::ap_const_lv11_3 = "11";
const sc_lv<11> load_input::ap_const_lv11_4 = "100";
const sc_lv<11> load_input::ap_const_lv11_5 = "101";
const sc_lv<11> load_input::ap_const_lv11_6 = "110";
const sc_lv<11> load_input::ap_const_lv11_7 = "111";
const sc_lv<11> load_input::ap_const_lv11_8 = "1000";
const sc_lv<11> load_input::ap_const_lv11_9 = "1001";
const sc_lv<11> load_input::ap_const_lv11_A = "1010";
const sc_lv<11> load_input::ap_const_lv11_B = "1011";
const sc_lv<11> load_input::ap_const_lv11_C = "1100";
const sc_lv<11> load_input::ap_const_lv11_D = "1101";
const sc_lv<11> load_input::ap_const_lv11_E = "1110";
const sc_lv<11> load_input::ap_const_lv11_F = "1111";
const sc_lv<11> load_input::ap_const_lv11_10 = "10000";
const sc_lv<11> load_input::ap_const_lv11_11 = "10001";
const sc_lv<11> load_input::ap_const_lv11_12 = "10010";
const sc_lv<11> load_input::ap_const_lv11_13 = "10011";
const sc_lv<11> load_input::ap_const_lv11_14 = "10100";
const sc_lv<11> load_input::ap_const_lv11_15 = "10101";
const sc_lv<11> load_input::ap_const_lv11_16 = "10110";
const sc_lv<11> load_input::ap_const_lv11_17 = "10111";
const sc_lv<11> load_input::ap_const_lv11_18 = "11000";
const sc_lv<11> load_input::ap_const_lv11_19 = "11001";
const sc_lv<11> load_input::ap_const_lv11_1A = "11010";
const sc_lv<11> load_input::ap_const_lv11_1B = "11011";
const sc_lv<11> load_input::ap_const_lv11_1C = "11100";
const sc_lv<11> load_input::ap_const_lv11_1D = "11101";
const sc_lv<11> load_input::ap_const_lv11_1E = "11110";
const sc_lv<11> load_input::ap_const_lv11_1F = "11111";
const sc_lv<32> load_input::ap_const_lv32_11 = "10001";
const sc_lv<4> load_input::ap_const_lv4_0 = "0000";

load_input::load_input(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage10);

    SC_METHOD(thread_ap_block_pp0_stage10_11001);

    SC_METHOD(thread_ap_block_pp0_stage10_subdone);

    SC_METHOD(thread_ap_block_pp0_stage11);

    SC_METHOD(thread_ap_block_pp0_stage11_11001);

    SC_METHOD(thread_ap_block_pp0_stage11_subdone);

    SC_METHOD(thread_ap_block_pp0_stage12);

    SC_METHOD(thread_ap_block_pp0_stage12_11001);

    SC_METHOD(thread_ap_block_pp0_stage12_subdone);

    SC_METHOD(thread_ap_block_pp0_stage13);

    SC_METHOD(thread_ap_block_pp0_stage13_11001);

    SC_METHOD(thread_ap_block_pp0_stage13_subdone);

    SC_METHOD(thread_ap_block_pp0_stage14);

    SC_METHOD(thread_ap_block_pp0_stage14_11001);

    SC_METHOD(thread_ap_block_pp0_stage14_subdone);

    SC_METHOD(thread_ap_block_pp0_stage15);

    SC_METHOD(thread_ap_block_pp0_stage15_11001);

    SC_METHOD(thread_ap_block_pp0_stage15_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_11001);

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_11001);

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_11001);

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);

    SC_METHOD(thread_ap_block_pp0_stage8);

    SC_METHOD(thread_ap_block_pp0_stage8_11001);

    SC_METHOD(thread_ap_block_pp0_stage8_subdone);

    SC_METHOD(thread_ap_block_pp0_stage9);

    SC_METHOD(thread_ap_block_pp0_stage9_11001);

    SC_METHOD(thread_ap_block_pp0_stage9_subdone);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage8_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage9_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage10_iter0);

    SC_METHOD(thread_ap_block_state13_pp0_stage11_iter0);

    SC_METHOD(thread_ap_block_state14_pp0_stage12_iter0);

    SC_METHOD(thread_ap_block_state15_pp0_stage13_iter0);

    SC_METHOD(thread_ap_block_state16_pp0_stage14_iter0);

    SC_METHOD(thread_ap_block_state17_pp0_stage15_iter0);

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond1_fu_651_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_phi_fu_644_p4);
    sensitive << ( i_reg_640 );
    sensitive << ( exitcond1_reg_1111 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_1_reg_1115 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_buffer_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_2_reg_1154 );
    sensitive << ( tmp_6_reg_1174 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_s_reg_1194 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_13_reg_1214 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_17_reg_1234 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_21_reg_1254 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( tmp_25_reg_1274 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_29_reg_1294 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( tmp_33_reg_1314 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( tmp_37_reg_1334 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( tmp_41_reg_1354 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( tmp_45_reg_1374 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( tmp_49_reg_1394 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( tmp_53_reg_1414 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( tmp_57_reg_1434 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( tmp_61_reg_1454 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage15 );

    SC_METHOD(thread_buffer_r_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_4_reg_1164 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_8_reg_1184 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_11_reg_1204 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_15_reg_1224 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_19_reg_1244 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( tmp_23_reg_1264 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_27_reg_1284 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( tmp_31_reg_1304 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( tmp_35_reg_1324 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( tmp_39_reg_1344 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( tmp_43_reg_1364 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( tmp_47_reg_1384 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( tmp_51_reg_1404 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( tmp_55_reg_1424 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( tmp_59_reg_1444 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( tmp_63_reg_1464 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage15 );

    SC_METHOD(thread_buffer_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage11_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage12_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage13_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage14_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_block_pp0_stage15_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_buffer_r_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage11_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage12_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage13_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage14_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_block_pp0_stage15_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_buffer_r_d0);
    sensitive << ( input_r_Dout_A );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage15 );

    SC_METHOD(thread_buffer_r_d1);
    sensitive << ( input_r_Dout_B );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage15 );

    SC_METHOD(thread_buffer_r_we0);
    sensitive << ( exitcond1_reg_1111 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage11_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage12_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage13_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage14_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_block_pp0_stage15_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_buffer_r_we1);
    sensitive << ( exitcond1_reg_1111 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage11_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage12_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage13_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage14_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_block_pp0_stage15_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_exitcond1_fu_651_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_phi_fu_644_p4 );

    SC_METHOD(thread_i_1_fu_657_p2);
    sensitive << ( ap_phi_mux_i_phi_fu_644_p4 );

    SC_METHOD(thread_input_r_Addr_A);
    sensitive << ( input_r_Addr_A_orig );

    SC_METHOD(thread_input_r_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_2_fu_671_p1 );
    sensitive << ( tmp_6_fu_696_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_s_fu_724_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_13_fu_752_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_17_fu_780_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_21_fu_808_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( tmp_25_fu_836_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_29_fu_864_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( tmp_33_fu_892_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( tmp_37_fu_920_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( tmp_41_fu_948_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( tmp_45_fu_976_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( tmp_49_fu_1004_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( tmp_53_fu_1032_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( tmp_57_fu_1060_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( tmp_61_fu_1088_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage15 );

    SC_METHOD(thread_input_r_Addr_B);
    sensitive << ( input_r_Addr_B_orig );

    SC_METHOD(thread_input_r_Addr_B_orig);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_4_fu_682_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( tmp_8_fu_710_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( tmp_11_fu_738_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( tmp_15_fu_766_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( tmp_19_fu_794_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( tmp_23_fu_822_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( tmp_27_fu_850_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( tmp_31_fu_878_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( tmp_35_fu_906_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( tmp_39_fu_934_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( tmp_43_fu_962_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( tmp_47_fu_990_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( tmp_51_fu_1018_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( tmp_55_fu_1046_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( tmp_59_fu_1074_p3 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( tmp_63_fu_1102_p3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage15 );

    SC_METHOD(thread_input_r_Din_A);

    SC_METHOD(thread_input_r_Din_B);

    SC_METHOD(thread_input_r_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage11_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage12_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage13_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage14_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_block_pp0_stage15_11001 );

    SC_METHOD(thread_input_r_EN_B);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage10 );
    sensitive << ( ap_block_pp0_stage10_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage11 );
    sensitive << ( ap_block_pp0_stage11_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage12 );
    sensitive << ( ap_block_pp0_stage12_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage13 );
    sensitive << ( ap_block_pp0_stage13_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage14 );
    sensitive << ( ap_block_pp0_stage14_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage15 );
    sensitive << ( ap_block_pp0_stage15_11001 );

    SC_METHOD(thread_input_r_WEN_A);

    SC_METHOD(thread_input_r_WEN_B);

    SC_METHOD(thread_tmp_10_fu_733_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_11_fu_738_p3);
    sensitive << ( tmp_10_fu_733_p2 );

    SC_METHOD(thread_tmp_12_fu_747_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_13_fu_752_p3);
    sensitive << ( tmp_12_fu_747_p2 );

    SC_METHOD(thread_tmp_14_fu_761_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_15_fu_766_p3);
    sensitive << ( tmp_14_fu_761_p2 );

    SC_METHOD(thread_tmp_16_fu_775_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_17_fu_780_p3);
    sensitive << ( tmp_16_fu_775_p2 );

    SC_METHOD(thread_tmp_18_fu_789_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_19_fu_794_p3);
    sensitive << ( tmp_18_fu_789_p2 );

    SC_METHOD(thread_tmp_20_fu_803_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_21_fu_808_p3);
    sensitive << ( tmp_20_fu_803_p2 );

    SC_METHOD(thread_tmp_22_fu_817_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_23_fu_822_p3);
    sensitive << ( tmp_22_fu_817_p2 );

    SC_METHOD(thread_tmp_24_fu_831_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_25_fu_836_p3);
    sensitive << ( tmp_24_fu_831_p2 );

    SC_METHOD(thread_tmp_26_fu_845_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_27_fu_850_p3);
    sensitive << ( tmp_26_fu_845_p2 );

    SC_METHOD(thread_tmp_28_fu_859_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_29_fu_864_p3);
    sensitive << ( tmp_28_fu_859_p2 );

    SC_METHOD(thread_tmp_2_fu_671_p1);
    sensitive << ( tmp_fu_663_p3 );

    SC_METHOD(thread_tmp_30_fu_873_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_31_fu_878_p3);
    sensitive << ( tmp_30_fu_873_p2 );

    SC_METHOD(thread_tmp_32_fu_887_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_33_fu_892_p3);
    sensitive << ( tmp_32_fu_887_p2 );

    SC_METHOD(thread_tmp_34_fu_901_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_35_fu_906_p3);
    sensitive << ( tmp_34_fu_901_p2 );

    SC_METHOD(thread_tmp_36_fu_915_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_37_fu_920_p3);
    sensitive << ( tmp_36_fu_915_p2 );

    SC_METHOD(thread_tmp_38_fu_929_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_39_fu_934_p3);
    sensitive << ( tmp_38_fu_929_p2 );

    SC_METHOD(thread_tmp_3_fu_676_p2);
    sensitive << ( tmp_fu_663_p3 );

    SC_METHOD(thread_tmp_40_fu_943_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_41_fu_948_p3);
    sensitive << ( tmp_40_fu_943_p2 );

    SC_METHOD(thread_tmp_42_fu_957_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_43_fu_962_p3);
    sensitive << ( tmp_42_fu_957_p2 );

    SC_METHOD(thread_tmp_44_fu_971_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_45_fu_976_p3);
    sensitive << ( tmp_44_fu_971_p2 );

    SC_METHOD(thread_tmp_46_fu_985_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_47_fu_990_p3);
    sensitive << ( tmp_46_fu_985_p2 );

    SC_METHOD(thread_tmp_48_fu_999_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_49_fu_1004_p3);
    sensitive << ( tmp_48_fu_999_p2 );

    SC_METHOD(thread_tmp_4_fu_682_p3);
    sensitive << ( tmp_3_fu_676_p2 );

    SC_METHOD(thread_tmp_50_fu_1013_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_51_fu_1018_p3);
    sensitive << ( tmp_50_fu_1013_p2 );

    SC_METHOD(thread_tmp_52_fu_1027_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_53_fu_1032_p3);
    sensitive << ( tmp_52_fu_1027_p2 );

    SC_METHOD(thread_tmp_54_fu_1041_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_55_fu_1046_p3);
    sensitive << ( tmp_54_fu_1041_p2 );

    SC_METHOD(thread_tmp_56_fu_1055_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_57_fu_1060_p3);
    sensitive << ( tmp_56_fu_1055_p2 );

    SC_METHOD(thread_tmp_58_fu_1069_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_59_fu_1074_p3);
    sensitive << ( tmp_58_fu_1069_p2 );

    SC_METHOD(thread_tmp_5_fu_691_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_60_fu_1083_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_61_fu_1088_p3);
    sensitive << ( tmp_60_fu_1083_p2 );

    SC_METHOD(thread_tmp_62_fu_1097_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_63_fu_1102_p3);
    sensitive << ( tmp_62_fu_1097_p2 );

    SC_METHOD(thread_tmp_6_fu_696_p3);
    sensitive << ( tmp_5_fu_691_p2 );

    SC_METHOD(thread_tmp_7_fu_705_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_8_fu_710_p3);
    sensitive << ( tmp_7_fu_705_p2 );

    SC_METHOD(thread_tmp_9_fu_719_p2);
    sensitive << ( tmp_reg_1120 );

    SC_METHOD(thread_tmp_fu_663_p3);
    sensitive << ( ap_phi_mux_i_phi_fu_644_p4 );

    SC_METHOD(thread_tmp_s_fu_724_p3);
    sensitive << ( tmp_9_fu_719_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond1_fu_651_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage15_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage8_subdone );
    sensitive << ( ap_block_pp0_stage9_subdone );
    sensitive << ( ap_block_pp0_stage10_subdone );
    sensitive << ( ap_block_pp0_stage11_subdone );
    sensitive << ( ap_block_pp0_stage12_subdone );
    sensitive << ( ap_block_pp0_stage13_subdone );
    sensitive << ( ap_block_pp0_stage14_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "load_input_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_Addr_A, "(port)input_r_Addr_A");
    sc_trace(mVcdFile, input_r_EN_A, "(port)input_r_EN_A");
    sc_trace(mVcdFile, input_r_WEN_A, "(port)input_r_WEN_A");
    sc_trace(mVcdFile, input_r_Din_A, "(port)input_r_Din_A");
    sc_trace(mVcdFile, input_r_Dout_A, "(port)input_r_Dout_A");
    sc_trace(mVcdFile, input_r_Addr_B, "(port)input_r_Addr_B");
    sc_trace(mVcdFile, input_r_EN_B, "(port)input_r_EN_B");
    sc_trace(mVcdFile, input_r_WEN_B, "(port)input_r_WEN_B");
    sc_trace(mVcdFile, input_r_Din_B, "(port)input_r_Din_B");
    sc_trace(mVcdFile, input_r_Dout_B, "(port)input_r_Dout_B");
    sc_trace(mVcdFile, buffer_r_address0, "(port)buffer_r_address0");
    sc_trace(mVcdFile, buffer_r_ce0, "(port)buffer_r_ce0");
    sc_trace(mVcdFile, buffer_r_we0, "(port)buffer_r_we0");
    sc_trace(mVcdFile, buffer_r_d0, "(port)buffer_r_d0");
    sc_trace(mVcdFile, buffer_r_address1, "(port)buffer_r_address1");
    sc_trace(mVcdFile, buffer_r_ce1, "(port)buffer_r_ce1");
    sc_trace(mVcdFile, buffer_r_we1, "(port)buffer_r_we1");
    sc_trace(mVcdFile, buffer_r_d1, "(port)buffer_r_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_reg_640, "i_reg_640");
    sc_trace(mVcdFile, exitcond1_fu_651_p2, "exitcond1_fu_651_p2");
    sc_trace(mVcdFile, exitcond1_reg_1111, "exitcond1_reg_1111");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter1, "ap_block_state18_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_1_fu_657_p2, "i_1_fu_657_p2");
    sc_trace(mVcdFile, i_1_reg_1115, "i_1_reg_1115");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_fu_663_p3, "tmp_fu_663_p3");
    sc_trace(mVcdFile, tmp_reg_1120, "tmp_reg_1120");
    sc_trace(mVcdFile, tmp_2_fu_671_p1, "tmp_2_fu_671_p1");
    sc_trace(mVcdFile, tmp_2_reg_1154, "tmp_2_reg_1154");
    sc_trace(mVcdFile, tmp_4_fu_682_p3, "tmp_4_fu_682_p3");
    sc_trace(mVcdFile, tmp_4_reg_1164, "tmp_4_reg_1164");
    sc_trace(mVcdFile, tmp_6_fu_696_p3, "tmp_6_fu_696_p3");
    sc_trace(mVcdFile, tmp_6_reg_1174, "tmp_6_reg_1174");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, tmp_8_fu_710_p3, "tmp_8_fu_710_p3");
    sc_trace(mVcdFile, tmp_8_reg_1184, "tmp_8_reg_1184");
    sc_trace(mVcdFile, tmp_s_fu_724_p3, "tmp_s_fu_724_p3");
    sc_trace(mVcdFile, tmp_s_reg_1194, "tmp_s_reg_1194");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, tmp_11_fu_738_p3, "tmp_11_fu_738_p3");
    sc_trace(mVcdFile, tmp_11_reg_1204, "tmp_11_reg_1204");
    sc_trace(mVcdFile, tmp_13_fu_752_p3, "tmp_13_fu_752_p3");
    sc_trace(mVcdFile, tmp_13_reg_1214, "tmp_13_reg_1214");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, tmp_15_fu_766_p3, "tmp_15_fu_766_p3");
    sc_trace(mVcdFile, tmp_15_reg_1224, "tmp_15_reg_1224");
    sc_trace(mVcdFile, tmp_17_fu_780_p3, "tmp_17_fu_780_p3");
    sc_trace(mVcdFile, tmp_17_reg_1234, "tmp_17_reg_1234");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, tmp_19_fu_794_p3, "tmp_19_fu_794_p3");
    sc_trace(mVcdFile, tmp_19_reg_1244, "tmp_19_reg_1244");
    sc_trace(mVcdFile, tmp_21_fu_808_p3, "tmp_21_fu_808_p3");
    sc_trace(mVcdFile, tmp_21_reg_1254, "tmp_21_reg_1254");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, tmp_23_fu_822_p3, "tmp_23_fu_822_p3");
    sc_trace(mVcdFile, tmp_23_reg_1264, "tmp_23_reg_1264");
    sc_trace(mVcdFile, tmp_25_fu_836_p3, "tmp_25_fu_836_p3");
    sc_trace(mVcdFile, tmp_25_reg_1274, "tmp_25_reg_1274");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, tmp_27_fu_850_p3, "tmp_27_fu_850_p3");
    sc_trace(mVcdFile, tmp_27_reg_1284, "tmp_27_reg_1284");
    sc_trace(mVcdFile, tmp_29_fu_864_p3, "tmp_29_fu_864_p3");
    sc_trace(mVcdFile, tmp_29_reg_1294, "tmp_29_reg_1294");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, tmp_31_fu_878_p3, "tmp_31_fu_878_p3");
    sc_trace(mVcdFile, tmp_31_reg_1304, "tmp_31_reg_1304");
    sc_trace(mVcdFile, tmp_33_fu_892_p3, "tmp_33_fu_892_p3");
    sc_trace(mVcdFile, tmp_33_reg_1314, "tmp_33_reg_1314");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage8_iter0, "ap_block_state10_pp0_stage8_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage8_11001, "ap_block_pp0_stage8_11001");
    sc_trace(mVcdFile, tmp_35_fu_906_p3, "tmp_35_fu_906_p3");
    sc_trace(mVcdFile, tmp_35_reg_1324, "tmp_35_reg_1324");
    sc_trace(mVcdFile, tmp_37_fu_920_p3, "tmp_37_fu_920_p3");
    sc_trace(mVcdFile, tmp_37_reg_1334, "tmp_37_reg_1334");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage9, "ap_CS_fsm_pp0_stage9");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage9_iter0, "ap_block_state11_pp0_stage9_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage9_11001, "ap_block_pp0_stage9_11001");
    sc_trace(mVcdFile, tmp_39_fu_934_p3, "tmp_39_fu_934_p3");
    sc_trace(mVcdFile, tmp_39_reg_1344, "tmp_39_reg_1344");
    sc_trace(mVcdFile, tmp_41_fu_948_p3, "tmp_41_fu_948_p3");
    sc_trace(mVcdFile, tmp_41_reg_1354, "tmp_41_reg_1354");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage10, "ap_CS_fsm_pp0_stage10");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage10_iter0, "ap_block_state12_pp0_stage10_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage10_11001, "ap_block_pp0_stage10_11001");
    sc_trace(mVcdFile, tmp_43_fu_962_p3, "tmp_43_fu_962_p3");
    sc_trace(mVcdFile, tmp_43_reg_1364, "tmp_43_reg_1364");
    sc_trace(mVcdFile, tmp_45_fu_976_p3, "tmp_45_fu_976_p3");
    sc_trace(mVcdFile, tmp_45_reg_1374, "tmp_45_reg_1374");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage11, "ap_CS_fsm_pp0_stage11");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage11_iter0, "ap_block_state13_pp0_stage11_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage11_11001, "ap_block_pp0_stage11_11001");
    sc_trace(mVcdFile, tmp_47_fu_990_p3, "tmp_47_fu_990_p3");
    sc_trace(mVcdFile, tmp_47_reg_1384, "tmp_47_reg_1384");
    sc_trace(mVcdFile, tmp_49_fu_1004_p3, "tmp_49_fu_1004_p3");
    sc_trace(mVcdFile, tmp_49_reg_1394, "tmp_49_reg_1394");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage12, "ap_CS_fsm_pp0_stage12");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage12_iter0, "ap_block_state14_pp0_stage12_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage12_11001, "ap_block_pp0_stage12_11001");
    sc_trace(mVcdFile, tmp_51_fu_1018_p3, "tmp_51_fu_1018_p3");
    sc_trace(mVcdFile, tmp_51_reg_1404, "tmp_51_reg_1404");
    sc_trace(mVcdFile, tmp_53_fu_1032_p3, "tmp_53_fu_1032_p3");
    sc_trace(mVcdFile, tmp_53_reg_1414, "tmp_53_reg_1414");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage13, "ap_CS_fsm_pp0_stage13");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage13_iter0, "ap_block_state15_pp0_stage13_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage13_11001, "ap_block_pp0_stage13_11001");
    sc_trace(mVcdFile, tmp_55_fu_1046_p3, "tmp_55_fu_1046_p3");
    sc_trace(mVcdFile, tmp_55_reg_1424, "tmp_55_reg_1424");
    sc_trace(mVcdFile, tmp_57_fu_1060_p3, "tmp_57_fu_1060_p3");
    sc_trace(mVcdFile, tmp_57_reg_1434, "tmp_57_reg_1434");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage14, "ap_CS_fsm_pp0_stage14");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage14_iter0, "ap_block_state16_pp0_stage14_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage14_11001, "ap_block_pp0_stage14_11001");
    sc_trace(mVcdFile, tmp_59_fu_1074_p3, "tmp_59_fu_1074_p3");
    sc_trace(mVcdFile, tmp_59_reg_1444, "tmp_59_reg_1444");
    sc_trace(mVcdFile, tmp_61_fu_1088_p3, "tmp_61_fu_1088_p3");
    sc_trace(mVcdFile, tmp_61_reg_1454, "tmp_61_reg_1454");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage15, "ap_CS_fsm_pp0_stage15");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage15_iter0, "ap_block_state17_pp0_stage15_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage15_11001, "ap_block_pp0_stage15_11001");
    sc_trace(mVcdFile, tmp_63_fu_1102_p3, "tmp_63_fu_1102_p3");
    sc_trace(mVcdFile, tmp_63_reg_1464, "tmp_63_reg_1464");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage15_subdone, "ap_block_pp0_stage15_subdone");
    sc_trace(mVcdFile, ap_phi_mux_i_phi_fu_644_p4, "ap_phi_mux_i_phi_fu_644_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, ap_block_pp0_stage8, "ap_block_pp0_stage8");
    sc_trace(mVcdFile, ap_block_pp0_stage9, "ap_block_pp0_stage9");
    sc_trace(mVcdFile, ap_block_pp0_stage10, "ap_block_pp0_stage10");
    sc_trace(mVcdFile, ap_block_pp0_stage11, "ap_block_pp0_stage11");
    sc_trace(mVcdFile, ap_block_pp0_stage12, "ap_block_pp0_stage12");
    sc_trace(mVcdFile, ap_block_pp0_stage13, "ap_block_pp0_stage13");
    sc_trace(mVcdFile, ap_block_pp0_stage14, "ap_block_pp0_stage14");
    sc_trace(mVcdFile, ap_block_pp0_stage15, "ap_block_pp0_stage15");
    sc_trace(mVcdFile, input_r_Addr_A_orig, "input_r_Addr_A_orig");
    sc_trace(mVcdFile, input_r_Addr_B_orig, "input_r_Addr_B_orig");
    sc_trace(mVcdFile, tmp_3_fu_676_p2, "tmp_3_fu_676_p2");
    sc_trace(mVcdFile, tmp_5_fu_691_p2, "tmp_5_fu_691_p2");
    sc_trace(mVcdFile, tmp_7_fu_705_p2, "tmp_7_fu_705_p2");
    sc_trace(mVcdFile, tmp_9_fu_719_p2, "tmp_9_fu_719_p2");
    sc_trace(mVcdFile, tmp_10_fu_733_p2, "tmp_10_fu_733_p2");
    sc_trace(mVcdFile, tmp_12_fu_747_p2, "tmp_12_fu_747_p2");
    sc_trace(mVcdFile, tmp_14_fu_761_p2, "tmp_14_fu_761_p2");
    sc_trace(mVcdFile, tmp_16_fu_775_p2, "tmp_16_fu_775_p2");
    sc_trace(mVcdFile, tmp_18_fu_789_p2, "tmp_18_fu_789_p2");
    sc_trace(mVcdFile, tmp_20_fu_803_p2, "tmp_20_fu_803_p2");
    sc_trace(mVcdFile, tmp_22_fu_817_p2, "tmp_22_fu_817_p2");
    sc_trace(mVcdFile, tmp_24_fu_831_p2, "tmp_24_fu_831_p2");
    sc_trace(mVcdFile, tmp_26_fu_845_p2, "tmp_26_fu_845_p2");
    sc_trace(mVcdFile, tmp_28_fu_859_p2, "tmp_28_fu_859_p2");
    sc_trace(mVcdFile, tmp_30_fu_873_p2, "tmp_30_fu_873_p2");
    sc_trace(mVcdFile, tmp_32_fu_887_p2, "tmp_32_fu_887_p2");
    sc_trace(mVcdFile, tmp_34_fu_901_p2, "tmp_34_fu_901_p2");
    sc_trace(mVcdFile, tmp_36_fu_915_p2, "tmp_36_fu_915_p2");
    sc_trace(mVcdFile, tmp_38_fu_929_p2, "tmp_38_fu_929_p2");
    sc_trace(mVcdFile, tmp_40_fu_943_p2, "tmp_40_fu_943_p2");
    sc_trace(mVcdFile, tmp_42_fu_957_p2, "tmp_42_fu_957_p2");
    sc_trace(mVcdFile, tmp_44_fu_971_p2, "tmp_44_fu_971_p2");
    sc_trace(mVcdFile, tmp_46_fu_985_p2, "tmp_46_fu_985_p2");
    sc_trace(mVcdFile, tmp_48_fu_999_p2, "tmp_48_fu_999_p2");
    sc_trace(mVcdFile, tmp_50_fu_1013_p2, "tmp_50_fu_1013_p2");
    sc_trace(mVcdFile, tmp_52_fu_1027_p2, "tmp_52_fu_1027_p2");
    sc_trace(mVcdFile, tmp_54_fu_1041_p2, "tmp_54_fu_1041_p2");
    sc_trace(mVcdFile, tmp_56_fu_1055_p2, "tmp_56_fu_1055_p2");
    sc_trace(mVcdFile, tmp_58_fu_1069_p2, "tmp_58_fu_1069_p2");
    sc_trace(mVcdFile, tmp_60_fu_1083_p2, "tmp_60_fu_1083_p2");
    sc_trace(mVcdFile, tmp_62_fu_1097_p2, "tmp_62_fu_1097_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage8_subdone, "ap_block_pp0_stage8_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage9_subdone, "ap_block_pp0_stage9_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage10_subdone, "ap_block_pp0_stage10_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage11_subdone, "ap_block_pp0_stage11_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage12_subdone, "ap_block_pp0_stage12_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage13_subdone, "ap_block_pp0_stage13_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage14_subdone, "ap_block_pp0_stage14_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

load_input::~load_input() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void load_input::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage15_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        i_reg_640 = i_1_reg_1115.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_reg_640 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond1_reg_1111 = exitcond1_fu_651_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_1_reg_1115 = i_1_fu_657_p2.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp_11_reg_1204 = tmp_11_fu_738_p3.read();
        tmp_s_reg_1194 = tmp_s_fu_724_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_13_reg_1214 = tmp_13_fu_752_p3.read();
        tmp_15_reg_1224 = tmp_15_fu_766_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        tmp_17_reg_1234 = tmp_17_fu_780_p3.read();
        tmp_19_reg_1244 = tmp_19_fu_794_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        tmp_21_reg_1254 = tmp_21_fu_808_p3.read();
        tmp_23_reg_1264 = tmp_23_fu_822_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0))) {
        tmp_25_reg_1274 = tmp_25_fu_836_p3.read();
        tmp_27_reg_1284 = tmp_27_fu_850_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        tmp_29_reg_1294 = tmp_29_fu_864_p3.read();
        tmp_31_reg_1304 = tmp_31_fu_878_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond1_fu_651_p2.read(), ap_const_lv1_0))) {
        tmp_2_reg_1154 = tmp_2_fu_671_p1.read();
        tmp_4_reg_1164 = tmp_4_fu_682_p3.read();
        tmp_reg_1120 = tmp_fu_663_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0))) {
        tmp_33_reg_1314 = tmp_33_fu_892_p3.read();
        tmp_35_reg_1324 = tmp_35_fu_906_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0))) {
        tmp_37_reg_1334 = tmp_37_fu_920_p3.read();
        tmp_39_reg_1344 = tmp_39_fu_934_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0))) {
        tmp_41_reg_1354 = tmp_41_fu_948_p3.read();
        tmp_43_reg_1364 = tmp_43_fu_962_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0))) {
        tmp_45_reg_1374 = tmp_45_fu_976_p3.read();
        tmp_47_reg_1384 = tmp_47_fu_990_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0))) {
        tmp_49_reg_1394 = tmp_49_fu_1004_p3.read();
        tmp_51_reg_1404 = tmp_51_fu_1018_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0))) {
        tmp_53_reg_1414 = tmp_53_fu_1032_p3.read();
        tmp_55_reg_1424 = tmp_55_fu_1046_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0))) {
        tmp_57_reg_1434 = tmp_57_fu_1060_p3.read();
        tmp_59_reg_1444 = tmp_59_fu_1074_p3.read();
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0))) {
        tmp_61_reg_1454 = tmp_61_fu_1088_p3.read();
        tmp_63_reg_1464 = tmp_63_fu_1102_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0))) {
        tmp_6_reg_1174 = tmp_6_fu_696_p3.read();
        tmp_8_reg_1184 = tmp_8_fu_710_p3.read();
    }
}

void load_input::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void load_input::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void load_input::thread_ap_CS_fsm_pp0_stage10() {
    ap_CS_fsm_pp0_stage10 = ap_CS_fsm.read()[11];
}

void load_input::thread_ap_CS_fsm_pp0_stage11() {
    ap_CS_fsm_pp0_stage11 = ap_CS_fsm.read()[12];
}

void load_input::thread_ap_CS_fsm_pp0_stage12() {
    ap_CS_fsm_pp0_stage12 = ap_CS_fsm.read()[13];
}

void load_input::thread_ap_CS_fsm_pp0_stage13() {
    ap_CS_fsm_pp0_stage13 = ap_CS_fsm.read()[14];
}

void load_input::thread_ap_CS_fsm_pp0_stage14() {
    ap_CS_fsm_pp0_stage14 = ap_CS_fsm.read()[15];
}

void load_input::thread_ap_CS_fsm_pp0_stage15() {
    ap_CS_fsm_pp0_stage15 = ap_CS_fsm.read()[16];
}

void load_input::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void load_input::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void load_input::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void load_input::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void load_input::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void load_input::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void load_input::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read()[9];
}

void load_input::thread_ap_CS_fsm_pp0_stage9() {
    ap_CS_fsm_pp0_stage9 = ap_CS_fsm.read()[10];
}

void load_input::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void load_input::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[17];
}

void load_input::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage10() {
    ap_block_pp0_stage10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage10_11001() {
    ap_block_pp0_stage10_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage10_subdone() {
    ap_block_pp0_stage10_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage11() {
    ap_block_pp0_stage11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage11_11001() {
    ap_block_pp0_stage11_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage11_subdone() {
    ap_block_pp0_stage11_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage12() {
    ap_block_pp0_stage12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage12_11001() {
    ap_block_pp0_stage12_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage12_subdone() {
    ap_block_pp0_stage12_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage13() {
    ap_block_pp0_stage13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage13_11001() {
    ap_block_pp0_stage13_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage13_subdone() {
    ap_block_pp0_stage13_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage14() {
    ap_block_pp0_stage14 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage14_11001() {
    ap_block_pp0_stage14_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage14_subdone() {
    ap_block_pp0_stage14_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage15() {
    ap_block_pp0_stage15 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage15_11001() {
    ap_block_pp0_stage15_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage15_subdone() {
    ap_block_pp0_stage15_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage8() {
    ap_block_pp0_stage8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage8_11001() {
    ap_block_pp0_stage8_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage8_subdone() {
    ap_block_pp0_stage8_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage9() {
    ap_block_pp0_stage9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage9_11001() {
    ap_block_pp0_stage9_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_pp0_stage9_subdone() {
    ap_block_pp0_stage9_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void load_input::thread_ap_block_state10_pp0_stage8_iter0() {
    ap_block_state10_pp0_stage8_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state11_pp0_stage9_iter0() {
    ap_block_state11_pp0_stage9_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state12_pp0_stage10_iter0() {
    ap_block_state12_pp0_stage10_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state13_pp0_stage11_iter0() {
    ap_block_state13_pp0_stage11_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state14_pp0_stage12_iter0() {
    ap_block_state14_pp0_stage12_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state15_pp0_stage13_iter0() {
    ap_block_state15_pp0_stage13_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state16_pp0_stage14_iter0() {
    ap_block_state16_pp0_stage14_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state17_pp0_stage15_iter0() {
    ap_block_state17_pp0_stage15_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state18_pp0_stage0_iter1() {
    ap_block_state18_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void load_input::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond1_fu_651_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void load_input::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void load_input::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void load_input::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void load_input::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void load_input::thread_ap_phi_mux_i_phi_fu_644_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_phi_fu_644_p4 = i_1_reg_1115.read();
    } else {
        ap_phi_mux_i_phi_fu_644_p4 = i_reg_640.read();
    }
}

void load_input::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void load_input::thread_buffer_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_61_reg_1454.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage15.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_57_reg_1434.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage14.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_53_reg_1414.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage13.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_49_reg_1394.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage12.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_45_reg_1374.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage11.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_41_reg_1354.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage10.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_37_reg_1334.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_33_reg_1314.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_29_reg_1294.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_25_reg_1274.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_21_reg_1254.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_17_reg_1234.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_13_reg_1214.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_s_reg_1194.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_6_reg_1174.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        buffer_r_address0 =  (sc_lv<10>) (tmp_2_reg_1154.read());
    } else {
        buffer_r_address0 = "XXXXXXXXXX";
    }
}

void load_input::thread_buffer_r_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_63_reg_1464.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage15.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_59_reg_1444.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage14.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_55_reg_1424.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage13.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_51_reg_1404.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage12.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_47_reg_1384.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage11.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_43_reg_1364.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage10.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_39_reg_1344.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_35_reg_1324.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_31_reg_1304.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_27_reg_1284.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_23_reg_1264.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_19_reg_1244.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_15_reg_1224.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_11_reg_1204.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_8_reg_1184.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        buffer_r_address1 =  (sc_lv<10>) (tmp_4_reg_1164.read());
    } else {
        buffer_r_address1 = "XXXXXXXXXX";
    }
}

void load_input::thread_buffer_r_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0)))) {
        buffer_r_ce0 = ap_const_logic_1;
    } else {
        buffer_r_ce0 = ap_const_logic_0;
    }
}

void load_input::thread_buffer_r_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0)))) {
        buffer_r_ce1 = ap_const_logic_1;
    } else {
        buffer_r_ce1 = ap_const_logic_0;
    }
}

void load_input::thread_buffer_r_d0() {
    buffer_r_d0 = input_r_Dout_A.read();
}

void load_input::thread_buffer_r_d1() {
    buffer_r_d1 = input_r_Dout_B.read();
}

void load_input::thread_buffer_r_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0)))) {
        buffer_r_we0 = ap_const_logic_1;
    } else {
        buffer_r_we0 = ap_const_logic_0;
    }
}

void load_input::thread_buffer_r_we1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_1111.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0)))) {
        buffer_r_we1 = ap_const_logic_1;
    } else {
        buffer_r_we1 = ap_const_logic_0;
    }
}

void load_input::thread_exitcond1_fu_651_p2() {
    exitcond1_fu_651_p2 = (!ap_phi_mux_i_phi_fu_644_p4.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_phi_fu_644_p4.read() == ap_const_lv6_20);
}

void load_input::thread_i_1_fu_657_p2() {
    i_1_fu_657_p2 = (!ap_phi_mux_i_phi_fu_644_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_i_phi_fu_644_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void load_input::thread_input_r_Addr_A() {
    input_r_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): input_r_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void load_input::thread_input_r_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage15.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_61_fu_1088_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage14.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_57_fu_1060_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage13.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_53_fu_1032_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage12.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_49_fu_1004_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage11.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_45_fu_976_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage10.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_41_fu_948_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_37_fu_920_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_33_fu_892_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_29_fu_864_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_25_fu_836_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_21_fu_808_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_17_fu_780_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_13_fu_752_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_s_fu_724_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_6_fu_696_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            input_r_Addr_A_orig =  (sc_lv<32>) (tmp_2_fu_671_p1.read());
        } else {
            input_r_Addr_A_orig =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        input_r_Addr_A_orig =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void load_input::thread_input_r_Addr_B() {
    input_r_Addr_B = (!ap_const_lv32_2.is_01())? sc_lv<32>(): input_r_Addr_B_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void load_input::thread_input_r_Addr_B_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage15.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_63_fu_1102_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage14.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_59_fu_1074_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage13.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_55_fu_1046_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage12.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_51_fu_1018_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage11.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_47_fu_990_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage10.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_43_fu_962_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_39_fu_934_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_35_fu_906_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_31_fu_878_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_27_fu_850_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_23_fu_822_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_19_fu_794_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_15_fu_766_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_11_fu_738_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_8_fu_710_p3.read());
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                    esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
            input_r_Addr_B_orig =  (sc_lv<32>) (tmp_4_fu_682_p3.read());
        } else {
            input_r_Addr_B_orig =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
        }
    } else {
        input_r_Addr_B_orig =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void load_input::thread_input_r_Din_A() {
    input_r_Din_A = ap_const_lv32_0;
}

void load_input::thread_input_r_Din_B() {
    input_r_Din_B = ap_const_lv32_0;
}

void load_input::thread_input_r_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0)))) {
        input_r_EN_A = ap_const_logic_1;
    } else {
        input_r_EN_A = ap_const_logic_0;
    }
}

void load_input::thread_input_r_EN_B() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage10.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage10_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage11.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage11_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage12.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage12_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage13.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage13_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage14.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage14_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage15.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage15_11001.read(), ap_const_boolean_0)))) {
        input_r_EN_B = ap_const_logic_1;
    } else {
        input_r_EN_B = ap_const_logic_0;
    }
}

void load_input::thread_input_r_WEN_A() {
    input_r_WEN_A = ap_const_lv4_0;
}

void load_input::thread_input_r_WEN_B() {
    input_r_WEN_B = ap_const_lv4_0;
}

void load_input::thread_tmp_10_fu_733_p2() {
    tmp_10_fu_733_p2 = (tmp_reg_1120.read() | ap_const_lv11_5);
}

void load_input::thread_tmp_11_fu_738_p3() {
    tmp_11_fu_738_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_10_fu_733_p2.read());
}

void load_input::thread_tmp_12_fu_747_p2() {
    tmp_12_fu_747_p2 = (tmp_reg_1120.read() | ap_const_lv11_6);
}

void load_input::thread_tmp_13_fu_752_p3() {
    tmp_13_fu_752_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_12_fu_747_p2.read());
}

void load_input::thread_tmp_14_fu_761_p2() {
    tmp_14_fu_761_p2 = (tmp_reg_1120.read() | ap_const_lv11_7);
}

void load_input::thread_tmp_15_fu_766_p3() {
    tmp_15_fu_766_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_14_fu_761_p2.read());
}

void load_input::thread_tmp_16_fu_775_p2() {
    tmp_16_fu_775_p2 = (tmp_reg_1120.read() | ap_const_lv11_8);
}

void load_input::thread_tmp_17_fu_780_p3() {
    tmp_17_fu_780_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_16_fu_775_p2.read());
}

void load_input::thread_tmp_18_fu_789_p2() {
    tmp_18_fu_789_p2 = (tmp_reg_1120.read() | ap_const_lv11_9);
}

void load_input::thread_tmp_19_fu_794_p3() {
    tmp_19_fu_794_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_18_fu_789_p2.read());
}

void load_input::thread_tmp_20_fu_803_p2() {
    tmp_20_fu_803_p2 = (tmp_reg_1120.read() | ap_const_lv11_A);
}

void load_input::thread_tmp_21_fu_808_p3() {
    tmp_21_fu_808_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_20_fu_803_p2.read());
}

void load_input::thread_tmp_22_fu_817_p2() {
    tmp_22_fu_817_p2 = (tmp_reg_1120.read() | ap_const_lv11_B);
}

void load_input::thread_tmp_23_fu_822_p3() {
    tmp_23_fu_822_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_22_fu_817_p2.read());
}

void load_input::thread_tmp_24_fu_831_p2() {
    tmp_24_fu_831_p2 = (tmp_reg_1120.read() | ap_const_lv11_C);
}

void load_input::thread_tmp_25_fu_836_p3() {
    tmp_25_fu_836_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_24_fu_831_p2.read());
}

void load_input::thread_tmp_26_fu_845_p2() {
    tmp_26_fu_845_p2 = (tmp_reg_1120.read() | ap_const_lv11_D);
}

void load_input::thread_tmp_27_fu_850_p3() {
    tmp_27_fu_850_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_26_fu_845_p2.read());
}

void load_input::thread_tmp_28_fu_859_p2() {
    tmp_28_fu_859_p2 = (tmp_reg_1120.read() | ap_const_lv11_E);
}

void load_input::thread_tmp_29_fu_864_p3() {
    tmp_29_fu_864_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_28_fu_859_p2.read());
}

void load_input::thread_tmp_2_fu_671_p1() {
    tmp_2_fu_671_p1 = esl_zext<64,11>(tmp_fu_663_p3.read());
}

void load_input::thread_tmp_30_fu_873_p2() {
    tmp_30_fu_873_p2 = (tmp_reg_1120.read() | ap_const_lv11_F);
}

void load_input::thread_tmp_31_fu_878_p3() {
    tmp_31_fu_878_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_30_fu_873_p2.read());
}

void load_input::thread_tmp_32_fu_887_p2() {
    tmp_32_fu_887_p2 = (tmp_reg_1120.read() | ap_const_lv11_10);
}

void load_input::thread_tmp_33_fu_892_p3() {
    tmp_33_fu_892_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_32_fu_887_p2.read());
}

void load_input::thread_tmp_34_fu_901_p2() {
    tmp_34_fu_901_p2 = (tmp_reg_1120.read() | ap_const_lv11_11);
}

void load_input::thread_tmp_35_fu_906_p3() {
    tmp_35_fu_906_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_34_fu_901_p2.read());
}

void load_input::thread_tmp_36_fu_915_p2() {
    tmp_36_fu_915_p2 = (tmp_reg_1120.read() | ap_const_lv11_12);
}

void load_input::thread_tmp_37_fu_920_p3() {
    tmp_37_fu_920_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_36_fu_915_p2.read());
}

void load_input::thread_tmp_38_fu_929_p2() {
    tmp_38_fu_929_p2 = (tmp_reg_1120.read() | ap_const_lv11_13);
}

void load_input::thread_tmp_39_fu_934_p3() {
    tmp_39_fu_934_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_38_fu_929_p2.read());
}

void load_input::thread_tmp_3_fu_676_p2() {
    tmp_3_fu_676_p2 = (tmp_fu_663_p3.read() | ap_const_lv11_1);
}

void load_input::thread_tmp_40_fu_943_p2() {
    tmp_40_fu_943_p2 = (tmp_reg_1120.read() | ap_const_lv11_14);
}

void load_input::thread_tmp_41_fu_948_p3() {
    tmp_41_fu_948_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_40_fu_943_p2.read());
}

void load_input::thread_tmp_42_fu_957_p2() {
    tmp_42_fu_957_p2 = (tmp_reg_1120.read() | ap_const_lv11_15);
}

void load_input::thread_tmp_43_fu_962_p3() {
    tmp_43_fu_962_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_42_fu_957_p2.read());
}

void load_input::thread_tmp_44_fu_971_p2() {
    tmp_44_fu_971_p2 = (tmp_reg_1120.read() | ap_const_lv11_16);
}

void load_input::thread_tmp_45_fu_976_p3() {
    tmp_45_fu_976_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_44_fu_971_p2.read());
}

void load_input::thread_tmp_46_fu_985_p2() {
    tmp_46_fu_985_p2 = (tmp_reg_1120.read() | ap_const_lv11_17);
}

void load_input::thread_tmp_47_fu_990_p3() {
    tmp_47_fu_990_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_46_fu_985_p2.read());
}

void load_input::thread_tmp_48_fu_999_p2() {
    tmp_48_fu_999_p2 = (tmp_reg_1120.read() | ap_const_lv11_18);
}

void load_input::thread_tmp_49_fu_1004_p3() {
    tmp_49_fu_1004_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_48_fu_999_p2.read());
}

void load_input::thread_tmp_4_fu_682_p3() {
    tmp_4_fu_682_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_3_fu_676_p2.read());
}

void load_input::thread_tmp_50_fu_1013_p2() {
    tmp_50_fu_1013_p2 = (tmp_reg_1120.read() | ap_const_lv11_19);
}

void load_input::thread_tmp_51_fu_1018_p3() {
    tmp_51_fu_1018_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_50_fu_1013_p2.read());
}

void load_input::thread_tmp_52_fu_1027_p2() {
    tmp_52_fu_1027_p2 = (tmp_reg_1120.read() | ap_const_lv11_1A);
}

void load_input::thread_tmp_53_fu_1032_p3() {
    tmp_53_fu_1032_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_52_fu_1027_p2.read());
}

void load_input::thread_tmp_54_fu_1041_p2() {
    tmp_54_fu_1041_p2 = (tmp_reg_1120.read() | ap_const_lv11_1B);
}

void load_input::thread_tmp_55_fu_1046_p3() {
    tmp_55_fu_1046_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_54_fu_1041_p2.read());
}

void load_input::thread_tmp_56_fu_1055_p2() {
    tmp_56_fu_1055_p2 = (tmp_reg_1120.read() | ap_const_lv11_1C);
}

void load_input::thread_tmp_57_fu_1060_p3() {
    tmp_57_fu_1060_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_56_fu_1055_p2.read());
}

void load_input::thread_tmp_58_fu_1069_p2() {
    tmp_58_fu_1069_p2 = (tmp_reg_1120.read() | ap_const_lv11_1D);
}

void load_input::thread_tmp_59_fu_1074_p3() {
    tmp_59_fu_1074_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_58_fu_1069_p2.read());
}

void load_input::thread_tmp_5_fu_691_p2() {
    tmp_5_fu_691_p2 = (tmp_reg_1120.read() | ap_const_lv11_2);
}

void load_input::thread_tmp_60_fu_1083_p2() {
    tmp_60_fu_1083_p2 = (tmp_reg_1120.read() | ap_const_lv11_1E);
}

void load_input::thread_tmp_61_fu_1088_p3() {
    tmp_61_fu_1088_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_60_fu_1083_p2.read());
}

void load_input::thread_tmp_62_fu_1097_p2() {
    tmp_62_fu_1097_p2 = (tmp_reg_1120.read() | ap_const_lv11_1F);
}

void load_input::thread_tmp_63_fu_1102_p3() {
    tmp_63_fu_1102_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_62_fu_1097_p2.read());
}

void load_input::thread_tmp_6_fu_696_p3() {
    tmp_6_fu_696_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_5_fu_691_p2.read());
}

void load_input::thread_tmp_7_fu_705_p2() {
    tmp_7_fu_705_p2 = (tmp_reg_1120.read() | ap_const_lv11_3);
}

void load_input::thread_tmp_8_fu_710_p3() {
    tmp_8_fu_710_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_7_fu_705_p2.read());
}

void load_input::thread_tmp_9_fu_719_p2() {
    tmp_9_fu_719_p2 = (tmp_reg_1120.read() | ap_const_lv11_4);
}

void load_input::thread_tmp_fu_663_p3() {
    tmp_fu_663_p3 = esl_concat<6,5>(ap_phi_mux_i_phi_fu_644_p4.read(), ap_const_lv5_0);
}

void load_input::thread_tmp_s_fu_724_p3() {
    tmp_s_fu_724_p3 = esl_concat<53,11>(ap_const_lv53_0, tmp_9_fu_719_p2.read());
}

void load_input::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond1_fu_651_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond1_fu_651_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage8_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            }
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage9_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            }
            break;
        case 2048 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage10_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            }
            break;
        case 4096 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage11_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            }
            break;
        case 8192 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage12_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            }
            break;
        case 16384 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage13_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            }
            break;
        case 32768 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage14_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            }
            break;
        case 65536 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage15_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            }
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<18>) ("XXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

