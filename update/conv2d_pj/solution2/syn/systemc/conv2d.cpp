// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv2d.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv2d::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv2d::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> conv2d::ap_ST_fsm_state1 = "1";
const sc_lv<6> conv2d::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<6> conv2d::ap_ST_fsm_state4 = "100";
const sc_lv<6> conv2d::ap_ST_fsm_state5 = "1000";
const sc_lv<6> conv2d::ap_ST_fsm_pp1_stage0 = "10000";
const sc_lv<6> conv2d::ap_ST_fsm_state9 = "100000";
const sc_lv<32> conv2d::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool conv2d::ap_const_boolean_1 = true;
const sc_lv<32> conv2d::ap_const_lv32_1 = "1";
const bool conv2d::ap_const_boolean_0 = false;
const sc_lv<1> conv2d::ap_const_lv1_0 = "0";
const sc_lv<32> conv2d::ap_const_lv32_4 = "100";
const sc_lv<1> conv2d::ap_const_lv1_1 = "1";
const sc_lv<32> conv2d::ap_const_lv32_3 = "11";
const sc_lv<11> conv2d::ap_const_lv11_0 = "00000000000";
const sc_lv<6> conv2d::ap_const_lv6_0 = "000000";
const sc_lv<10> conv2d::ap_const_lv10_0 = "0000000000";
const sc_lv<5> conv2d::ap_const_lv5_0 = "00000";
const sc_lv<32> conv2d::ap_const_lv32_2 = "10";
const sc_lv<11> conv2d::ap_const_lv11_400 = "10000000000";
const sc_lv<11> conv2d::ap_const_lv11_1 = "1";
const sc_lv<6> conv2d::ap_const_lv6_1 = "1";
const sc_lv<6> conv2d::ap_const_lv6_20 = "100000";
const sc_lv<10> conv2d::ap_const_lv10_384 = "1110000100";
const sc_lv<10> conv2d::ap_const_lv10_1 = "1";
const sc_lv<5> conv2d::ap_const_lv5_1 = "1";
const sc_lv<5> conv2d::ap_const_lv5_1E = "11110";
const sc_lv<32> conv2d::ap_const_lv32_5 = "101";

conv2d::conv2d(sc_module_name name) : sc_module(name), mVcdFile(0) {
    buffer_U = new conv2d_buffer("buffer_U");
    buffer_U->clk(ap_clk);
    buffer_U->reset(ap_rst);
    buffer_U->address0(buffer_address0);
    buffer_U->ce0(buffer_ce0);
    buffer_U->we0(buffer_we0);
    buffer_U->d0(input_r_q0);
    buffer_U->q0(buffer_q0);
    buffer_U->address1(grp_convolution_kernel_fu_206_buffer_r_address1);
    buffer_U->ce1(buffer_ce1);
    buffer_U->q1(buffer_q1);
    output_U = new conv2d_output("output_U");
    output_U->clk(ap_clk);
    output_U->reset(ap_rst);
    output_U->address0(output_address0);
    output_U->ce0(output_ce0);
    output_U->we0(output_we0);
    output_U->d0(grp_convolution_kernel_fu_206_output_r_d0);
    output_U->q0(output_q0);
    grp_convolution_kernel_fu_206 = new convolution_kernel("grp_convolution_kernel_fu_206");
    grp_convolution_kernel_fu_206->ap_clk(ap_clk);
    grp_convolution_kernel_fu_206->ap_rst(ap_rst);
    grp_convolution_kernel_fu_206->ap_start(grp_convolution_kernel_fu_206_ap_start);
    grp_convolution_kernel_fu_206->ap_done(grp_convolution_kernel_fu_206_ap_done);
    grp_convolution_kernel_fu_206->ap_idle(grp_convolution_kernel_fu_206_ap_idle);
    grp_convolution_kernel_fu_206->ap_ready(grp_convolution_kernel_fu_206_ap_ready);
    grp_convolution_kernel_fu_206->buffer_r_address0(grp_convolution_kernel_fu_206_buffer_r_address0);
    grp_convolution_kernel_fu_206->buffer_r_ce0(grp_convolution_kernel_fu_206_buffer_r_ce0);
    grp_convolution_kernel_fu_206->buffer_r_q0(buffer_q0);
    grp_convolution_kernel_fu_206->buffer_r_address1(grp_convolution_kernel_fu_206_buffer_r_address1);
    grp_convolution_kernel_fu_206->buffer_r_ce1(grp_convolution_kernel_fu_206_buffer_r_ce1);
    grp_convolution_kernel_fu_206->buffer_r_q1(buffer_q1);
    grp_convolution_kernel_fu_206->kernel_address0(grp_convolution_kernel_fu_206_kernel_address0);
    grp_convolution_kernel_fu_206->kernel_ce0(grp_convolution_kernel_fu_206_kernel_ce0);
    grp_convolution_kernel_fu_206->kernel_q0(kernel_q0);
    grp_convolution_kernel_fu_206->kernel_address1(grp_convolution_kernel_fu_206_kernel_address1);
    grp_convolution_kernel_fu_206->kernel_ce1(grp_convolution_kernel_fu_206_kernel_ce1);
    grp_convolution_kernel_fu_206->kernel_q1(kernel_q1);
    grp_convolution_kernel_fu_206->output_r_address0(grp_convolution_kernel_fu_206_output_r_address0);
    grp_convolution_kernel_fu_206->output_r_ce0(grp_convolution_kernel_fu_206_output_r_ce0);
    grp_convolution_kernel_fu_206->output_r_we0(grp_convolution_kernel_fu_206_output_r_we0);
    grp_convolution_kernel_fu_206->output_r_d0(grp_convolution_kernel_fu_206_output_r_d0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state7_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_pp1_stage0_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( exitcond_flatten_fu_214_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state6);
    sensitive << ( exitcond_flatten8_fu_287_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_ap_phi_mux_i_i3_phi_fu_188_p4);
    sensitive << ( i_i3_reg_184 );
    sensitive << ( exitcond_flatten8_reg_404 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( tmp_i5_mid2_v_reg_418 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_i_phi_fu_155_p4);
    sensitive << ( i_i_reg_151 );
    sensitive << ( exitcond_flatten_reg_375 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_i_mid2_v_reg_384 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_buffer_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( tmp_22_cast_reg_389 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_convolution_kernel_fu_206_buffer_r_address0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_buffer_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_convolution_kernel_fu_206_buffer_r_ce0 );

    SC_METHOD(thread_buffer_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_convolution_kernel_fu_206_buffer_r_ce1 );

    SC_METHOD(thread_buffer_we0);
    sensitive << ( exitcond_flatten_reg_375 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_exitcond_flatten8_fu_287_p2);
    sensitive << ( indvar_flatten6_reg_173 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_exitcond_flatten_fu_214_p2);
    sensitive << ( indvar_flatten_reg_140 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_i3_fu_232_p2);
    sensitive << ( j_i_reg_162 );
    sensitive << ( exitcond_flatten_fu_214_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_exitcond_i_fu_305_p2);
    sensitive << ( j_i7_reg_195 );
    sensitive << ( exitcond_flatten8_fu_287_p2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_grp_convolution_kernel_fu_206_ap_start);
    sensitive << ( grp_convolution_kernel_fu_206_ap_start_reg );

    SC_METHOD(thread_i_1_fu_299_p2);
    sensitive << ( ap_phi_mux_i_i3_phi_fu_188_p4 );

    SC_METHOD(thread_i_fu_226_p2);
    sensitive << ( ap_phi_mux_i_i_phi_fu_155_p4 );

    SC_METHOD(thread_indvar_flatten_next7_fu_293_p2);
    sensitive << ( indvar_flatten6_reg_173 );

    SC_METHOD(thread_indvar_flatten_next_fu_220_p2);
    sensitive << ( indvar_flatten_reg_140 );

    SC_METHOD(thread_input_r_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_22_cast_fu_276_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_input_r_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_2_fu_327_p2);
    sensitive << ( j_i7_mid2_fu_311_p3 );

    SC_METHOD(thread_j_fu_281_p2);
    sensitive << ( j_i_mid2_fu_238_p3 );

    SC_METHOD(thread_j_i7_mid2_fu_311_p3);
    sensitive << ( j_i7_reg_195 );
    sensitive << ( exitcond_i_fu_305_p2 );

    SC_METHOD(thread_j_i_mid2_fu_238_p3);
    sensitive << ( j_i_reg_162 );
    sensitive << ( exitcond_i3_fu_232_p2 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_convolution_kernel_fu_206_kernel_address0 );

    SC_METHOD(thread_kernel_address1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_convolution_kernel_fu_206_kernel_address1 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_convolution_kernel_fu_206_kernel_ce0 );

    SC_METHOD(thread_kernel_ce1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_convolution_kernel_fu_206_kernel_ce1 );

    SC_METHOD(thread_output_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( tmp_26_cast_fu_370_p1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( grp_convolution_kernel_fu_206_output_r_address0 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_output_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( grp_convolution_kernel_fu_206_output_r_ce0 );

    SC_METHOD(thread_output_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_convolution_kernel_fu_206_output_r_we0 );

    SC_METHOD(thread_p_shl1_cast_fu_351_p1);
    sensitive << ( tmp_22_fu_344_p3 );

    SC_METHOD(thread_p_shl_cast_fu_340_p1);
    sensitive << ( tmp_21_fu_333_p3 );

    SC_METHOD(thread_result_address0);
    sensitive << ( tmp_26_cast_reg_430 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_result_ce0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_result_d0);
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( output_q0 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_result_we0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( exitcond_flatten8_reg_404_pp1_iter1_reg );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_METHOD(thread_tmp_21_cast_fu_262_p1);
    sensitive << ( tmp_fu_254_p3 );

    SC_METHOD(thread_tmp_21_fu_333_p3);
    sensitive << ( tmp_i5_mid2_v_reg_418 );

    SC_METHOD(thread_tmp_22_cast_fu_276_p1);
    sensitive << ( tmp_s_fu_270_p2 );

    SC_METHOD(thread_tmp_22_fu_344_p3);
    sensitive << ( tmp_i5_mid2_v_reg_418 );

    SC_METHOD(thread_tmp_23_fu_355_p2);
    sensitive << ( p_shl_cast_fu_340_p1 );
    sensitive << ( p_shl1_cast_fu_351_p1 );

    SC_METHOD(thread_tmp_24_fu_364_p2);
    sensitive << ( tmp_23_fu_355_p2 );
    sensitive << ( tmp_2_i1_cast_fu_361_p1 );

    SC_METHOD(thread_tmp_26_cast_fu_370_p1);
    sensitive << ( tmp_24_fu_364_p2 );

    SC_METHOD(thread_tmp_2_i1_cast_fu_361_p1);
    sensitive << ( j_i7_mid2_reg_413 );

    SC_METHOD(thread_tmp_5_i_cast_fu_266_p1);
    sensitive << ( j_i_mid2_fu_238_p3 );

    SC_METHOD(thread_tmp_fu_254_p3);
    sensitive << ( tmp_i_mid2_v_fu_246_p3 );

    SC_METHOD(thread_tmp_i5_mid2_v_fu_319_p3);
    sensitive << ( ap_phi_mux_i_i3_phi_fu_188_p4 );
    sensitive << ( exitcond_i_fu_305_p2 );
    sensitive << ( i_1_fu_299_p2 );

    SC_METHOD(thread_tmp_i_mid2_v_fu_246_p3);
    sensitive << ( ap_phi_mux_i_i_phi_fu_155_p4 );
    sensitive << ( exitcond_i3_fu_232_p2 );
    sensitive << ( i_fu_226_p2 );

    SC_METHOD(thread_tmp_s_fu_270_p2);
    sensitive << ( tmp_5_i_cast_fu_266_p1 );
    sensitive << ( tmp_21_cast_fu_262_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( exitcond_flatten_fu_214_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( exitcond_flatten8_fu_287_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_convolution_kernel_fu_206_ap_done );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    grp_convolution_kernel_fu_206_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv2d_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_r_address0, "(port)input_r_address0");
    sc_trace(mVcdFile, input_r_ce0, "(port)input_r_ce0");
    sc_trace(mVcdFile, input_r_q0, "(port)input_r_q0");
    sc_trace(mVcdFile, kernel_address0, "(port)kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "(port)kernel_ce0");
    sc_trace(mVcdFile, kernel_q0, "(port)kernel_q0");
    sc_trace(mVcdFile, kernel_address1, "(port)kernel_address1");
    sc_trace(mVcdFile, kernel_ce1, "(port)kernel_ce1");
    sc_trace(mVcdFile, kernel_q1, "(port)kernel_q1");
    sc_trace(mVcdFile, result_address0, "(port)result_address0");
    sc_trace(mVcdFile, result_ce0, "(port)result_ce0");
    sc_trace(mVcdFile, result_we0, "(port)result_we0");
    sc_trace(mVcdFile, result_d0, "(port)result_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_140, "indvar_flatten_reg_140");
    sc_trace(mVcdFile, i_i_reg_151, "i_i_reg_151");
    sc_trace(mVcdFile, j_i_reg_162, "j_i_reg_162");
    sc_trace(mVcdFile, indvar_flatten6_reg_173, "indvar_flatten6_reg_173");
    sc_trace(mVcdFile, i_i3_reg_184, "i_i3_reg_184");
    sc_trace(mVcdFile, j_i7_reg_195, "j_i7_reg_195");
    sc_trace(mVcdFile, exitcond_flatten_fu_214_p2, "exitcond_flatten_fu_214_p2");
    sc_trace(mVcdFile, exitcond_flatten_reg_375, "exitcond_flatten_reg_375");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, indvar_flatten_next_fu_220_p2, "indvar_flatten_next_fu_220_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, tmp_i_mid2_v_fu_246_p3, "tmp_i_mid2_v_fu_246_p3");
    sc_trace(mVcdFile, tmp_i_mid2_v_reg_384, "tmp_i_mid2_v_reg_384");
    sc_trace(mVcdFile, tmp_22_cast_fu_276_p1, "tmp_22_cast_fu_276_p1");
    sc_trace(mVcdFile, tmp_22_cast_reg_389, "tmp_22_cast_reg_389");
    sc_trace(mVcdFile, j_fu_281_p2, "j_fu_281_p2");
    sc_trace(mVcdFile, exitcond_flatten8_fu_287_p2, "exitcond_flatten8_fu_287_p2");
    sc_trace(mVcdFile, exitcond_flatten8_reg_404, "exitcond_flatten8_reg_404");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter0, "ap_block_state6_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp1_stage0_iter1, "ap_block_state7_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state8_pp1_stage0_iter2, "ap_block_state8_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, exitcond_flatten8_reg_404_pp1_iter1_reg, "exitcond_flatten8_reg_404_pp1_iter1_reg");
    sc_trace(mVcdFile, indvar_flatten_next7_fu_293_p2, "indvar_flatten_next7_fu_293_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, j_i7_mid2_fu_311_p3, "j_i7_mid2_fu_311_p3");
    sc_trace(mVcdFile, j_i7_mid2_reg_413, "j_i7_mid2_reg_413");
    sc_trace(mVcdFile, tmp_i5_mid2_v_fu_319_p3, "tmp_i5_mid2_v_fu_319_p3");
    sc_trace(mVcdFile, tmp_i5_mid2_v_reg_418, "tmp_i5_mid2_v_reg_418");
    sc_trace(mVcdFile, j_2_fu_327_p2, "j_2_fu_327_p2");
    sc_trace(mVcdFile, tmp_26_cast_fu_370_p1, "tmp_26_cast_fu_370_p1");
    sc_trace(mVcdFile, tmp_26_cast_reg_430, "tmp_26_cast_reg_430");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_ap_ready, "grp_convolution_kernel_fu_206_ap_ready");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_ap_done, "grp_convolution_kernel_fu_206_ap_done");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state6, "ap_condition_pp1_exit_iter0_state6");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, buffer_address0, "buffer_address0");
    sc_trace(mVcdFile, buffer_ce0, "buffer_ce0");
    sc_trace(mVcdFile, buffer_we0, "buffer_we0");
    sc_trace(mVcdFile, buffer_q0, "buffer_q0");
    sc_trace(mVcdFile, buffer_ce1, "buffer_ce1");
    sc_trace(mVcdFile, buffer_q1, "buffer_q1");
    sc_trace(mVcdFile, output_address0, "output_address0");
    sc_trace(mVcdFile, output_ce0, "output_ce0");
    sc_trace(mVcdFile, output_we0, "output_we0");
    sc_trace(mVcdFile, output_q0, "output_q0");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_ap_start, "grp_convolution_kernel_fu_206_ap_start");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_ap_idle, "grp_convolution_kernel_fu_206_ap_idle");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_buffer_r_address0, "grp_convolution_kernel_fu_206_buffer_r_address0");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_buffer_r_ce0, "grp_convolution_kernel_fu_206_buffer_r_ce0");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_buffer_r_address1, "grp_convolution_kernel_fu_206_buffer_r_address1");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_buffer_r_ce1, "grp_convolution_kernel_fu_206_buffer_r_ce1");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_kernel_address0, "grp_convolution_kernel_fu_206_kernel_address0");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_kernel_ce0, "grp_convolution_kernel_fu_206_kernel_ce0");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_kernel_address1, "grp_convolution_kernel_fu_206_kernel_address1");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_kernel_ce1, "grp_convolution_kernel_fu_206_kernel_ce1");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_output_r_address0, "grp_convolution_kernel_fu_206_output_r_address0");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_output_r_ce0, "grp_convolution_kernel_fu_206_output_r_ce0");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_output_r_we0, "grp_convolution_kernel_fu_206_output_r_we0");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_output_r_d0, "grp_convolution_kernel_fu_206_output_r_d0");
    sc_trace(mVcdFile, ap_phi_mux_i_i_phi_fu_155_p4, "ap_phi_mux_i_i_phi_fu_155_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i_i3_phi_fu_188_p4, "ap_phi_mux_i_i3_phi_fu_188_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, grp_convolution_kernel_fu_206_ap_start_reg, "grp_convolution_kernel_fu_206_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond_i3_fu_232_p2, "exitcond_i3_fu_232_p2");
    sc_trace(mVcdFile, i_fu_226_p2, "i_fu_226_p2");
    sc_trace(mVcdFile, tmp_fu_254_p3, "tmp_fu_254_p3");
    sc_trace(mVcdFile, j_i_mid2_fu_238_p3, "j_i_mid2_fu_238_p3");
    sc_trace(mVcdFile, tmp_5_i_cast_fu_266_p1, "tmp_5_i_cast_fu_266_p1");
    sc_trace(mVcdFile, tmp_21_cast_fu_262_p1, "tmp_21_cast_fu_262_p1");
    sc_trace(mVcdFile, tmp_s_fu_270_p2, "tmp_s_fu_270_p2");
    sc_trace(mVcdFile, exitcond_i_fu_305_p2, "exitcond_i_fu_305_p2");
    sc_trace(mVcdFile, i_1_fu_299_p2, "i_1_fu_299_p2");
    sc_trace(mVcdFile, tmp_21_fu_333_p3, "tmp_21_fu_333_p3");
    sc_trace(mVcdFile, tmp_22_fu_344_p3, "tmp_22_fu_344_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_340_p1, "p_shl_cast_fu_340_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_351_p1, "p_shl1_cast_fu_351_p1");
    sc_trace(mVcdFile, tmp_23_fu_355_p2, "tmp_23_fu_355_p2");
    sc_trace(mVcdFile, tmp_2_i1_cast_fu_361_p1, "tmp_2_i1_cast_fu_361_p1");
    sc_trace(mVcdFile, tmp_24_fu_364_p2, "tmp_24_fu_364_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("conv2d.hdltvin.dat");
    mHdltvoutHandle.open("conv2d.hdltvout.dat");
}

conv2d::~conv2d() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete buffer_U;
    delete output_U;
    delete grp_convolution_kernel_fu_206;
}

void conv2d::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state6.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    esl_seteq<1,1,1>(grp_convolution_kernel_fu_206_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state6.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state6.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    esl_seteq<1,1,1>(grp_convolution_kernel_fu_206_ap_done.read(), ap_const_logic_1))) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_convolution_kernel_fu_206_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            grp_convolution_kernel_fu_206_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_convolution_kernel_fu_206_ap_ready.read())) {
            grp_convolution_kernel_fu_206_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_404.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        i_i3_reg_184 = tmp_i5_mid2_v_reg_418.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(grp_convolution_kernel_fu_206_ap_done.read(), ap_const_logic_1))) {
        i_i3_reg_184 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_375.read(), ap_const_lv1_0))) {
        i_i_reg_151 = tmp_i_mid2_v_reg_384.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_i_reg_151 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_287_p2.read()))) {
        indvar_flatten6_reg_173 = indvar_flatten_next7_fu_293_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(grp_convolution_kernel_fu_206_ap_done.read(), ap_const_logic_1))) {
        indvar_flatten6_reg_173 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_214_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_140 = indvar_flatten_next_fu_220_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_140 = ap_const_lv11_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_287_p2.read()))) {
        j_i7_reg_195 = j_2_fu_327_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(grp_convolution_kernel_fu_206_ap_done.read(), ap_const_logic_1))) {
        j_i7_reg_195 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_fu_214_p2.read(), ap_const_lv1_0))) {
        j_i_reg_162 = j_fu_281_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_i_reg_162 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten8_reg_404 = exitcond_flatten8_fu_287_p2.read();
        exitcond_flatten8_reg_404_pp1_iter1_reg = exitcond_flatten8_reg_404.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exitcond_flatten_reg_375 = exitcond_flatten_fu_214_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_287_p2.read()))) {
        j_i7_mid2_reg_413 = j_i7_mid2_fu_311_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_214_p2.read(), ap_const_lv1_0))) {
        tmp_22_cast_reg_389 = tmp_22_cast_fu_276_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_404.read()))) {
        tmp_26_cast_reg_430 = tmp_26_cast_fu_370_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_fu_287_p2.read()))) {
        tmp_i5_mid2_v_reg_418 = tmp_i5_mid2_v_fu_319_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(exitcond_flatten_fu_214_p2.read(), ap_const_lv1_0))) {
        tmp_i_mid2_v_reg_384 = tmp_i_mid2_v_fu_246_p3.read();
    }
}

void conv2d::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void conv2d::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[4];
}

void conv2d::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv2d::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void conv2d::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void conv2d::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[5];
}

void conv2d::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_block_state6_pp1_stage0_iter0() {
    ap_block_state6_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_block_state7_pp1_stage0_iter1() {
    ap_block_state7_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_block_state8_pp1_stage0_iter2() {
    ap_block_state8_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void conv2d::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(exitcond_flatten_fu_214_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void conv2d::thread_ap_condition_pp1_exit_iter0_state6() {
    if (esl_seteq<1,1,1>(exitcond_flatten8_fu_287_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state6 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state6 = ap_const_logic_0;
    }
}

void conv2d::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv2d::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void conv2d::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void conv2d::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv2d::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void conv2d::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void conv2d::thread_ap_phi_mux_i_i3_phi_fu_188_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_404.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_i3_phi_fu_188_p4 = tmp_i5_mid2_v_reg_418.read();
    } else {
        ap_phi_mux_i_i3_phi_fu_188_p4 = i_i3_reg_184.read();
    }
}

void conv2d::thread_ap_phi_mux_i_i_phi_fu_155_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_375.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_i_phi_fu_155_p4 = tmp_i_mid2_v_reg_384.read();
    } else {
        ap_phi_mux_i_i_phi_fu_155_p4 = i_i_reg_151.read();
    }
}

void conv2d::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv2d::thread_buffer_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        buffer_address0 =  (sc_lv<10>) (tmp_22_cast_reg_389.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        buffer_address0 = grp_convolution_kernel_fu_206_buffer_r_address0.read();
    } else {
        buffer_address0 = "XXXXXXXXXX";
    }
}

void conv2d::thread_buffer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        buffer_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        buffer_ce0 = grp_convolution_kernel_fu_206_buffer_r_ce0.read();
    } else {
        buffer_ce0 = ap_const_logic_0;
    }
}

void conv2d::thread_buffer_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        buffer_ce1 = grp_convolution_kernel_fu_206_buffer_r_ce1.read();
    } else {
        buffer_ce1 = ap_const_logic_0;
    }
}

void conv2d::thread_buffer_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(exitcond_flatten_reg_375.read(), ap_const_lv1_0))) {
        buffer_we0 = ap_const_logic_1;
    } else {
        buffer_we0 = ap_const_logic_0;
    }
}

void conv2d::thread_exitcond_flatten8_fu_287_p2() {
    exitcond_flatten8_fu_287_p2 = (!indvar_flatten6_reg_173.read().is_01() || !ap_const_lv10_384.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten6_reg_173.read() == ap_const_lv10_384);
}

void conv2d::thread_exitcond_flatten_fu_214_p2() {
    exitcond_flatten_fu_214_p2 = (!indvar_flatten_reg_140.read().is_01() || !ap_const_lv11_400.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_140.read() == ap_const_lv11_400);
}

void conv2d::thread_exitcond_i3_fu_232_p2() {
    exitcond_i3_fu_232_p2 = (!j_i_reg_162.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_i_reg_162.read() == ap_const_lv6_20);
}

void conv2d::thread_exitcond_i_fu_305_p2() {
    exitcond_i_fu_305_p2 = (!j_i7_reg_195.read().is_01() || !ap_const_lv5_1E.is_01())? sc_lv<1>(): sc_lv<1>(j_i7_reg_195.read() == ap_const_lv5_1E);
}

void conv2d::thread_grp_convolution_kernel_fu_206_ap_start() {
    grp_convolution_kernel_fu_206_ap_start = grp_convolution_kernel_fu_206_ap_start_reg.read();
}

void conv2d::thread_i_1_fu_299_p2() {
    i_1_fu_299_p2 = (!ap_phi_mux_i_i3_phi_fu_188_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_i_i3_phi_fu_188_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv2d::thread_i_fu_226_p2() {
    i_fu_226_p2 = (!ap_phi_mux_i_i_phi_fu_155_p4.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(ap_phi_mux_i_i_phi_fu_155_p4.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void conv2d::thread_indvar_flatten_next7_fu_293_p2() {
    indvar_flatten_next7_fu_293_p2 = (!indvar_flatten6_reg_173.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(indvar_flatten6_reg_173.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void conv2d::thread_indvar_flatten_next_fu_220_p2() {
    indvar_flatten_next_fu_220_p2 = (!indvar_flatten_reg_140.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(indvar_flatten_reg_140.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void conv2d::thread_input_r_address0() {
    input_r_address0 =  (sc_lv<10>) (tmp_22_cast_fu_276_p1.read());
}

void conv2d::thread_input_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        input_r_ce0 = ap_const_logic_1;
    } else {
        input_r_ce0 = ap_const_logic_0;
    }
}

void conv2d::thread_j_2_fu_327_p2() {
    j_2_fu_327_p2 = (!j_i7_mid2_fu_311_p3.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_i7_mid2_fu_311_p3.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void conv2d::thread_j_fu_281_p2() {
    j_fu_281_p2 = (!j_i_mid2_fu_238_p3.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_i_mid2_fu_238_p3.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void conv2d::thread_j_i7_mid2_fu_311_p3() {
    j_i7_mid2_fu_311_p3 = (!exitcond_i_fu_305_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_i_fu_305_p2.read()[0].to_bool())? ap_const_lv5_0: j_i7_reg_195.read());
}

void conv2d::thread_j_i_mid2_fu_238_p3() {
    j_i_mid2_fu_238_p3 = (!exitcond_i3_fu_232_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_i3_fu_232_p2.read()[0].to_bool())? ap_const_lv6_0: j_i_reg_162.read());
}

void conv2d::thread_kernel_address0() {
    kernel_address0 = grp_convolution_kernel_fu_206_kernel_address0.read();
}

void conv2d::thread_kernel_address1() {
    kernel_address1 = grp_convolution_kernel_fu_206_kernel_address1.read();
}

void conv2d::thread_kernel_ce0() {
    kernel_ce0 = grp_convolution_kernel_fu_206_kernel_ce0.read();
}

void conv2d::thread_kernel_ce1() {
    kernel_ce1 = grp_convolution_kernel_fu_206_kernel_ce1.read();
}

void conv2d::thread_output_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        output_address0 =  (sc_lv<10>) (tmp_26_cast_fu_370_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_address0 = grp_convolution_kernel_fu_206_output_r_address0.read();
    } else {
        output_address0 = "XXXXXXXXXX";
    }
}

void conv2d::thread_output_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        output_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_ce0 = grp_convolution_kernel_fu_206_output_r_ce0.read();
    } else {
        output_ce0 = ap_const_logic_0;
    }
}

void conv2d::thread_output_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        output_we0 = grp_convolution_kernel_fu_206_output_r_we0.read();
    } else {
        output_we0 = ap_const_logic_0;
    }
}

void conv2d::thread_p_shl1_cast_fu_351_p1() {
    p_shl1_cast_fu_351_p1 = esl_zext<11,6>(tmp_22_fu_344_p3.read());
}

void conv2d::thread_p_shl_cast_fu_340_p1() {
    p_shl_cast_fu_340_p1 = esl_zext<11,10>(tmp_21_fu_333_p3.read());
}

void conv2d::thread_result_address0() {
    result_address0 =  (sc_lv<10>) (tmp_26_cast_reg_430.read());
}

void conv2d::thread_result_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()))) {
        result_ce0 = ap_const_logic_1;
    } else {
        result_ce0 = ap_const_logic_0;
    }
}

void conv2d::thread_result_d0() {
    result_d0 = output_q0.read();
}

void conv2d::thread_result_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_flatten8_reg_404_pp1_iter1_reg.read()))) {
        result_we0 = ap_const_logic_1;
    } else {
        result_we0 = ap_const_logic_0;
    }
}

void conv2d::thread_tmp_21_cast_fu_262_p1() {
    tmp_21_cast_fu_262_p1 = esl_zext<12,11>(tmp_fu_254_p3.read());
}

void conv2d::thread_tmp_21_fu_333_p3() {
    tmp_21_fu_333_p3 = esl_concat<5,5>(tmp_i5_mid2_v_reg_418.read(), ap_const_lv5_0);
}

void conv2d::thread_tmp_22_cast_fu_276_p1() {
    tmp_22_cast_fu_276_p1 = esl_zext<64,12>(tmp_s_fu_270_p2.read());
}

void conv2d::thread_tmp_22_fu_344_p3() {
    tmp_22_fu_344_p3 = esl_concat<5,1>(tmp_i5_mid2_v_reg_418.read(), ap_const_lv1_0);
}

void conv2d::thread_tmp_23_fu_355_p2() {
    tmp_23_fu_355_p2 = (!p_shl_cast_fu_340_p1.read().is_01() || !p_shl1_cast_fu_351_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(p_shl_cast_fu_340_p1.read()) - sc_biguint<11>(p_shl1_cast_fu_351_p1.read()));
}

void conv2d::thread_tmp_24_fu_364_p2() {
    tmp_24_fu_364_p2 = (!tmp_23_fu_355_p2.read().is_01() || !tmp_2_i1_cast_fu_361_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp_23_fu_355_p2.read()) + sc_biguint<11>(tmp_2_i1_cast_fu_361_p1.read()));
}

void conv2d::thread_tmp_26_cast_fu_370_p1() {
    tmp_26_cast_fu_370_p1 = esl_sext<64,11>(tmp_24_fu_364_p2.read());
}

void conv2d::thread_tmp_2_i1_cast_fu_361_p1() {
    tmp_2_i1_cast_fu_361_p1 = esl_zext<11,5>(j_i7_mid2_reg_413.read());
}

void conv2d::thread_tmp_5_i_cast_fu_266_p1() {
    tmp_5_i_cast_fu_266_p1 = esl_zext<12,6>(j_i_mid2_fu_238_p3.read());
}

void conv2d::thread_tmp_fu_254_p3() {
    tmp_fu_254_p3 = esl_concat<6,5>(tmp_i_mid2_v_fu_246_p3.read(), ap_const_lv5_0);
}

void conv2d::thread_tmp_i5_mid2_v_fu_319_p3() {
    tmp_i5_mid2_v_fu_319_p3 = (!exitcond_i_fu_305_p2.read()[0].is_01())? sc_lv<5>(): ((exitcond_i_fu_305_p2.read()[0].to_bool())? i_1_fu_299_p2.read(): ap_phi_mux_i_i3_phi_fu_188_p4.read());
}

void conv2d::thread_tmp_i_mid2_v_fu_246_p3() {
    tmp_i_mid2_v_fu_246_p3 = (!exitcond_i3_fu_232_p2.read()[0].is_01())? sc_lv<6>(): ((exitcond_i3_fu_232_p2.read()[0].to_bool())? i_fu_226_p2.read(): ap_phi_mux_i_i_phi_fu_155_p4.read());
}

void conv2d::thread_tmp_s_fu_270_p2() {
    tmp_s_fu_270_p2 = (!tmp_5_i_cast_fu_266_p1.read().is_01() || !tmp_21_cast_fu_262_p1.read().is_01())? sc_lv<12>(): (sc_biguint<12>(tmp_5_i_cast_fu_266_p1.read()) + sc_biguint<12>(tmp_21_cast_fu_262_p1.read()));
}

void conv2d::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_214_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten_fu_214_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_convolution_kernel_fu_206_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(exitcond_flatten8_fu_287_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(exitcond_flatten8_fu_287_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void conv2d::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_address0\" :  \"" << input_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"input_r_ce0\" :  \"" << input_r_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_q0\" :  \"" << input_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address0\" :  \"" << kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce0\" :  \"" << kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q0\" :  \"" << kernel_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_address1\" :  \"" << kernel_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"kernel_ce1\" :  \"" << kernel_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"kernel_q1\" :  \"" << kernel_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_address0\" :  \"" << result_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_ce0\" :  \"" << result_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_we0\" :  \"" << result_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"result_d0\" :  \"" << result_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

