// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv2d_HH_
#define _conv2d_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convolution_kernel.h"
#include "conv2d_buffer.h"
#include "conv2d_output.h"

namespace ap_rtl {

struct conv2d : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > input_r_address0;
    sc_out< sc_logic > input_r_ce0;
    sc_in< sc_lv<32> > input_r_q0;
    sc_out< sc_lv<4> > kernel_address0;
    sc_out< sc_logic > kernel_ce0;
    sc_in< sc_lv<32> > kernel_q0;
    sc_out< sc_lv<4> > kernel_address1;
    sc_out< sc_logic > kernel_ce1;
    sc_in< sc_lv<32> > kernel_q1;
    sc_out< sc_lv<10> > result_address0;
    sc_out< sc_logic > result_ce0;
    sc_out< sc_logic > result_we0;
    sc_out< sc_lv<32> > result_d0;


    // Module declarations
    conv2d(sc_module_name name);
    SC_HAS_PROCESS(conv2d);

    ~conv2d();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    conv2d_buffer* buffer_U;
    conv2d_output* output_U;
    convolution_kernel* grp_convolution_kernel_fu_206;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<11> > indvar_flatten_reg_140;
    sc_signal< sc_lv<6> > i_i_reg_151;
    sc_signal< sc_lv<6> > j_i_reg_162;
    sc_signal< sc_lv<10> > indvar_flatten6_reg_173;
    sc_signal< sc_lv<5> > i_i3_reg_184;
    sc_signal< sc_lv<5> > j_i7_reg_195;
    sc_signal< sc_lv<1> > exitcond_flatten_fu_214_p2;
    sc_signal< sc_lv<1> > exitcond_flatten_reg_375;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<11> > indvar_flatten_next_fu_220_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<6> > tmp_i_mid2_v_fu_246_p3;
    sc_signal< sc_lv<6> > tmp_i_mid2_v_reg_384;
    sc_signal< sc_lv<64> > tmp_22_cast_fu_276_p1;
    sc_signal< sc_lv<64> > tmp_22_cast_reg_389;
    sc_signal< sc_lv<6> > j_fu_281_p2;
    sc_signal< sc_lv<1> > exitcond_flatten8_fu_287_p2;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_404;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter2;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_flatten8_reg_404_pp1_iter1_reg;
    sc_signal< sc_lv<10> > indvar_flatten_next7_fu_293_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<5> > j_i7_mid2_fu_311_p3;
    sc_signal< sc_lv<5> > j_i7_mid2_reg_413;
    sc_signal< sc_lv<5> > tmp_i5_mid2_v_fu_319_p3;
    sc_signal< sc_lv<5> > tmp_i5_mid2_v_reg_418;
    sc_signal< sc_lv<5> > j_2_fu_327_p2;
    sc_signal< sc_lv<64> > tmp_26_cast_fu_370_p1;
    sc_signal< sc_lv<64> > tmp_26_cast_reg_430;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_ap_ready;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_ap_done;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state6;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<10> > buffer_address0;
    sc_signal< sc_logic > buffer_ce0;
    sc_signal< sc_logic > buffer_we0;
    sc_signal< sc_lv<32> > buffer_q0;
    sc_signal< sc_logic > buffer_ce1;
    sc_signal< sc_lv<32> > buffer_q1;
    sc_signal< sc_lv<10> > output_address0;
    sc_signal< sc_logic > output_ce0;
    sc_signal< sc_logic > output_we0;
    sc_signal< sc_lv<32> > output_q0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_ap_start;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_ap_idle;
    sc_signal< sc_lv<10> > grp_convolution_kernel_fu_206_buffer_r_address0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_buffer_r_ce0;
    sc_signal< sc_lv<10> > grp_convolution_kernel_fu_206_buffer_r_address1;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_buffer_r_ce1;
    sc_signal< sc_lv<4> > grp_convolution_kernel_fu_206_kernel_address0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_kernel_ce0;
    sc_signal< sc_lv<4> > grp_convolution_kernel_fu_206_kernel_address1;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_kernel_ce1;
    sc_signal< sc_lv<10> > grp_convolution_kernel_fu_206_output_r_address0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_output_r_ce0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_output_r_we0;
    sc_signal< sc_lv<32> > grp_convolution_kernel_fu_206_output_r_d0;
    sc_signal< sc_lv<6> > ap_phi_mux_i_i_phi_fu_155_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<5> > ap_phi_mux_i_i3_phi_fu_188_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_logic > grp_convolution_kernel_fu_206_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond_i3_fu_232_p2;
    sc_signal< sc_lv<6> > i_fu_226_p2;
    sc_signal< sc_lv<11> > tmp_fu_254_p3;
    sc_signal< sc_lv<6> > j_i_mid2_fu_238_p3;
    sc_signal< sc_lv<12> > tmp_5_i_cast_fu_266_p1;
    sc_signal< sc_lv<12> > tmp_21_cast_fu_262_p1;
    sc_signal< sc_lv<12> > tmp_s_fu_270_p2;
    sc_signal< sc_lv<1> > exitcond_i_fu_305_p2;
    sc_signal< sc_lv<5> > i_1_fu_299_p2;
    sc_signal< sc_lv<10> > tmp_21_fu_333_p3;
    sc_signal< sc_lv<6> > tmp_22_fu_344_p3;
    sc_signal< sc_lv<11> > p_shl_cast_fu_340_p1;
    sc_signal< sc_lv<11> > p_shl1_cast_fu_351_p1;
    sc_signal< sc_lv<11> > tmp_23_fu_355_p2;
    sc_signal< sc_lv<11> > tmp_2_i1_cast_fu_361_p1;
    sc_signal< sc_lv<11> > tmp_24_fu_364_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_pp1_stage0;
    static const sc_lv<6> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<11> ap_const_lv11_400;
    static const sc_lv<11> ap_const_lv11_1;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<10> ap_const_lv10_384;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_1E;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state6_pp1_stage0_iter0();
    void thread_ap_block_state7_pp1_stage0_iter1();
    void thread_ap_block_state8_pp1_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state6();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_i_i3_phi_fu_188_p4();
    void thread_ap_phi_mux_i_i_phi_fu_155_p4();
    void thread_ap_ready();
    void thread_buffer_address0();
    void thread_buffer_ce0();
    void thread_buffer_ce1();
    void thread_buffer_we0();
    void thread_exitcond_flatten8_fu_287_p2();
    void thread_exitcond_flatten_fu_214_p2();
    void thread_exitcond_i3_fu_232_p2();
    void thread_exitcond_i_fu_305_p2();
    void thread_grp_convolution_kernel_fu_206_ap_start();
    void thread_i_1_fu_299_p2();
    void thread_i_fu_226_p2();
    void thread_indvar_flatten_next7_fu_293_p2();
    void thread_indvar_flatten_next_fu_220_p2();
    void thread_input_r_address0();
    void thread_input_r_ce0();
    void thread_j_2_fu_327_p2();
    void thread_j_fu_281_p2();
    void thread_j_i7_mid2_fu_311_p3();
    void thread_j_i_mid2_fu_238_p3();
    void thread_kernel_address0();
    void thread_kernel_address1();
    void thread_kernel_ce0();
    void thread_kernel_ce1();
    void thread_output_address0();
    void thread_output_ce0();
    void thread_output_we0();
    void thread_p_shl1_cast_fu_351_p1();
    void thread_p_shl_cast_fu_340_p1();
    void thread_result_address0();
    void thread_result_ce0();
    void thread_result_d0();
    void thread_result_we0();
    void thread_tmp_21_cast_fu_262_p1();
    void thread_tmp_21_fu_333_p3();
    void thread_tmp_22_cast_fu_276_p1();
    void thread_tmp_22_fu_344_p3();
    void thread_tmp_23_fu_355_p2();
    void thread_tmp_24_fu_364_p2();
    void thread_tmp_26_cast_fu_370_p1();
    void thread_tmp_2_i1_cast_fu_361_p1();
    void thread_tmp_5_i_cast_fu_266_p1();
    void thread_tmp_fu_254_p3();
    void thread_tmp_i5_mid2_v_fu_319_p3();
    void thread_tmp_i_mid2_v_fu_246_p3();
    void thread_tmp_s_fu_270_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
